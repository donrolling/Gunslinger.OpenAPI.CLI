{
	"swagger": "2.0",
	"info": {
		"title": "LoanPro API Explorer",
		"description": "Build your applications on top of LoanPro!",
		"version": "1.0.0"
	},
	"securityDefinitions": {
		"Token": {
			"type": "apiKey",
			"name": "Authorization",
			"in": "header",
			"description": "Enter your bearer token in the format **Bearer &lt;token>**."
		},
		"TenantID": {
			"type": "apiKey",
			"name": "autopal-instance-id",
			"in": "header",
			"description": "Tenant ID."
		}
	},
	"security": {
		"Token": [],
		"TenantID": []
	},
	"host": "loanpro.simnang.com",
	"schemes": [ "https" ],
	"basePath": "\/api\/public\/api\/1",
	"produces": [ "application\/json" ],
	"paths": {
		"\/odata.svc\/Loans": {
			"post": {
				"summary": "Add a New Loan",
				"description": "Create a new loan with the specified settings. <br \/>For additional information, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=1849'>API - Create a Loan<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to create Loans",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Loans" }
					}
				],
				"tags": [ "Loan" ],
				"responses": {
					"200": {
						"description": "Insert successful",
						"schema": { "$ref": "#\/definitions\/Loans" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Loans",
				"description": "Get all existing Loans",
				"tags": [ "Loan" ],
				"responses": {
					"200": {
						"description": "An array of Loans",
						"schema": {
							"type": "array",
							"items": { "$ref": "#\/definitions\/Loans" }
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Loans({id})": {
			"put": {
				"summary": "Edit Loan",
				"description": "Update a single loan.<br \/>To Learn more about updating entities, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2127'>API - Updating Entities<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to update Loans",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Loans" }
					},
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Loans to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"tags": [ "Loan" ],
				"responses": {
					"200": {
						"description": "Update successful",
						"schema": { "$ref": "#\/definitions\/Loans" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Loans",
				"description": "Get all existing Loans",
				"tags": [ "Loan" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Loans to get",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "A single object from a collection of Loans",
						"schema": { "$ref": "#\/definitions\/Loans" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Address": {
			"post": {
				"summary": "Add Address",
				"description": "Add a new address.",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to create Address",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Address" }
					}
				],
				"tags": [ "Address" ],
				"responses": {
					"200": {
						"description": "Insert successful",
						"schema": { "$ref": "#\/definitions\/Address" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Address",
				"description": "Get all existing Address",
				"tags": [ "Address" ],
				"responses": {
					"200": {
						"description": "An array of Address",
						"schema": {
							"type": "array",
							"items": { "$ref": "#\/definitions\/Address" }
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Address({id})": {
			"delete": {
				"summary": "Delete Address",
				"description": "Marks address as deleted.",
				"tags": [ "Address" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID to delete",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": { "description": "Delete successful" },
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"put": {
				"summary": "Update address",
				"description": "Updates address.",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to update Address",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Address" }
					},
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Address to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"tags": [ "Address" ],
				"responses": {
					"200": {
						"description": "Update successful",
						"schema": { "$ref": "#\/definitions\/Address" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Address",
				"description": "Get all existing Address",
				"tags": [ "Address" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Address to get",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "A single object from a collection of Address",
						"schema": { "$ref": "#\/definitions\/Address" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Customers": {
			"post": {
				"summary": "Add Customer",
				"description": "Create a new customer with the specified settings.<br \/>To learn more, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=1873'>API - Creating a Customer<\/a>.<br \/>To learn about LoanPro specific field types for a customer, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2104'>API - Customer Collections<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to create Customers",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Customers" }
					}
				],
				"tags": [ "Customer" ],
				"responses": {
					"200": {
						"description": "Insert successful",
						"schema": { "$ref": "#\/definitions\/Customers" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Customers",
				"description": "Get all existing Customers",
				"tags": [ "Customer" ],
				"responses": {
					"200": {
						"description": "An array of Customers",
						"schema": {
							"type": "array",
							"items": { "$ref": "#\/definitions\/Customers" }
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Customers({id})": {
			"put": {
				"summary": "Update Customer",
				"description": "Update an existing customer with the values provided.<br \/>To Learn more about updating entities, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2127'>API - Updating Entities<\/a>.<br \/>To learn more about the Customer entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=1873'>API - Creating a Customer<\/a>.<br \/>To learn about LoanPro specific field types for a customer, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2104'>API - Customer Collections<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to update Customers",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Customers" }
					},
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Customers to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"tags": [ "Customer" ],
				"responses": {
					"200": {
						"description": "Update successful",
						"schema": { "$ref": "#\/definitions\/Customers" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Customers",
				"description": "Get all existing Customers",
				"tags": [ "Customer" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Customers to get",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "A single object from a collection of Customers",
						"schema": { "$ref": "#\/definitions\/Customers" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Collateral": {
			"post": {
				"summary": "Add Collateral",
				"description": "Add Collateral.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br \/>To learn more about Collateral entities, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2070'>API - Add Collateral to a Loan<\/a>.<br \/>To learn more about LoanPro specific field types, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2072'>Collateral Collections<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to create Collateral",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Collateral" }
					}
				],
				"tags": [ "Collateral" ],
				"responses": {
					"200": {
						"description": "Insert successful",
						"schema": { "$ref": "#\/definitions\/Collateral" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Collateral",
				"description": "Get all existing Collateral",
				"tags": [ "Collateral" ],
				"responses": {
					"200": {
						"description": "An array of Collateral",
						"schema": {
							"type": "array",
							"items": { "$ref": "#\/definitions\/Collateral" }
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Collateral({id})": {
			"put": {
				"summary": "Update Collateral.",
				"description": "Update Collateral.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br \/>To Learn more about updating entities, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2127'>API - Updating Entities<\/a>.<br \/>To learn more about Collateral entities, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2070'>API - Add Collateral to a Loan<\/a>.<br \/>To learn more about LoanPro specific field types, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2072'>Collateral Collections<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to update Collateral",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Collateral" }
					},
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Collateral to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"tags": [ "Collateral" ],
				"responses": {
					"200": {
						"description": "Update successful",
						"schema": { "$ref": "#\/definitions\/Collateral" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Collateral",
				"description": "Get all existing Collateral",
				"tags": [ "Collateral" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Collateral to get",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "A single object from a collection of Collateral",
						"schema": { "$ref": "#\/definitions\/Collateral" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Payments": {
			"post": {
				"summary": "Add Payment",
				"description": "Add Payment.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br \/>To learn more about logging payments, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2117'>API - Logging a Payment<\/a>.<br \/>To learn more about processing payments, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2123'>API - Processing a Payment<\/a>.<br \/>To learn more about LoanPro specific field types, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2118'>API - Payment Collections<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to create Payments",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Payments" }
					}
				],
				"tags": [ "Payments" ],
				"responses": {
					"200": {
						"description": "Insert successful",
						"schema": { "$ref": "#\/definitions\/Payments" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Payments",
				"description": "Get all existing Payments",
				"tags": [ "Payments" ],
				"responses": {
					"200": {
						"description": "An array of Payments",
						"schema": {
							"type": "array",
							"items": { "$ref": "#\/definitions\/Payments" }
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Payments({id})": {
			"delete": {
				"summary": "Delete Payment",
				"description": "Delete Payment.",
				"tags": [ "Payments" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID to delete",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": { "description": "Delete successful" },
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"put": {
				"summary": "Update Payment",
				"description": "Update Payment.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br \/>To Learn more about updating entities, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2127'>API - Updating Entities<\/a>.<br \/>To learn more about updating payments, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2653'>API - Updating Payments<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to update Payments",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Payments" }
					},
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Payments to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"tags": [ "Payments" ],
				"responses": {
					"200": {
						"description": "Update successful",
						"schema": { "$ref": "#\/definitions\/Payments" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Payments",
				"description": "Get all existing Payments",
				"tags": [ "Payments" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Payments to get",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "A single object from a collection of Payments",
						"schema": { "$ref": "#\/definitions\/Payments" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Charges": {
			"post": {
				"summary": "Add Charge",
				"description": "Add Charge.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br \/>To learn more, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2129'>API - Creating Charges<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to create Charges",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Charges" }
					}
				],
				"tags": [ "Charges" ],
				"responses": {
					"200": {
						"description": "Insert successful",
						"schema": { "$ref": "#\/definitions\/Charges" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Charges",
				"description": "Get all existing Charges",
				"tags": [ "Charges" ],
				"responses": {
					"200": {
						"description": "An array of Charges",
						"schema": {
							"type": "array",
							"items": { "$ref": "#\/definitions\/Charges" }
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Charges({id})": {
			"delete": {
				"summary": "Delete Charge",
				"description": "Delete Charge.",
				"tags": [ "Charges" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID to delete",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": { "description": "Delete successful" },
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"put": {
				"summary": "Update Charge",
				"description": "Update Charge.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br \/>To Learn more about updating entities, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2127'>API - Updating Entities<\/a>.<br \/>To learn more about updating charges, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2662'>API - Updating Charges<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to update Charges",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Charges" }
					},
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Charges to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"tags": [ "Charges" ],
				"responses": {
					"200": {
						"description": "Update successful",
						"schema": { "$ref": "#\/definitions\/Charges" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Charges",
				"description": "Get all existing Charges",
				"tags": [ "Charges" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Charges to get",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "A single object from a collection of Charges",
						"schema": { "$ref": "#\/definitions\/Charges" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/LoanDocuments": {
			"post": {
				"summary": "Add Loan Documents",
				"description": "Add Loan Documents.<br \/>To learn more, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2376'>API - Documents<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to create LoanDocuments",
						"required": true,
						"schema": { "$ref": "#\/definitions\/LoanDocuments" }
					}
				],
				"tags": [ "LoanDocuments" ],
				"responses": {
					"200": {
						"description": "Insert successful",
						"schema": { "$ref": "#\/definitions\/LoanDocuments" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get LoanDocuments",
				"description": "Get all existing LoanDocuments",
				"tags": [ "LoanDocuments" ],
				"responses": {
					"200": {
						"description": "An array of LoanDocuments",
						"schema": {
							"type": "array",
							"items": { "$ref": "#\/definitions\/LoanDocuments" }
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/LoanDocuments({id})": {
			"put": {
				"summary": "Update Loan Documents",
				"description": "Update Loan Documents.<br \/>To learn more, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2376'>API - Documents<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to update LoanDocuments",
						"required": true,
						"schema": { "$ref": "#\/definitions\/LoanDocuments" }
					},
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of LoanDocuments to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"tags": [ "LoanDocuments" ],
				"responses": {
					"200": {
						"description": "Update successful",
						"schema": { "$ref": "#\/definitions\/LoanDocuments" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"delete": {
				"summary": "Delete Loan Documents",
				"description": "Delete Loan Documents.",
				"tags": [ "LoanDocuments" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID to delete",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": { "description": "Delete successful" },
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get LoanDocuments",
				"description": "Get all existing LoanDocuments",
				"tags": [ "LoanDocuments" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of LoanDocuments to get",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "A single object from a collection of LoanDocuments",
						"schema": { "$ref": "#\/definitions\/LoanDocuments" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Notes": {
			"post": {
				"summary": "Add Note",
				"description": "Add a Note.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br \/>To learn more about Note entities, see <a href='https:\/\/help-loanpro.simnang.com\/wp-admin\/post.php?post=2136&action=edit' target='_blank'>API - Creating notes<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to create Notes",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Notes" }
					}
				],
				"tags": [ "Notes" ],
				"responses": {
					"200": {
						"description": "Insert successful",
						"schema": { "$ref": "#\/definitions\/Notes" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Notes",
				"description": "Get all existing Notes",
				"tags": [ "Notes" ],
				"responses": {
					"200": {
						"description": "An array of Notes",
						"schema": {
							"type": "array",
							"items": { "$ref": "#\/definitions\/Notes" }
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Notes({id})": {
			"put": {
				"summary": "Update Note",
				"description": "Update a Note.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br \/>To Learn more about updating entities, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2127'>API - Updating Entities<\/a><br \/>To learn more about Note entities, see <a href='https:\/\/help-loanpro.simnang.com\/wp-admin\/post.php?post=2136&action=edit' target='_blank'>API - Creating notes<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to update Notes",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Notes" }
					},
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Notes to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"tags": [ "Notes" ],
				"responses": {
					"200": {
						"description": "Update successful",
						"schema": { "$ref": "#\/definitions\/Notes" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Notes",
				"description": "Get all existing Notes",
				"tags": [ "Notes" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Notes to get",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "A single object from a collection of Notes",
						"schema": { "$ref": "#\/definitions\/Notes" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/LoanSettings": {
			"post": {
				"summary": "Add Loan Settings",
				"description": "Add loan settings.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br \/>To learn more about Loan Settings, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2111'>API - Loan Settings<\/a><br \/>To learn more about the specific LoanPro field types for loan settings, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2113'>API - Loan Settings Collections<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to create LoanSettings",
						"required": true,
						"schema": { "$ref": "#\/definitions\/LoanSettings" }
					}
				],
				"tags": [ "LoanSettings" ],
				"responses": {
					"200": {
						"description": "Insert successful",
						"schema": { "$ref": "#\/definitions\/LoanSettings" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get LoanSettings",
				"description": "Get all existing LoanSettings",
				"tags": [ "LoanSettings" ],
				"responses": {
					"200": {
						"description": "An array of LoanSettings",
						"schema": {
							"type": "array",
							"items": { "$ref": "#\/definitions\/LoanSettings" }
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/LoanSettings({id})": {
			"delete": {
				"summary": "Delete Loan Settings",
				"description": "Delete loan settings.",
				"tags": [ "LoanSettings" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID to delete",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": { "description": "Delete successful" },
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"put": {
				"summary": "Update Loan Settings",
				"description": "Update loan settings.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br \/>To Learn more about updating entities, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2127'>API - Updating Entities<\/a><br \/>To learn more about Loan Settings, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2111'>API - Loan Settings<\/a><br \/>To learn more about the specific LoanPro field types for loan settings, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2113'>API - Loan Settings Collections<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to update LoanSettings",
						"required": true,
						"schema": { "$ref": "#\/definitions\/LoanSettings" }
					},
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of LoanSettings to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"tags": [ "LoanSettings" ],
				"responses": {
					"200": {
						"description": "Update successful",
						"schema": { "$ref": "#\/definitions\/LoanSettings" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get LoanSettings",
				"description": "Get all existing LoanSettings",
				"tags": [ "LoanSettings" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of LoanSettings to get",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "A single object from a collection of LoanSettings",
						"schema": { "$ref": "#\/definitions\/LoanSettings" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/LoanSetup": {
			"post": {
				"summary": "Add Loan Setup",
				"description": "Add Loan Setup.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br\/>For more details, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2076'>API-Loan Setup<\/a><br \/>For a list of possible values for the LoanPro specific field types, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2077'>API - Loan Setup Collections<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to create LoanSetup",
						"required": true,
						"schema": { "$ref": "#\/definitions\/LoanSetup" }
					}
				],
				"tags": [ "LoanSetup" ],
				"responses": {
					"200": {
						"description": "Insert successful",
						"schema": { "$ref": "#\/definitions\/LoanSetup" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get LoanSetup",
				"description": "Get all existing LoanSetup",
				"tags": [ "LoanSetup" ],
				"responses": {
					"200": {
						"description": "An array of LoanSetup",
						"schema": {
							"type": "array",
							"items": { "$ref": "#\/definitions\/LoanSetup" }
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/LoanSetup({id})": {
			"delete": {
				"summary": "Delete Loan Setup",
				"description": "Delete Loan Setup.",
				"tags": [ "LoanSetup" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID to delete",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": { "description": "Delete successful" },
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"put": {
				"summary": "Update Loan Setup",
				"description": "Update Loan Setup.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br \/>To Learn more about updating entities, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2127'>API - Updating Entities<\/a><br\/>For more details, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2076'>API-Loan Setup<\/a><br \/>For a list of possible values for the LoanPro specific field types, see <a  target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2077'>API - Loan Setup Collections<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to update LoanSetup",
						"required": true,
						"schema": { "$ref": "#\/definitions\/LoanSetup" }
					},
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of LoanSetup to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"tags": [ "LoanSetup" ],
				"responses": {
					"200": {
						"description": "Update successful",
						"schema": { "$ref": "#\/definitions\/LoanSetup" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get LoanSetup",
				"description": "Get all existing LoanSetup",
				"tags": [ "LoanSetup" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of LoanSetup to get",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "A single object from a collection of LoanSetup",
						"schema": { "$ref": "#\/definitions\/LoanSetup" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/LoanTransactions": {
			"get": {
				"summary": "Get LoanTransactions",
				"description": "Get all existing LoanTransactions",
				"tags": [ "LoanTransactions" ],
				"responses": {
					"200": {
						"description": "An array of LoanTransactions",
						"schema": {
							"type": "array",
							"items": { "$ref": "#\/definitions\/LoanTransactions" }
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/LoanTransactions({id})": {
			"get": {
				"summary": "Get LoanTransactions",
				"description": "Get all existing LoanTransactions",
				"tags": [ "LoanTransactions" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of LoanTransactions to get",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "A single object from a collection of LoanTransactions",
						"schema": { "$ref": "#\/definitions\/LoanTransactions" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Promises": {
			"post": {
				"summary": "Add Promise",
				"description": "Add Promise.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br \/>To learn more about promises, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2145'>API - Promises<\/a><br \/>To learn more about LoanPro specific field types, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2146'>API - Promise Collection<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to create Promises",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Promises" }
					}
				],
				"tags": [ "Promises" ],
				"responses": {
					"200": {
						"description": "Insert successful",
						"schema": { "$ref": "#\/definitions\/Promises" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Promises",
				"description": "Get all existing Promises",
				"tags": [ "Promises" ],
				"responses": {
					"200": {
						"description": "An array of Promises",
						"schema": {
							"type": "array",
							"items": { "$ref": "#\/definitions\/Promises" }
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/Promises({id})": {
			"put": {
				"summary": "Update Promise",
				"description": "Update Promise.<br \/>To learn more about directly accessing an entity, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2668'>API - Direct entity access<\/a>.<br \/>To Learn more about updating entities, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2127'>API - Updating Entities<\/a>.<br \/>To learn more about promises, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2145'>API - Promises<\/a><br \/>To learn more about LoanPro specific field types, see <a target='_blank' href='https:\/\/help-loanpro.simnang.com\/?p=2146'>API - Promise Collection<\/a>",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to update Promises",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Promises" }
					},
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Promises to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"tags": [ "Promises" ],
				"responses": {
					"200": {
						"description": "Update successful",
						"schema": { "$ref": "#\/definitions\/Promises" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get Promises",
				"description": "Get all existing Promises",
				"tags": [ "Promises" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of Promises to get",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "A single object from a collection of Promises",
						"schema": { "$ref": "#\/definitions\/Promises" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/CollateralFields": {
			"get": {
				"summary": "Get CollateralFields",
				"description": "Get all existing CollateralFields",
				"tags": [ "CollateralFields" ],
				"responses": {
					"200": {
						"description": "An array of CollateralFields",
						"schema": {
							"type": "array",
							"items": { "$ref": "#\/definitions\/Error-OData" }
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		},
		"\/odata.svc\/CollateralFields({id})": {
			"put": {
				"summary": "Update Checklist",
				"description": "Updates a Collateral Filed.",
				"consumes": [ "application\/json" ],
				"produces": [ "application\/json" ],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Payload to update CollateralFields",
						"required": true,
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					},
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of CollateralFields to update",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"tags": [ "CollateralFields" ],
				"responses": {
					"200": {
						"description": "Update successful",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			},
			"get": {
				"summary": "Get CollateralFields",
				"description": "Get all existing CollateralFields",
				"tags": [ "CollateralFields" ],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "ID of object in collection of CollateralFields to get",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "A single object from a collection of CollateralFields",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					},
					"500": {
						"description": "Unexpected error",
						"schema": { "$ref": "#\/definitions\/Error-OData" }
					}
				}
			}
		}
	},
	"definitions": {
		"Error-OData": { "properties": { "error": { "type": "string" } } },
		"Users": {
			"required": [ "gender" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"firstName": {
					"type": "string",
					"description": "First name of the user",
					"example": "Bob",
					"x-mapField": "first_name"
				},
				"lastName": {
					"type": "string",
					"description": "Last name of the user",
					"example": "Fisher",
					"x-mapField": "last_name"
				},
				"userName": {
					"type": "string",
					"description": "Username\/E-mail of the user",
					"example": "bobFisher12423@example.com",
					"x-mapField": "email\t"
				},
				"recoveryEmail": {
					"type": "string",
					"description": "Email used for contact and password recovery",
					"example": "bobFisher12423@example.com",
					"x-mapField": "recovery_email"
				},
				"loanProPosition": {
					"type": "string",
					"description": "Position in regards to Loanpro",
					"example": "Owner\/Principal (decision maker)",
					"x-mapField": "loanpro_position"
				},
				"phone": {
					"type": "string",
					"description": "Phone number of the user",
					"example": "8005551234",
					"x-mapField": "phone"
				},
				"jobTitle": {
					"type": "string",
					"description": "Job Title of the user",
					"example": "Tech Support Agent",
					"x-mapField": "job_title"
				},
				"active": {
					"type": "integer",
					"description": "If the user is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"gender": {
					"type": "string",
					"description": "Gender of the user",
					"example": "user.gender.male",
					"enum": [ "user.gender.female", "user.gender.male" ],
					"x-see": true
				},
				"roleId": {
					"type": "integer",
					"readOnly": true,
					"x-mapField": "role_id",
					"format": "int32"
				},
				"tenantRole": {
					"type": "string",
					"readOnly": true,
					"description": "Tenant Role of the User",
					"example": "2"
				},
				"customTenantRole": {
					"type": "string",
					"readOnly": true,
					"description": "Custom role inside the tenant (if one is set)",
					"example": "2"
				},
				"tenantAccessActive": {
					"type": "integer",
					"readOnly": true,
					"description": "Tennant Access Active (Read Only)",
					"example": "1",
					"format": "int32"
				},
				"validated": {
					"type": "integer",
					"description": "Whether or not the email has been validated. (1:Yes 0:No)",
					"readOnly": true,
					"x-mapField": "validated",
					"format": "int32"
				},
				"hash": {
					"type": "string",
					"description": "Email verification code",
					"readOnly": true,
					"x-mapField": "hash"
				},
				"lastContractSigned": {
					"type": "boolean",
					"description": "In tenant context will tell whether the user has signed the last contract version",
					"readOnly": true
				},
				"isEnrolledInMFA": {
					"type": "integer",
					"x-mapField": "isEnrolledInMFA",
					"format": "int32"
				},
				"Notifications": {
					"$ref": "#\/definitions\/Notifications",
					"x-not-in-post": false
				},
				"UserDeliveries": {
					"$ref": "#\/definitions\/UserDeliveries",
					"x-not-in-post": false
				},
				"UserTenantConfigurations": {
					"$ref": "#\/definitions\/UserTenantConfigurations",
					"x-not-in-post": false
				},
				"restrictionGroups": {
					"$ref": "#\/definitions\/restrictionGroups",
					"x-not-in-post": false
				},
				"tenantRoleSettings": {
					"$ref": "#\/definitions\/tenantRoleSettings",
					"x-not-in-post": false
				}
			}
		},
		"Loans": {
			"properties": {
				"id": {
					"type": "integer",
					"x-not-in-post": true,
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"displayId": {
					"type": "string",
					"description": "Loan Display ID",
					"example": "L00100",
					"x-not-in-post": true,
					"x-mapField": "display_id"
				},
				"title": {
					"type": "string",
					"description": "The loan title. It is displayed in the loan manager.",
					"example": "My First Loan",
					"x-not-in-post": true,
					"x-mapField": "title"
				},
				"settingsId": {
					"type": "integer",
					"description": "ID for Loan Settings. (Read Only)",
					"readOnly": true,
					"x-not-in-post": true,
					"x-mapField": "settings_id",
					"format": "int32"
				},
				"setupId": {
					"type": "integer",
					"description": "ID for Loan Setup. (Read Only)",
					"readOnly": true,
					"x-not-in-post": true,
					"x-mapField": "setup_id",
					"format": "int32"
				},
				"insurancePolicyId": {
					"type": "string",
					"description": "ID for Insurance Policy (Read Only)",
					"readOnly": true,
					"example": "1",
					"x-not-in-post": true,
					"x-mapField": "insurance_policy_id"
				},
				"collateralId": {
					"type": "integer",
					"description": "ID for Collateral (Read Only)",
					"readOnly": true,
					"x-not-in-post": true,
					"x-mapField": "collateral_id",
					"format": "int32"
				},
				"linkedLoan": {
					"type": "integer",
					"description": "The linked loan ID",
					"x-not-in-post": true,
					"x-mapField": "linked_loan",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "ID of the modification for the loan",
					"x-not-in-post": true,
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"modTotal": {
					"type": "integer",
					"description": "Number of modifications performed on the loan.",
					"x-not-in-post": true,
					"x-mapField": "mod_total",
					"format": "int32"
				},
				"humanActivityDate": {
					"type": "string",
					"description": "The most recent date of where a human interacted with the Loan.",
					"example": "2012-02-29",
					"x-not-in-post": true,
					"x-mapField": "human_activity_date",
					"format": "date-time"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Loan Creation Date-Time (Read Only)",
					"x-not-in-post": true,
					"x-mapField": "created",
					"format": "date-time"
				},
				"lastMaintRun": {
					"type": "string",
					"readOnly": true,
					"description": "Loan Last Maintenance Date (Read Only)",
					"x-not-in-post": true,
					"x-mapField": "last_maint_run",
					"format": "date-time"
				},
				"createdBy": {
					"type": "integer",
					"readOnly": true,
					"description": "Loan User Creation ID",
					"x-not-in-post": true,
					"x-mapField": "created_by",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"description": "The active status of the loan (1: active 0: inactive).",
					"x-not-in-post": true,
					"x-mapField": "active",
					"format": "int32"
				},
				"archived": {
					"type": "integer",
					"description": "Archive status of the loan",
					"x-not-in-post": true,
					"x-mapField": "archived",
					"format": "int32"
				},
				"loanAlert": {
					"type": "string",
					"description": "The alert for the loan",
					"example": "This is an alert!",
					"x-not-in-post": true,
					"x-mapField": "loan_alert"
				},
				"temporaryAccount": {
					"type": "integer",
					"readOnly": true,
					"description": "Whether or not it is a temporary account (Read Only)",
					"x-not-in-post": true,
					"x-mapField": "temporary_account",
					"format": "int32"
				},
				"deleted": {
					"type": "integer",
					"readOnly": true,
					"description": "Whether or not the loan has been deleted. (Read Only)",
					"x-not-in-post": true,
					"format": "int32"
				},
				"deletedAt": {
					"type": "string",
					"readOnly": true,
					"description": "Deletion date time (if applicable)",
					"x-not-in-post": true,
					"x-mapField": "deleted_at",
					"format": "date-time"
				},
				"Insurance": {
					"$ref": "#\/definitions\/Insurance",
					"x-not-in-post": true
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": true
				},
				"ChecklistItemValues": {
					"$ref": "#\/definitions\/ChecklistItemValues",
					"x-not-in-post": true
				},
				"LoanDocuments": {
					"$ref": "#\/definitions\/LoanDocuments",
					"x-not-in-post": true
				},
				"Collateral": {
					"$ref": "#\/definitions\/Collateral",
					"x-not-in-post": true
				},
				"LoanSettings": {
					"$ref": "#\/definitions\/LoanSettings",
					"x-not-in-post": false
				},
				"LoanSetup": {
					"$ref": "#\/definitions\/LoanSetup",
					"x-not-in-post": false
				},
				"Notes": {
					"$ref": "#\/definitions\/Notes",
					"x-not-in-post": true
				},
				"Promises": {
					"$ref": "#\/definitions\/Promises",
					"x-not-in-post": true
				},
				"Bankruptcies": {
					"$ref": "#\/definitions\/Bankruptcies",
					"x-not-in-post": true
				},
				"Charges": {
					"$ref": "#\/definitions\/Charges",
					"x-not-in-post": true
				},
				"Payments": {
					"$ref": "#\/definitions\/Payments",
					"x-not-in-post": true
				},
				"LoanFunding": {
					"$ref": "#\/definitions\/LoanFunding",
					"x-not-in-post": true
				},
				"LoanAdvancements": {
					"$ref": "#\/definitions\/LoanAdvancements",
					"x-not-in-post": true
				},
				"LoanCredits": {
					"$ref": "#\/definitions\/LoanCredits",
					"x-not-in-post": true
				},
				"LoanDueDateChanges": {
					"$ref": "#\/definitions\/LoanDueDateChanges",
					"x-not-in-post": true
				},
				"LoanCurtailmentDates": {
					"$ref": "#\/definitions\/LoanCurtailmentDates",
					"x-not-in-post": true
				},
				"LoanStatusArchive": {
					"$ref": "#\/definitions\/LoanStatusArchive",
					"x-not-in-post": true
				},
				"LoanTransactions": {
					"$ref": "#\/definitions\/LoanTransactions",
					"x-not-in-post": true
				},
				"EscrowCalculatedTx": {
					"$ref": "#\/definitions\/EscrowCalculatedTx",
					"x-not-in-post": true
				},
				"ScheduleRolls": {
					"$ref": "#\/definitions\/ScheduleRolls",
					"x-not-in-post": true
				},
				"StopInterestDates": {
					"$ref": "#\/definitions\/StopInterestDates",
					"x-not-in-post": true
				},
				"APDAdjustments": {
					"$ref": "#\/definitions\/APDAdjustments",
					"x-not-in-post": true
				},
				"DPDAdjustments": {
					"$ref": "#\/definitions\/DPDAdjustments",
					"x-not-in-post": true
				},
				"LoanModifications": {
					"$ref": "#\/definitions\/LoanModifications",
					"x-not-in-post": true
				},
				"EscrowAdjustments": {
					"$ref": "#\/definitions\/EscrowAdjustments",
					"x-not-in-post": true
				},
				"EscrowTransactions": {
					"$ref": "#\/definitions\/EscrowTransactions",
					"x-not-in-post": true
				},
				"EscrowSubsetOptions": {
					"$ref": "#\/definitions\/EscrowSubsetOptions",
					"x-not-in-post": true
				},
				"EscrowCalculators": {
					"$ref": "#\/definitions\/EscrowCalculators",
					"x-not-in-post": true
				},
				"Disbursements": {
					"$ref": "#\/definitions\/Disbursements",
					"x-not-in-post": false
				},
				"Loans": {
					"$ref": "#\/definitions\/Loans",
					"x-not-in-post": true
				},
				"LinkedLoanValues": {
					"$ref": "#\/definitions\/LinkedLoanValues",
					"x-not-in-post": true
				},
				"LoanChilds": {
					"$ref": "#\/definitions\/LoanChilds",
					"x-not-in-post": true
				},
				"RecurrentCharges": {
					"$ref": "#\/definitions\/RecurrentCharges",
					"x-not-in-post": true
				},
				"PayNearMeOrders": {
					"$ref": "#\/definitions\/PayNearMeOrders",
					"x-not-in-post": true
				},
				"Customers": {
					"$ref": "#\/definitions\/Customers",
					"x-not-in-post": true
				},
				"Portfolios": {
					"$ref": "#\/definitions\/Portfolios",
					"x-not-in-post": true
				},
				"SubPortfolios": {
					"$ref": "#\/definitions\/SubPortfolios",
					"x-not-in-post": true
				},
				"EscrowSubsets": {
					"$ref": "#\/definitions\/EscrowSubsets",
					"x-not-in-post": true
				},
				"RuleAppliedLoanSettings": {
					"$ref": "#\/definitions\/RuleAppliedLoanSettings",
					"x-not-in-post": true
				},
				"RuleAppliedChargeOff": {
					"$ref": "#\/definitions\/RuleAppliedChargeOff",
					"x-not-in-post": true
				},
				"RuleAppliedAPDReset": {
					"$ref": "#\/definitions\/RuleAppliedAPDReset",
					"x-not-in-post": true
				},
				"RuleAppliedChecklists": {
					"$ref": "#\/definitions\/RuleAppliedChecklists",
					"x-not-in-post": true
				},
				"RuleAppliedChangeDueDates": {
					"$ref": "#\/definitions\/RuleAppliedChangeDueDates",
					"x-not-in-post": true
				},
				"RuleAppliedStopInterest": {
					"$ref": "#\/definitions\/RuleAppliedStopInterest",
					"x-not-in-post": true
				},
				"RuleAppliedAccountTools": {
					"$ref": "#\/definitions\/RuleAppliedAccountTools",
					"x-not-in-post": true
				},
				"RuleAppliedCustomerTools": {
					"$ref": "#\/definitions\/RuleAppliedCustomerTools",
					"x-not-in-post": true
				},
				"RuleAppliedAutopays": {
					"$ref": "#\/definitions\/RuleAppliedAutopays",
					"x-not-in-post": true
				},
				"RuleAppliedLoanSetup": {
					"$ref": "#\/definitions\/RuleAppliedLoanSetup",
					"x-not-in-post": true
				},
				"RuleAppliedBankruptcy": {
					"$ref": "#\/definitions\/RuleAppliedBankruptcy",
					"x-not-in-post": true
				},
				"Autopays": {
					"$ref": "#\/definitions\/Autopays",
					"x-not-in-post": true
				},
				"ActionResultNotes": {
					"$ref": "#\/definitions\/ActionResultNotes",
					"x-not-in-post": false
				}
			}
		},
		"Insurance": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"companyName": {
					"type": "string",
					"description": "Name of the Insurance Company",
					"example": "Allstate",
					"x-mapField": "company_name"
				},
				"insured": {
					"type": "string",
					"description": "Name of the person insured",
					"example": "John Doe"
				},
				"agentName": {
					"type": "string",
					"description": "Name of the insurance agent",
					"example": "Mr. Jones",
					"x-mapField": "agent_name"
				},
				"policyNumber": {
					"type": "string",
					"description": "Insurance Policy Number",
					"example": "AKS-90003-01",
					"x-mapField": "policy_number"
				},
				"phone": {
					"type": "string",
					"description": "Phone number for Insurance Company.",
					"example": "8005552131"
				},
				"deductible": {
					"type": "string",
					"description": "Deductible amount for the policy.",
					"example": "500.00"
				},
				"startDate": {
					"type": "string",
					"description": "Start Date for the policy as a Unix timestamp.",
					"example": "\/Date(1427829732)\/",
					"x-mapField": "start_date",
					"format": "date-time"
				},
				"endDate": {
					"type": "string",
					"description": "End Date for the policy as a Unix timestamp.",
					"example": "\/Date(1427829732)\/",
					"x-mapField": "end_date",
					"format": "date-time"
				},
				"Loans": {
					"$ref": "#\/definitions\/Loans",
					"x-not-in-post": false
				},
				"Investments": {
					"$ref": "#\/definitions\/Investments",
					"x-not-in-post": false
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": false
				}
			}
		},
		"CustomFields": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"name": {
					"type": "string",
					"description": "Name of the Custom Field",
					"example": "Cust Field 1"
				},
				"description": {
					"type": "string",
					"description": "Description of the Custom Field",
					"example": "Description 1"
				},
				"type": {
					"type": "string",
					"description": "Type of the Custom Field; formatted \"customfield.type.\" followed by the type",
					"example": "customfield.type.currency"
				},
				"autoCalculate": {
					"type": "string",
					"description": "Auto-calculation amount application; formatted \"customfield.autoCalculate.\" followed by the field to add to",
					"example": "customfield.autoCalculate.totalLoanAmount",
					"x-mapField": "auto_calculate"
				},
				"autoCalculateOperationType": {
					"type": "string",
					"description": "Auto-calculation operation type; formatted \"customfield.autoCalculatOpType.\" followed by the operation",
					"example": "customfield.autoCalculateOpType.addition",
					"x-mapField": "auto_calculate_operation_type"
				},
				"creditReportEnabled": {
					"type": "integer",
					"description": "Is it included in the credit reporting? (1:Yes 0:No)",
					"x-mapField": "credit_report_enabled",
					"format": "int16"
				},
				"required": {
					"type": "integer",
					"description": "Is it required? (1:Yes 0:No)",
					"format": "int16"
				},
				"active": {
					"type": "integer",
					"description": "Is it active? (1:Yes 0:No)",
					"format": "int16"
				},
				"searchable": {
					"type": "integer",
					"description": "Is it Searchable? (1:Yes 0:No)",
					"format": "int16"
				},
				"reportEnabled": {
					"type": "integer",
					"description": "Is it in the Reports? (1:Yes 0:No)",
					"x-mapField": "report_enabled",
					"format": "int16"
				},
				"archiveEnable": {
					"type": "integer",
					"description": "Is it in the Loan Archive? (1:Yes 0:No)",
					"x-mapField": "archive_enable",
					"format": "int16"
				},
				"summaryEnabled": {
					"type": "integer",
					"description": "Is it in the Summary? (1:Yes 0:No)",
					"x-mapField": "summary_enabled",
					"format": "int16"
				},
				"maxLength": {
					"type": "integer",
					"description": "Maximum Length (0 [zero] means no maximum)",
					"example": "60",
					"x-mapField": "max_length",
					"format": "int16"
				},
				"defaultValue": {
					"type": "string",
					"description": "Default value",
					"example": "default",
					"x-mapField": "default_value"
				},
				"entityType": {
					"type": "string",
					"description": "The entity type that the custom field belongs to",
					"example": "Entity.LoanSetup",
					"x-mapField": "entity_type"
				},
				"sectionIdentifier": {
					"type": "string",
					"description": "Section of the entity to identify with (can be null)",
					"example": "Entity.Collateral.Other",
					"x-mapField": "section_identifier"
				},
				"displayOrder": {
					"type": "integer",
					"description": "Display order",
					"example": "2",
					"x-mapField": "display_order",
					"format": "int16"
				},
				"selectOptions": {
					"type": "string",
					"description": "Selection options if it is a customfield.type.select\"",
					"example": "[{\"id\":\"1\",\"label\":\"1\"},{\"id\":\"2\",\"label\":\"2\"},{\"id\":\"3\",\"label\":\"3\"}]",
					"x-mapField": "select_options"
				}
			}
		},
		"Portfolios": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the portfolio",
					"example": "Portfolio1",
					"x-mapField": "title"
				},
				"numPrefix": {
					"type": "string",
					"description": "The number prefix for the portfolio.",
					"example": "0",
					"x-mapField": "num_prefix"
				},
				"numSuffix": {
					"type": "string",
					"description": "The number suffix for the portfolio.",
					"example": "1",
					"x-mapField": "num_suffix"
				},
				"categoryId": {
					"type": "integer",
					"description": "The category id for the portfolio",
					"example": "4",
					"x-mapField": "category_id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"readOnly": true,
					"x-mapField": "entity_type"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "The creation date of the portfolio as a Unix timestamp",
					"example": "\/Date(145785135498)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "If the portfolio is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"SubPortfolios": {
					"$ref": "#\/definitions\/SubPortfolios",
					"x-not-in-post": false
				}
			}
		},
		"SubPortfolios": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the Sub-Portfolio",
					"example": "Sub-Portfolio 1",
					"x-mapField": "title"
				},
				"parent": {
					"type": "integer",
					"description": "ID of the parent portfolio",
					"example": 1,
					"x-mapField": "parent",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Unix timestamp of creation (Read Only)",
					"example": "\/Date(1485221468)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "If it is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				}
			}
		},
		"LoanStatus": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title for the Loan Status",
					"example": "Title",
					"x-mapField": "title"
				},
				"active": {
					"type": "integer",
					"description": "If it is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"LoanSubStatus": {
					"$ref": "#\/definitions\/LoanSubStatus",
					"x-not-in-post": false
				}
			}
		},
		"LoanSubStatus": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title for the sub-status",
					"example": "Title",
					"x-mapField": "title"
				},
				"parent": {
					"type": "integer",
					"description": "ID of the parent status",
					"example": "1",
					"x-mapField": "parent",
					"format": "int32"
				},
				"lateFees": {
					"type": "integer",
					"description": "Controls whether or not loans with this sub-status are chareged late fees (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "late_fees",
					"format": "int32"
				},
				"emailEnroll": {
					"type": "integer",
					"description": "Controls whether or not loans with this sub-status are enrolled for email udpates (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "email_enroll",
					"format": "int32"
				},
				"webAccess": {
					"type": "integer",
					"description": "Controls whether or not loans with this sub-status have web-access (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "web_access",
					"format": "int32"
				},
				"smsEnroll": {
					"type": "integer",
					"description": "Controls whether or not loans with this sub-status are enrolled for sms udpates (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "sms_enroll",
					"format": "int32"
				},
				"displayOrder": {
					"type": "integer",
					"description": "The order that the sub-status appears in in the UI",
					"example": "3",
					"x-mapField": "display_order",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"description": "If it is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"rule": {
					"type": "string",
					"description": "Rule for the sub-status",
					"example": "(= 1 1)",
					"x-mapField": "rule"
				}
			}
		},
		"Address": {
			"required": [ "address1", "city", "state", "zipcode", "country", "active" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"address1": {
					"type": "string",
					"description": "First address Line",
					"example": "123 Oak Lane",
					"x-mapField": "address1"
				},
				"address2": {
					"type": "string",
					"description": "Second address Line",
					"example": "Apt #1",
					"x-mapField": "address2"
				},
				"city": {
					"type": "string",
					"description": "City",
					"example": "San Diego",
					"x-mapField": "city"
				},
				"state": {
					"type": "string",
					"description": "State or Province; formated with 'geo.state.' followed by the two digit abbreviation",
					"example": "geo.state.CA",
					"x-mapField": "state"
				},
				"zipcode": {
					"type": "string",
					"description": "Zip Code",
					"example": "12345",
					"x-mapField": "zipcode"
				},
				"country": {
					"type": "string",
					"description": "Country; formated with 'company.country.' followed by the three digit abbreviation ",
					"example": "company.country.usa",
					"x-mapField": "country",
					"enum": [ "company.country.can", "company.country.usa" ],
					"x-see": true
				},
				"geoLat": {
					"type": "number",
					"description": "Latitude of address",
					"example": "101.251",
					"x-mapField": "geo_lat",
					"format": "float"
				},
				"geoLon": {
					"type": "number",
					"description": "Longitude of address",
					"example": "101.251",
					"x-mapField": "geo_lon",
					"format": "float"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "When the address was created as a Unix-timestamp. (Read Only)",
					"example": "\/Date(1427464958)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "The active status of the address (1: active 0: inactive).",
					"x-mapField": "active",
					"format": "int32"
				},
				"isVerified": {
					"type": "integer",
					"readOnly": true,
					"description": "The verification state of the address. (Read Only) (1:verified 0:not verified)",
					"x-mapField": "is_verified",
					"format": "int32"
				},
				"isStandardized": {
					"type": "integer",
					"readOnly": true,
					"description": "The standardization state of the address. (Read Only) (1:standardized 0:not standardized)",
					"x-mapField": "is_standardized",
					"format": "int32"
				}
			}
		},
		"BankAccount": {
			"required": [ "active" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"accountNumber": {
					"type": "string",
					"description": "Bank account number.",
					"example": "123456789",
					"x-mapField": "account_number"
				},
				"routingNumber": {
					"type": "string",
					"description": "Bank routing number, should be 10 digits.",
					"example": "1234567890",
					"x-mapField": "routing_number"
				},
				"bankName": {
					"type": "string",
					"description": "Bank name.",
					"example": "Bank Name",
					"x-mapField": "bank_name"
				},
				"accountType": {
					"type": "string",
					"description": "Bank Account type (Savings or Checkings); formatted by \"bankacct.type.\" folowed by the account type.",
					"example": "bankacct.type.checking",
					"x-mapField": "account_type",
					"enum": [ "bankacct.type.checking", "bankacct.type.savings" ],
					"x-see": true
				},
				"addressId": {
					"type": "integer",
					"description": "ID of the Address object to use for billing and processing",
					"example": "6",
					"x-mapField": "address_id",
					"format": "int32"
				},
				"checkType": {
					"type": "string",
					"description": "The type of check; formatted \"bankacct.checktype.\" followed by the check type",
					"example": "bankacct.checktype.personal",
					"x-mapField": "check_type",
					"enum": [ "bankacct.checktype.business", "bankacct.checktype.personal" ],
					"x-see": true
				},
				"cardHolderName": {
					"type": "string",
					"description": "Name on the card",
					"example": "John Doe",
					"x-mapField": "card_holder_name"
				},
				"cardNumber": {
					"type": "string",
					"description": "The card number",
					"example": "XXXXXXXXXXXX5464",
					"x-mapField": "card_number"
				},
				"cardExpiration": {
					"type": "string",
					"description": "The card expiration date",
					"example": "8\/16",
					"x-mapField": "card_expiration"
				},
				"cardType": {
					"type": "string",
					"description": "The card type, values are creditCard.type.visa, creditCard.type.masterCard, creditCard.type.amex, creditCard.type.discover",
					"example": "creditCard.type.visa",
					"x-mapField": "card_type",
					"enum": [ "creditCard.type.amex", "creditCard.type.discover", "creditCard.type.masterCard", "creditCard.type.visa" ],
					"x-see": true
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "The date the bank account was created. (Read Only)",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "The active status of the bank account (1: active 0: inactive).",
					"x-mapField": "active",
					"format": "int32"
				},
				"verify": {
					"type": "integer",
					"description": "Should the system automatically verify the payment method (1: verify 0: dont't verify).",
					"format": "int32"
				},
				"isOneTimeOnly": {
					"type": "integer",
					"format": "int32"
				},
				"Address": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				}
			}
		},
		"SourceCompanies": {
			"required": [ "companyName", "contactName", "active" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"companyName": {
					"type": "string",
					"description": "Source Company name",
					"example": "Company 1",
					"x-mapField": "company_name"
				},
				"contactName": {
					"type": "string",
					"description": "Name of the company contact",
					"example": "Bob",
					"x-mapField": "contact_name"
				},
				"contactPhone": {
					"type": "string",
					"description": "Phone number to contact the company",
					"example": "8005556234",
					"x-mapField": "contact_phone"
				},
				"contactEmail": {
					"type": "string",
					"description": "Email to contact the company",
					"example": "comapny1@example.com",
					"x-mapField": "contact_email"
				},
				"numPrefix": {
					"type": "string",
					"description": "Number prefix",
					"example": null,
					"x-mapField": "num_prefix"
				},
				"numSuffix": {
					"type": "string",
					"description": "Number suffix",
					"example": null,
					"x-mapField": "num_suffix"
				},
				"addressId": {
					"type": "integer",
					"readOnly": true,
					"description": "ID of the associated address",
					"example": 3,
					"x-mapField": "address_id",
					"format": "int32"
				},
				"checkingAccountId": {
					"type": "integer",
					"description": "ID of the associated bank account",
					"example": 6,
					"x-mapField": "checking_account_id",
					"format": "int32"
				},
				"mcId": {
					"type": "integer",
					"description": "Id of the PCI-Wallet",
					"x-not-in-post": true,
					"x-mapField": "mc_id",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Unix timestamp of creation date (Read Only)",
					"example": "\/Date(1420612812).",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "If it is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"Address": {
					"$ref": "#\/definitions\/Address",
					"x-not-in-post": false
				},
				"CheckingAccounts": {
					"$ref": "#\/definitions\/CheckingAccounts",
					"x-not-in-post": false
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": false
				}
			}
		},
		"CustomFieldValues": {
			"properties": {
				"id": {
					"type": "integer",
					"description": "Custom Field ID",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"entityId": {
					"type": "integer",
					"description": "ID of the target Entity",
					"example": "120",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "The type of entity for the custom field. Possible Values are: Entity.LoanSetup, Entity.LoanSettings, Entity.Customer, Entity.Employer, Entity.Investment, Entity.Investor",
					"example": "Entity.Investor",
					"x-mapField": "entity_type"
				},
				"customFieldId": {
					"type": "integer",
					"description": "The settings ID for the custom field.",
					"x-mapField": "custom_field_id",
					"format": "int32"
				},
				"customFieldValue": {
					"type": "string",
					"description": "The value of the custom field",
					"x-mapField": "custom_field_value"
				},
				"customFieldValueSetting": {
					"type": "string",
					"description": "Value setting for custom field",
					"x-mapField": "custom_field_value_setting"
				}
			}
		},
		"Checklist": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Entities this checklist are part of",
					"x-mapField": "entity_type"
				},
				"title": {
					"type": "string",
					"description": "Title of the Checklist",
					"x-mapField": "title"
				},
				"description": {
					"type": "string",
					"description": "Description of the Checklist",
					"x-mapField": "description"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Creation Date of the Checklist (Read Only).",
					"example": "\/Date(1427829725)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "Active status of the checklist (1:active 0:inactive)",
					"x-mapField": "active",
					"format": "int32"
				},
				"ChecklistItems": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				}
			}
		},
		"ChecklistItems": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the Checklist Item",
					"x-mapField": "title"
				},
				"description": {
					"type": "string",
					"description": "Description of the Checklist Item",
					"x-mapField": "description"
				},
				"checklistId": {
					"type": "integer",
					"description": "ID of the parent checklist",
					"example": "1",
					"x-mapField": "checklist_id",
					"format": "int32"
				},
				"displayOrder": {
					"type": "integer",
					"description": "Display order ID",
					"example": "3",
					"x-mapField": "display_order",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Creation date of the checklist item (Read Only)",
					"example": "\/Date(1427829732)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "Active status of the checklist item (1:active 0:inactive)",
					"x-mapField": "active",
					"format": "int32"
				}
			}
		},
		"NoteCategories": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the note category",
					"example": "Title",
					"x-mapField": "title"
				},
				"entityType": {
					"type": "string",
					"description": "Entity type for the note category to belong to",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date the category was created as a Unix timestamp (Read Only)",
					"example": "t",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "If the category is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				}
			}
		},
		"DocSections": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the Document Section",
					"example": "Title",
					"x-mapField": "title"
				},
				"entityType": {
					"type": "string",
					"description": "The type of entity that the document section is for",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date the section was created as a Unix Timestamp (Read Only)",
					"example": "\/Date(1427829732)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "Whether or not the section is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				}
			}
		},
		"EscrowAdjustments": {
			"required": [ "subset", "period" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Target entity type",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "Targit entity ID",
					"example": "1",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "Target modification ID",
					"example": "2",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"subset": {
					"type": "integer",
					"description": "Subset ID",
					"example": "2",
					"x-mapField": "subset",
					"format": "int32"
				},
				"period": {
					"type": "integer",
					"description": "Period of the escrow",
					"example": "10",
					"x-mapField": "period",
					"format": "int32"
				},
				"amount": {
					"type": "number",
					"description": "Amount of the escrow",
					"example": "150.00",
					"x-mapField": "amount",
					"format": "float"
				},
				"description": { "type": "string" }
			}
		},
		"EscrowTransactions": {
			"required": [ "loanId", "subset", "category", "description", "date", "type" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "Target loan ID",
					"example": "2",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"subset": {
					"type": "integer",
					"description": "Escrow subset ID",
					"example": "1",
					"x-mapField": "subset",
					"format": "int32"
				},
				"category": {
					"type": "integer",
					"description": "Escrow Transaction category ID",
					"example": "4",
					"x-mapField": "category",
					"format": "int32"
				},
				"vendorId": {
					"type": "integer",
					"description": "Escrow Transaction Vendor ID",
					"example": "4",
					"x-mapField": "vendor_id",
					"format": "int32"
				},
				"description": {
					"type": "string",
					"description": "Escrow Transactin description",
					"example": "Description",
					"x-mapField": "description"
				},
				"date": {
					"type": "string",
					"description": "Escrow transaction date (Unix Timestamp)",
					"example": "\/Date(1234569752)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"type": {
					"type": "string",
					"description": "Transaction type",
					"example": "transaction.type.withdrawal",
					"x-mapField": "type",
					"enum": [ "transaction.type.deposit", "transaction.type.withdrawal" ],
					"x-see": true
				},
				"amount": {
					"type": "number",
					"description": "Amount of the transaction",
					"example": "50",
					"x-mapField": "amount",
					"format": "float"
				},
				"Vendors": {
					"$ref": "#\/definitions\/Vendors",
					"x-not-in-post": false
				}
			}
		},
		"EscrowCalculatedTx": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "Target loan ID",
					"example": "1",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"subset": {
					"type": "integer",
					"description": "Subset ID",
					"example": "4",
					"x-mapField": "subset",
					"format": "int32"
				},
				"category": {
					"type": "integer",
					"description": "Category ID",
					"example": "2",
					"x-mapField": "category",
					"format": "int32"
				},
				"txId": {
					"type": "string",
					"description": "Transaction ID",
					"example": "transaction ID",
					"x-mapField": "tx_id"
				},
				"description": {
					"type": "string",
					"description": "Transaction description",
					"example": "Example",
					"x-mapField": "description"
				},
				"date": {
					"type": "string",
					"description": "Transaction date (Unix timestamp)",
					"example": "\/Date(12345522135)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"type": {
					"type": "string",
					"description": "Transaction type",
					"example": "transaction.type.deposit",
					"x-mapField": "type"
				},
				"fromPayment": {
					"type": "integer",
					"description": "Payment ID to take amount from",
					"example": "1",
					"x-mapField": "from_payment",
					"format": "int32"
				},
				"escrowTransactionId": {
					"type": "integer",
					"description": "Escrow Transaction ID",
					"example": "1",
					"x-mapField": "escrow_transaction_id",
					"format": "int32"
				},
				"depositAmount": {
					"type": "number",
					"description": "Doposit Amount",
					"example": "1000.00",
					"x-mapField": "deposit_amount",
					"format": "float"
				},
				"withdrawalAmount": {
					"type": "number",
					"description": "Withdrawal Amount",
					"example": "1000.00",
					"x-mapField": "withdrawal_amount",
					"format": "float"
				},
				"balance": {
					"type": "number",
					"description": "Escrow balance after transaction",
					"example": "50.00",
					"x-mapField": "balance",
					"format": "float"
				},
				"sortOrder": {
					"type": "integer",
					"description": "Sort Order",
					"example": "1",
					"x-mapField": "sort_order",
					"format": "int32"
				}
			}
		},
		"EscrowSubsetOptions": {
			"required": [ "payoffOption", "paymentApplication", "disclosureLnAmtAdd" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Target entity type",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "Target entity ID",
					"example": "1",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"subset": {
					"type": "string",
					"description": "Target escrow subset",
					"example": "4",
					"x-mapField": "subset"
				},
				"payoffOption": {
					"type": "string",
					"description": "Escrow payoff option",
					"example": "loan.escrowpayoff.standard",
					"x-mapField": "payoff_option",
					"enum": [ "loan.escrowpayoff.full", "loan.escrowpayoff.none", "loan.escrowpayoff.percentagefixed", "loan.escrowpayoff.standard", "loan.escrowpayoff.standardPlus", "loan.escrowpayoff.straightline" ],
					"x-see": true
				},
				"paymentApplication": {
					"type": "string",
					"description": "Escrow payment application",
					"example": "loan.escrowpmtapp.nextStandard",
					"x-mapField": "payment_application",
					"enum": [ "loan.escrowpmtapp.next", "loan.escrowpmtapp.nextStandard", "loan.escrowpmtapp.percentfixed", "loan.escrowpmtapp.prorate", "loan.escrowpmtapp.standard" ],
					"x-see": true
				},
				"aprInclude": {
					"type": "integer",
					"description": "Include in APR? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "apr_include",
					"format": "int32"
				},
				"scheduleInclude": {
					"type": "integer",
					"description": "Include in Schedule? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "schedule_include",
					"format": "int32"
				},
				"disclosureLnAmtAdd": {
					"type": "integer",
					"description": "Include in the disclosure Loan Amount? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "disclosure_lnamt_add",
					"format": "int32"
				},
				"interestBearing": {
					"type": "integer",
					"description": "Is escrow bucket interest bearing? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "interest_bearing",
					"format": "int32"
				},
				"escrowAnalysisEnabled": {
					"type": "integer",
					"x-mapField": "escrow_analysis_enabled",
					"format": "int32"
				},
				"cushion": {
					"type": "integer",
					"format": "int32"
				},
				"cushionFixedAmount": {
					"type": "number",
					"x-mapField": "cushion_fixed_amount",
					"format": "float"
				},
				"cushionPercentage": {
					"type": "number",
					"x-mapField": "cushion_percentage",
					"format": "float"
				},
				"escrowComputationYearStartDate": {
					"type": "string",
					"x-mapField": "escrow_computation_year_start_date",
					"format": "date-time"
				},
				"nextEscrowAnalysisDate": {
					"type": "string",
					"x-mapField": "next_escrow_analysis_date",
					"format": "date-time"
				},
				"deficiencyDelimitingDPD": {
					"type": "integer",
					"x-mapField": "deficiency_delimiting_dpd",
					"format": "int32"
				},
				"deficiencyDaysToPay": {
					"type": "integer",
					"x-mapField": "deficiency_days_to_pay",
					"format": "int32"
				},
				"deficiencyDelimitingAmount": {
					"type": "integer",
					"x-mapField": "deficiency_delimiting_amount",
					"format": "int32"
				},
				"deficiencyDelimitingDollar": {
					"type": "number",
					"x-mapField": "deficiency_delimiting_dollar",
					"format": "float"
				},
				"deficiencyDelimitingPercentage": {
					"type": "number",
					"x-mapField": "deficiency_delimiting_percentage",
					"format": "float"
				},
				"deficiencyCatchupPaymentNumber": {
					"type": "integer",
					"x-mapField": "deficiency_catchup_payment_number",
					"format": "int32"
				},
				"deficiencyActionA": {
					"type": "integer",
					"x-mapField": "deficiency_action_a",
					"format": "int32"
				},
				"deficiencyActionB": {
					"type": "integer",
					"x-mapField": "deficiency_action_b",
					"format": "int32"
				},
				"deficiencyActionC": {
					"type": "integer",
					"x-mapField": "deficiency_action_c",
					"format": "int32"
				},
				"shortageDaysToPay": {
					"type": "integer",
					"x-mapField": "shortage_days_to_pay",
					"format": "int32"
				},
				"shortageCatchupPaymentNumber": {
					"type": "integer",
					"x-mapField": "shortage_catchup_payment_number",
					"format": "int32"
				},
				"shortageDelimitingAmount": {
					"type": "integer",
					"x-mapField": "shortage_delimiting_amount",
					"format": "int32"
				},
				"shortageDelimitingDollar": {
					"type": "number",
					"x-mapField": "shortage_delimiting_dollar",
					"format": "float"
				},
				"shortageDelimitingPercentage": {
					"type": "number",
					"x-mapField": "shortage_delimiting_percentage",
					"format": "float"
				},
				"shortageActionA": {
					"type": "integer",
					"x-mapField": "shortage_action_a",
					"format": "int32"
				},
				"shortageActionB": {
					"type": "integer",
					"x-mapField": "shortage_action_b",
					"format": "int32"
				},
				"surplusAllowedSurplus": {
					"type": "number",
					"x-mapField": "surplus_allowed_surplus",
					"format": "float"
				},
				"surplusDaysToRefund": {
					"type": "integer",
					"x-mapField": "surplus_days_to_refund",
					"format": "int32"
				},
				"surplusDelimitingDPD": {
					"type": "integer",
					"x-mapField": "surplus_delimiting_dpd",
					"format": "int32"
				},
				"surplusActionA": {
					"type": "integer",
					"x-mapField": "surplus_action_a",
					"format": "int32"
				},
				"surplusActionB": {
					"type": "integer",
					"x-mapField": "surplus_action_b",
					"format": "int32"
				},
				"Disbursements": {
					"$ref": "#\/definitions\/Disbursements",
					"x-not-in-post": false
				}
			}
		},
		"EscrowSubsets": {
			"required": [ "entityType", "title", "payoffOption", "paymentApplication", "disclosureLnAmtAdd", "availability" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"leaseSalesTax": {
					"type": "integer",
					"description": "If this field is for Lease Sales Tax (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "lease_sales_tax",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "The entity to which this escrow applies (usually Entity.Loan)",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"title": {
					"type": "string",
					"description": "Title of the escrow subset.",
					"example": "Title",
					"x-mapField": "title"
				},
				"payoffOption": {
					"type": "string",
					"description": "Option for paying off the escrow; formatted \"loan.escrowpayoff.\" followed by the escrow payoff option.",
					"example": "loan.escrowpayoff.standard",
					"x-mapField": "payoff_option",
					"enum": [ "loan.escrowpayoff.full", "loan.escrowpayoff.none", "loan.escrowpayoff.percentagefixed", "loan.escrowpayoff.standard", "loan.escrowpayoff.standardPlus", "loan.escrowpayoff.straightline" ],
					"x-see": true
				},
				"paymentApplication": {
					"type": "string",
					"description": "How payments apply to this escrow subset; formatted \"loan.escrowpmtapp.\" followed by the payment application.",
					"example": "loan.escrowpmtapp.standard",
					"x-mapField": "payment_application",
					"enum": [ "loan.escrowpmtapp.next", "loan.escrowpmtapp.nextStandard", "loan.escrowpmtapp.percentfixed", "loan.escrowpmtapp.prorate", "loan.escrowpmtapp.standard" ],
					"x-see": true
				},
				"aprInclude": {
					"type": "integer",
					"description": "If it should be included in the APR calculation (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "apr_include",
					"format": "int32"
				},
				"scheduleInclude": {
					"type": "integer",
					"description": "If it should be included in the loan schedule (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "schedule_include",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date created as a Unix timestamp (Read only)",
					"example": "\/Date(1427414394)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "If this bucket is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"disclosureLnAmtAdd": {
					"type": "integer",
					"description": "Whether or not to add it to the loan amount disclosure (1:Yes 0:No)",
					"example": "T",
					"x-mapField": "disclosure_lnamt_add",
					"format": "int32"
				},
				"availability": {
					"type": "string",
					"description": "The availability of the escrow (loan.escrowAvailability.both, loan.escrowAvailability.loan, loan.escrowAvailability.lease)",
					"example": "loan.escrowAvailability.both",
					"x-mapField": "availability",
					"enum": [ "loan.escrowAvailability.both", "loan.escrowAvailability.lease", "loan.escrowAvailability.loan" ],
					"x-see": true
				},
				"interestBearing": {
					"type": "integer",
					"description": "Is escrow bucket interest bearing (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "interest_bearing",
					"format": "int32"
				},
				"escrowAnalysisEnabled": {
					"type": "integer",
					"x-mapField": "escrow_analysis_enabled",
					"format": "int32"
				},
				"cushion": {
					"type": "integer",
					"format": "int32"
				},
				"cushionFixedAmount": {
					"type": "number",
					"x-mapField": "cushion_fixed_amount",
					"format": "float"
				},
				"cushionPercentage": {
					"type": "number",
					"x-mapField": "cushion_percentage",
					"format": "float"
				},
				"escrowComputationYearStartDate": {
					"type": "string",
					"x-mapField": "escrow_computation_year_start_date",
					"format": "date-time"
				},
				"nextEscrowAnalysisDate": {
					"type": "string",
					"x-mapField": "next_escrow_analysis_date",
					"format": "date-time"
				},
				"deficiencyDelimitingDPD": {
					"type": "integer",
					"x-mapField": "deficiency_delimiting_dpd",
					"format": "int32"
				},
				"deficiencyDaysToPay": {
					"type": "integer",
					"x-mapField": "deficiency_days_to_pay",
					"format": "int32"
				},
				"deficiencyDelimitingAmount": {
					"type": "integer",
					"x-mapField": "deficiency_delimiting_amount",
					"format": "int32"
				},
				"deficiencyDelimitingDollar": {
					"type": "number",
					"x-mapField": "deficiency_delimiting_dollar",
					"format": "float"
				},
				"deficiencyDelimitingPercentage": {
					"type": "number",
					"x-mapField": "deficiency_delimiting_percentage",
					"format": "float"
				},
				"deficiencyCatchupPaymentNumber": {
					"type": "integer",
					"x-mapField": "deficiency_catchup_payment_number",
					"format": "int32"
				},
				"deficiencyActionA": {
					"type": "integer",
					"x-mapField": "deficiency_action_a",
					"format": "int32"
				},
				"deficiencyActionB": {
					"type": "integer",
					"x-mapField": "deficiency_action_b",
					"format": "int32"
				},
				"deficiencyActionC": {
					"type": "integer",
					"x-mapField": "deficiency_action_c",
					"format": "int32"
				},
				"shortageDaysToPay": {
					"type": "integer",
					"x-mapField": "shortage_days_to_pay",
					"format": "int32"
				},
				"shortageCatchupPaymentNumber": {
					"type": "integer",
					"x-mapField": "shortage_catchup_payment_number",
					"format": "int32"
				},
				"shortageDelimitingAmount": {
					"type": "integer",
					"x-mapField": "shortage_delimiting_amount",
					"format": "int32"
				},
				"shortageDelimitingDollar": {
					"type": "number",
					"x-mapField": "shortage_delimiting_dollar",
					"format": "float"
				},
				"shortageDelimitingPercentage": {
					"type": "number",
					"x-mapField": "shortage_delimiting_percentage",
					"format": "float"
				},
				"shortageActionA": {
					"type": "integer",
					"x-mapField": "shortage_action_a",
					"format": "int32"
				},
				"shortageActionB": {
					"type": "integer",
					"x-mapField": "shortage_action_b",
					"format": "int32"
				},
				"surplusAllowedSurplus": {
					"type": "number",
					"x-mapField": "surplus_allowed_surplus",
					"format": "float"
				},
				"surplusDaysToRefund": {
					"type": "integer",
					"x-mapField": "surplus_days_to_refund",
					"format": "int32"
				},
				"surplusDelimitingDPD": {
					"type": "integer",
					"x-mapField": "surplus_delimiting_dpd",
					"format": "int32"
				},
				"surplusActionA": {
					"type": "integer",
					"x-mapField": "surplus_action_a",
					"format": "int32"
				},
				"surplusActionB": {
					"type": "integer",
					"x-mapField": "surplus_action_b",
					"format": "int32"
				}
			}
		},
		"EscrowTxCategory": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the escrow category.",
					"example": "Title",
					"x-mapField": "title"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date the category was created as a Unix timestamp.",
					"example": "\/Date\/1427414361)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "If it is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				}
			}
		},
		"Brackets": {
			"properties": {
				"id": {
					"type": "string",
					"readOnly": true,
					"x-isKey": true
				},
				"parentId": {
					"type": "string",
					"description": "Parent ID for the bracket (where it is found in the UI). Examples: customerSettings.brackets; loansettings.setupnewloan; companySettings.brackets; loansettings.charges",
					"example": "companySettings.brackets",
					"x-mapField": "parent_id"
				},
				"hasAdditionalValue": {
					"type": "integer",
					"description": "Whether or not it has additional value",
					"x-mapField": "has_additional_value",
					"format": "int32"
				},
				"label": {
					"type": "string",
					"description": "Label for the bracket",
					"example": "Aging"
				},
				"description": {
					"type": "string",
					"description": "Description for the bracket",
					"example": "Aging range."
				},
				"BracketItems": {
					"$ref": "#\/definitions\/BracketItems",
					"x-not-in-post": false
				}
			}
		},
		"BracketItems": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"bracketId": {
					"type": "string",
					"description": "ID of the parent bracket group",
					"example": "companySettings.brackets.aging",
					"x-mapField": "bracket_id"
				},
				"begin": {
					"type": "integer",
					"description": "Start value for the bracket item",
					"example": "1",
					"x-mapField": "bracket_item_begin",
					"format": "int32"
				},
				"end": {
					"type": "integer",
					"description": "End value for the bracket item",
					"example": "90",
					"x-mapField": "bracket_item_end",
					"format": "int32"
				},
				"additionalValue": {
					"type": "number",
					"x-mapField": "additional_value",
					"format": "float"
				}
			}
		},
		"CustomPaymentMethods": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"static": {
					"type": "integer",
					"description": "Whether or not the payment method is static (1:Yes 0:No).",
					"x-mapField": "static",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the Payment Method",
					"example": "Payment Method 1",
					"x-mapField": "title"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "The Unix-Timestamp of when the payment method was created (Read Only)",
					"example": "\/Date(1427829732)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "Whether or not the payment method is active (1:Yes 0:No)",
					"x-mapField": "active",
					"format": "int32"
				}
			}
		},
		"CustomPaymentTypes": {
			"required": [ "title", "application", "escrowApplication" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"static": {
					"type": "integer",
					"description": "Whether or not the Custom Payment Type is static (1:Yes 0:No)",
					"x-mapField": "static",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the Custom Payment Type",
					"example": "Regular",
					"x-mapField": "title"
				},
				"application": {
					"type": "string",
					"description": "How the Custom Payment type applies (is an array)",
					"example": "[\"payment.application.fees\",\"payment.application.escrow\",\"payment.application.interest\",\"payment.application.discount\",\"payment.application.principal\"]",
					"x-mapField": "application"
				},
				"escrowApplication": {
					"type": "string",
					"description": "Application to Escrow (depreciated)",
					"x-mapField": "escrow_application"
				},
				"description": {
					"type": "string",
					"description": "Discription of the payment type",
					"example": "A custom Payment Type",
					"x-mapField": "description"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date of creation as a Unix-timestamp (Read Only)",
					"example": "\/Date(1427829732)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "Whether or not the Custom Payment type is active (1:Yes 0:No)",
					"x-mapField": "active",
					"format": "int32"
				}
			}
		},
		"CustomChargeTypes": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"static": {
					"type": "integer",
					"description": "Whether or not it is static (1:Yes 0:No)",
					"x-mapField": "static",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the Custom Charge",
					"example": "Custom Charge 1",
					"x-mapField": "title"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Creation date of the Custom Charge as a Unix-Timestamp (Read Only)",
					"example": "\/Date(1427829732)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "Whether or not it is active (1:Yes 0:No)",
					"x-mapField": "active",
					"format": "int32"
				}
			}
		},
		"PortfolioCategories": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"x-mapField": "entity_type"
				},
				"title": {
					"type": "string",
					"description": "Title of the portfolio category",
					"example": "Title",
					"x-mapField": "title"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date created as a Unix timestamp (Read Only)",
					"example": "\/Date(147861243524)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "If it is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"Portfolios": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				}
			}
		},
		"Customers": {
			"required": [ "customerType", "status", "gender", "generationCode", "customerIdType", "creditLimit", "active" ],
			"properties": {
				"id": {
					"type": "integer",
					"x-not-in-post": true,
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"customId": {
					"type": "string",
					"description": "Id of the customer",
					"x-not-in-post": true,
					"x-mapField": "custom_id"
				},
				"mcId": {
					"type": "integer",
					"description": "Id of the PCI-Wallet",
					"x-not-in-post": true,
					"x-mapField": "mc_id",
					"format": "int32"
				},
				"customerType": {
					"type": "string",
					"description": "Type of the customer; formatted \"customer.type.\" followed by the type (individual, company, or flooring)",
					"example": "customer.type.individual",
					"x-mapField": "customer_type",
					"enum": [ "customer.type.company", "customer.type.flooringCustomer", "customer.type.individual" ],
					"x-see": true
				},
				"status": {
					"type": "string",
					"description": "Status of the customer",
					"example": "Active",
					"x-not-in-post": true
				},
				"firstName": {
					"type": "string",
					"description": "First Name of the customer",
					"example": "John",
					"x-mapField": "first_name"
				},
				"lastName": {
					"type": "string",
					"description": "Last Name of the customer",
					"example": "Doe",
					"x-mapField": "last_name"
				},
				"middleName": {
					"type": "string",
					"description": "Middle Name of the customer",
					"example": "Joe",
					"x-mapField": "middle_name"
				},
				"birthDate": {
					"type": "string",
					"description": "Birth Date of the customer as a Unix-timestamp",
					"example": "\/Date(1429056000)\/",
					"x-mapField": "birth_date_update",
					"format": "date-time"
				},
				"gender": {
					"type": "string",
					"description": "Gender of the customer; formated \"customer.gender.\" followed by the gender",
					"example": "customer.gender.male",
					"x-not-in-post": true,
					"enum": [ "customer.gender.female", "customer.gender.male", "customer.gender.unknown" ],
					"x-see": true
				},
				"generationCode": {
					"type": "string",
					"description": "Generation Code of the customer; formated \"customer.generationCode.\" followed by the generation code",
					"example": "customer.generationCode.none",
					"x-not-in-post": true,
					"x-mapField": "generation_code",
					"enum": [ "customer.generationCode.ii", "customer.generationCode.iii", "customer.generationCode.iv", "customer.generationCode.ix", "customer.generationCode.jr", "customer.generationCode.none", "customer.generationCode.sr", "customer.generationCode.v", "customer.generationCode.vi", "customer.generationCode.vii", "customer.generationCode.viii" ],
					"x-see": true
				},
				"email": {
					"type": "string",
					"description": "Email address of the customer",
					"example": "test@email.com",
					"x-not-in-post": true
				},
				"ssn": {
					"type": "string",
					"description": "Social Security Number of the customer",
					"example": "1234567890",
					"x-not-in-post": true,
					"x-mapField": "ssn_update"
				},
				"driverLicense": {
					"type": "string",
					"description": "Driver License number of the customer",
					"example": "123456-789",
					"x-not-in-post": true,
					"x-mapField": "driver_license_update"
				},
				"companyName": {
					"type": "string",
					"description": "Company name of the customer",
					"example": "Demo Company",
					"x-mapField": "company_name"
				},
				"contactName": {
					"type": "string",
					"description": "Company contact name of the customer",
					"example": "Mr. Doe",
					"x-not-in-post": true,
					"x-mapField": "contact_name"
				},
				"customerIdType": {
					"type": "string",
					"description": "ID type of the customer; formatted \"customer.idType.\" followed by the id type (employerNumber or ssn)",
					"example": "customer.idType.ssn",
					"x-not-in-post": true,
					"x-mapField": "customer_id_type",
					"enum": [ "customer.idType.employerNumber", "customer.idType.sin", "customer.idType.ssn" ],
					"x-see": true
				},
				"customerId": {
					"type": "string",
					"description": "Customer ID",
					"example": "123456789",
					"x-not-in-post": true,
					"x-mapField": "customer_id_update"
				},
				"creditLimit": {
					"type": "number",
					"description": "Credit Limit for the customer",
					"example": "1200.00",
					"x-not-in-post": true,
					"x-mapField": "credit_limit",
					"format": "double"
				},
				"accessUserName": {
					"type": "string",
					"description": "Username for the end-user website",
					"example": "user_name555",
					"x-not-in-post": true,
					"x-mapField": "access_username"
				},
				"accessPassword": {
					"type": "string",
					"description": "Password for the end-user website",
					"example": "password",
					"x-not-in-post": true,
					"x-mapField": "access_password"
				},
				"active": {
					"type": "integer",
					"description": "The active status of the customer (1: active 0: inactive).",
					"x-not-in-post": true,
					"format": "int32"
				},
				"ofacMatch": {
					"type": "integer",
					"readOnly": true,
					"description": "Whether or not the customer is an OFAC match (Read Only) (1:Yes 0:no)",
					"x-not-in-post": true,
					"x-mapField": "ofac_match",
					"format": "int32"
				},
				"ofacTested": {
					"type": "integer",
					"readOnly": true,
					"description": "Whether or not the customer has been tested for OFAC compliance (Read Only) (1:Yes 0:no)",
					"x-not-in-post": true,
					"x-mapField": "ofac_tested",
					"format": "int32"
				},
				"saleTransferPii": {
					"type": "integer",
					"description": "Whether or not the customer allows to sell and\/or transfer their Personal Information (1:Yes 0:no)",
					"x-not-in-post": true,
					"x-mapField": "sale_transfer_pii",
					"format": "int32"
				},
				"passwordChanged": {
					"type": "integer",
					"description": "store if password was ever changed",
					"readOnly": true,
					"x-not-in-post": true,
					"x-mapField": "password_changed",
					"format": "int32"
				},
				"hasAvatar": {
					"type": "integer",
					"readOnly": true,
					"description": "Whether or not the customer has an avatar image (Read Only) (1:Yes 0:no)",
					"x-not-in-post": true,
					"x-mapField": "has_avatar",
					"format": "int32"
				},
				"loanRole": {
					"type": "string",
					"readOnly": true,
					"description": "Not used (Read Only)",
					"x-not-in-post": true
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date created as a Unix Timestamp (Read Only)",
					"x-not-in-post": true,
					"format": "date-time"
				},
				"lastUpdate": {
					"type": "string",
					"readOnly": true,
					"description": "Date updated as a Unix Timestamp (Read Only)",
					"x-not-in-post": true,
					"x-mapField": "last_update",
					"format": "date-time"
				},
				"creditScoreId": {
					"type": "integer",
					"description": "Credit score ID",
					"x-not-in-post": true,
					"x-mapField": "credit_score_id",
					"format": "int32"
				},
				"Address": {
					"$ref": "#\/definitions\/Address",
					"x-not-in-post": true
				},
				"Employers": {
					"$ref": "#\/definitions\/Employers",
					"x-not-in-post": true
				},
				"References": {
					"$ref": "#\/definitions\/References",
					"x-not-in-post": true
				},
				"PaymentAccounts": {
					"$ref": "#\/definitions\/PaymentAccounts",
					"x-not-in-post": true
				},
				"Phones": {
					"$ref": "#\/definitions\/Phones",
					"x-not-in-post": true
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": true
				},
				"CustomerDocuments": {
					"$ref": "#\/definitions\/CustomerDocuments",
					"x-not-in-post": true
				},
				"CreditScores": {
					"$ref": "#\/definitions\/CreditScores",
					"x-not-in-post": true
				},
				"SocialProfiles": {
					"$ref": "#\/definitions\/SocialProfiles",
					"x-not-in-post": false
				},
				"Notes": {
					"$ref": "#\/definitions\/Notes",
					"x-not-in-post": true
				}
			}
		},
		"Employers": {
			"required": [ "incomeFrequency", "payDateFrequency" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"companyName": {
					"type": "string",
					"description": "Name of the company.",
					"example": "Company 1",
					"x-mapField": "company_name"
				},
				"title": {
					"type": "string",
					"description": "Job title of the customer",
					"example": "Cashier"
				},
				"phone": {
					"type": "string",
					"description": "Phone number of the employer",
					"example": "8005551324"
				},
				"income": {
					"type": "number",
					"description": "Income of the customer",
					"example": "1200.00",
					"format": "float"
				},
				"incomeFrequency": {
					"type": "string",
					"description": "Income frequency of the customer (how often they receive the amount in the income field)",
					"example": "customerEmployer.incomeFrequency.biWeekly",
					"x-mapField": "income_frequency",
					"enum": [ "customerEmployer.incomeFrequency.annually", "customerEmployer.incomeFrequency.biWeekly", "customerEmployer.incomeFrequency.monthly", "customerEmployer.incomeFrequency.semiMonthly", "customerEmployer.incomeFrequency.weekly" ],
					"x-see": true
				},
				"hireDate": {
					"type": "string",
					"description": "Hire date of the customer (Unix Timestamp)",
					"example": "\/Date(1482056397)\/",
					"x-mapField": "hire_date",
					"format": "date-time"
				},
				"payDate": {
					"type": "string",
					"description": "Next date the customer is paid (Unix Timestamp)",
					"example": "\/Date(1408527369)",
					"x-mapField": "pay_date",
					"format": "date-time"
				},
				"payDateFrequency": {
					"type": "string",
					"description": "How often the customer is paid",
					"example": "customerEmployer.payDateFrequency.monthly",
					"x-mapField": "pay_date_frequency",
					"enum": [ "customerEmployer.payDateFrequency.biWeekly", "customerEmployer.payDateFrequency.monthly", "customerEmployer.payDateFrequency.semiMonthly", "customerEmployer.payDateFrequency.weekly" ],
					"x-see": true
				},
				"active": {
					"type": "string",
					"description": "Is the employer active? (1:Yes 0:No)",
					"example": "1"
				},
				"created": {
					"type": "string",
					"description": "Unix timstamp of when the employer was created (Read Only)",
					"example": "\/Date(1498572036)\/",
					"format": "date-time"
				},
				"Address": {
					"$ref": "#\/definitions\/Address",
					"x-not-in-post": false
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": false
				}
			}
		},
		"References": {
			"required": [ "relation" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"name": {
					"type": "string",
					"description": "Name of the Reference",
					"example": "Bill"
				},
				"relation": {
					"type": "string",
					"description": "Relation of the reference to the customer",
					"example": "customerReference.relation.friend",
					"enum": [ "customerReference.relation.brother", "customerReference.relation.coWorker", "customerReference.relation.daughter", "customerReference.relation.father", "customerReference.relation.friend", "customerReference.relation.husband", "customerReference.relation.mother", "customerReference.relation.sister", "customerReference.relation.son", "customerReference.relation.wife" ],
					"x-see": true
				},
				"primaryPhone": {
					"type": "string",
					"description": "Primary phone number of the reference",
					"example": "8005554623",
					"x-mapField": "primary_phone"
				},
				"secondaryPhone": {
					"type": "string",
					"description": "Primary phone number of the reference",
					"example": "8005551234",
					"x-mapField": "secondary_phone"
				},
				"active": {
					"type": "integer",
					"description": "Is the reference active? (1:Yes 0:No)",
					"example": "1",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Unix timestamp of when the reference was created",
					"example": "\/Date(1498507263)\/",
					"format": "date-time"
				},
				"Address": {
					"$ref": "#\/definitions\/Address",
					"x-not-in-post": false
				}
			}
		},
		"ChecklistItemValues": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"entityId": {
					"type": "integer",
					"description": "ID of the entity that uses this checklist value",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Type of the entity that uses this checklist value, written as \"Entity.\" followed by the entity type name.",
					"example": "Entity.Loans",
					"x-mapField": "entity_type"
				},
				"checklistId": {
					"type": "integer",
					"description": "ID of the checklist that this is under.",
					"x-mapField": "checklist_id",
					"format": "int32"
				},
				"checklistItemId": {
					"type": "integer",
					"description": "ID of the checklist item that this is for",
					"x-mapField": "checklist_item_id",
					"format": "int32"
				},
				"checklistItemValue": {
					"type": "integer",
					"description": "The value to set it to. (1:checked 0:unchecked)",
					"x-mapField": "checklist_item_value",
					"format": "int32"
				},
				"lastUpdated": {
					"type": "string",
					"description": "Date of the last update",
					"example": "\/Date(1427829732)\/",
					"x-mapField": "logged_date",
					"format": "date-time"
				}
			}
		},
		"Collateral": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-mapField": "id",
					"x-isKey": true,
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "ID of the associated loan",
					"example": "1",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"a": {
					"type": "string",
					"description": "Value for field A",
					"example": "Field A",
					"x-mapField": "a"
				},
				"b": {
					"type": "string",
					"description": "Value for field B",
					"example": "Field B",
					"x-mapField": "b"
				},
				"c": {
					"type": "string",
					"description": "Value for field C",
					"example": "Field C",
					"x-mapField": "c"
				},
				"d": {
					"type": "string",
					"description": "Value for field D",
					"example": "Field D",
					"x-mapField": "d"
				},
				"additional": {
					"type": "string",
					"description": "Additional Information",
					"example": "Information",
					"x-mapField": "additional"
				},
				"collateralType": {
					"type": "string",
					"description": "Collateral Type.",
					"example": "collateral.type.other",
					"x-mapField": "collateral_type"
				},
				"vin": {
					"type": "string",
					"description": "VIN for the collateral",
					"example": "VIN Number",
					"x-mapField": "vin"
				},
				"distance": {
					"type": "integer",
					"description": "Distance traveled on the vehicle (mi or km)",
					"example": "25000",
					"x-mapField": "distance",
					"format": "int32"
				},
				"bookValue": {
					"type": "number",
					"description": "Book value of the vehicle",
					"example": "2408.59",
					"x-mapField": "book_value",
					"format": "float"
				},
				"color": {
					"type": "string",
					"description": "Color",
					"example": "White",
					"x-mapField": "color"
				},
				"gpsStatus": {
					"type": "string",
					"description": "GPS status.",
					"example": "collateral.gpsstatus.notinstalled",
					"x-mapField": "gps_status"
				},
				"gpsCode": {
					"type": "string",
					"description": "GPS Code",
					"example": "NONE",
					"x-mapField": "gps_code"
				},
				"licensePlate": {
					"type": "string",
					"description": "License Plate number",
					"example": "License Plate Number",
					"x-mapField": "license_plate"
				},
				"gap": {
					"type": "string",
					"description": "GAP Insurance",
					"example": "1125.25",
					"x-mapField": "gap"
				},
				"warranty": {
					"type": "string",
					"description": "Warranty",
					"example": "1254",
					"x-mapField": "warranty"
				},
				"Loans": {
					"$ref": "#\/definitions\/Loans",
					"x-not-in-post": false
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": false
				}
			}
		},
		"Payments": {
			"required": [ "paymentMethodId", "entityType", "entityId", "amount", "info", "date" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"displayId": {
					"type": "integer",
					"description": "Display ID for the payment",
					"example": "24508",
					"x-mapField": "display_id",
					"format": "int32"
				},
				"paymentInfoId": {
					"type": "integer",
					"description": "Payment info ID",
					"example": "null",
					"x-mapField": "payment_info_id",
					"format": "int32"
				},
				"paymentTypeId": {
					"type": "integer",
					"description": "Payment Type ID",
					"example": "1",
					"x-mapField": "payment_type_id",
					"format": "int32"
				},
				"paymentMethodId": {
					"type": "integer",
					"description": "Payment Method ID",
					"example": "3",
					"x-mapField": "payment_method_id",
					"format": "int32"
				},
				"paymentAccountId": {
					"type": "integer",
					"x-mapField": "payment_account_id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Type of target entity",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "ID of target entity",
					"example": "3",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "Modification ID",
					"example": "2",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"cashDrawerId": {
					"type": "integer",
					"description": "Cash Drawer ID",
					"example": "2",
					"x-mapField": "cash_drawer_id",
					"format": "int32"
				},
				"cashDrawerTxId": {
					"type": "integer",
					"description": "Cash drawer transaction ID",
					"example": "3",
					"x-mapField": "cash_drawer_tx_id",
					"format": "int32"
				},
				"txSnapshotId": {
					"type": "integer",
					"description": "Snapshot of how the payment applied before reversed",
					"example": "3",
					"x-mapField": "tx_snapshot_id",
					"format": "int32"
				},
				"amount": {
					"type": "number",
					"description": "Payment amount",
					"example": "200.00",
					"x-mapField": "amount",
					"format": "float"
				},
				"extra": {
					"type": "string",
					"description": "Extra application",
					"example": "payment.extra.tx.principal",
					"x-mapField": "extra"
				},
				"lastExtra": {
					"type": "string",
					"description": "Extra application",
					"example": "payment.extra.tx.principal",
					"x-mapField": "last_extra"
				},
				"early": {
					"type": "integer",
					"description": "Is it an early payment? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "early",
					"format": "int32"
				},
				"payoffFlag": {
					"type": "integer",
					"description": "Is it a payoff payment? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "payoff_flag",
					"format": "int32"
				},
				"payoffApplyDiffAs": {
					"type": "string",
					"description": "Payoff Apply Difference as option",
					"example": "payoff.applydiff.chargeoff",
					"x-mapField": "payoff_diff_apply"
				},
				"payoffOptions": {
					"type": "string",
					"description": "Options for the payoff",
					"example": "{\"quotedPayoff\":800,\"customPayoff\":1,\"customPayoffDiff\":300,\"diffTxCategory\":1}",
					"x-mapField": "payoff_options"
				},
				"customApplication": {
					"type": "string",
					"description": "Custom method for determining payment application",
					"example": "{interest: 800}",
					"x-mapField": "custom_application"
				},
				"info": {
					"type": "string",
					"description": "Information about the payment",
					"example": "Payment demo",
					"x-mapField": "info"
				},
				"date": {
					"type": "string",
					"description": "Payment date as a Unix Timestamp",
					"example": "\/Date(14587965135)\/",
					"x-mapField": "apply_date",
					"format": "date-time"
				},
				"chargeFeeType": {
					"type": "string",
					"description": "Charge fee type",
					"example": "loan.cardfee.types.0",
					"x-mapField": "charge_fee_type"
				},
				"chargeFeeAmount": {
					"type": "number",
					"description": "Charge fee amount",
					"example": "0.00",
					"x-mapField": "charge_fee_amount",
					"format": "float"
				},
				"chargeFeePercentage": {
					"type": "number",
					"description": "Charge fee percentage",
					"example": "0.00",
					"x-mapField": "charge_fee_percentage",
					"format": "float"
				},
				"echeckAuthType": {
					"type": "string",
					"description": "Echeck authorization type",
					"example": "payment.echeckauth.WEB",
					"x-mapField": "echeck_auth_type",
					"enum": [ "payment.echeckauth.CCD", "payment.echeckauth.PPD", "payment.echeckauth.TEL", "payment.echeckauth.WEB" ],
					"x-see": true
				},
				"parentId": {
					"type": "integer",
					"description": "Parent payment ID",
					"example": "null",
					"x-mapField": "parent",
					"format": "int32"
				},
				"childId": {
					"type": "integer",
					"description": "Child payment ID",
					"example": "null",
					"x-mapField": "child",
					"format": "int32"
				},
				"status": {
					"type": "string",
					"description": "Status of the charge",
					"example": "payment.status.voided",
					"x-mapField": "status"
				},
				"reverseReason": {
					"type": "string",
					"description": "Reversal reason",
					"example": "payment.reverse.checkBounce",
					"x-mapField": "reverse_reason"
				},
				"reverseDate": {
					"type": "string",
					"description": "Unix timestamp of reversal date",
					"example": "\/Date(1424858473)\/",
					"x-mapField": "reverse_date",
					"format": "date-time"
				},
				"comments": {
					"type": "string",
					"description": "Reversal comment",
					"example": "Comment",
					"x-mapField": "comments"
				},
				"loanStatusId": {
					"type": "integer",
					"description": "Loan status ID",
					"example": "1",
					"x-mapField": "loan_status",
					"format": "int32"
				},
				"loanSubStatusId": {
					"type": "integer",
					"description": "Loan substatus ID",
					"example": "1",
					"x-mapField": "loan_substatus",
					"format": "int32"
				},
				"sourceCompanyId": {
					"type": "integer",
					"description": "Source company ID",
					"example": "1",
					"x-mapField": "source_company",
					"format": "int32"
				},
				"beforePrincipalBalance": {
					"type": "number",
					"description": "Principal balance before payment",
					"example": "7498.74",
					"x-mapField": "before_principal_balance",
					"format": "float"
				},
				"beforePayoff": {
					"type": "number",
					"description": "Payoff before payment",
					"example": "8000.00",
					"x-mapField": "before_payoff",
					"format": "float"
				},
				"beforeNextDueDate": {
					"type": "string",
					"description": "Next due date before payment (Unix timestamp)",
					"example": "\/Date(1451876251)\/",
					"x-mapField": "before_next_due_date",
					"format": "date-time"
				},
				"beforeNextDueAmount": {
					"type": "number",
					"description": "Next due amount before payment",
					"example": "152.05",
					"x-mapField": "before_next_due_amount",
					"format": "float"
				},
				"beforeAmountPastDue": {
					"type": "number",
					"description": "Amount past due before payment",
					"example": "12.50",
					"x-mapField": "before_amount_past_due",
					"format": "float"
				},
				"beforeDaysPastDue": {
					"type": "integer",
					"description": "Days past due before payment",
					"example": "5",
					"x-mapField": "before_days_past_due",
					"format": "int32"
				},
				"afterPrincipalBalance": {
					"type": "number",
					"description": "Principal balance after payment",
					"example": "7450.50",
					"x-mapField": "after_principal_balance",
					"format": "float"
				},
				"afterPayoff": {
					"type": "number",
					"description": "Payoff after payment",
					"example": "7820.00",
					"x-mapField": "after_payoff",
					"format": "float"
				},
				"afterNextDueDate": {
					"type": "string",
					"description": "Next due date after payment (Unix timestamp)",
					"example": "\/Date(14549814321)\/",
					"x-mapField": "after_next_due_date",
					"format": "date-time"
				},
				"afterNextDueAmount": {
					"type": "number",
					"description": "Next due amount after payment",
					"example": "25.05",
					"x-mapField": "after_next_due_amount",
					"format": "float"
				},
				"afterAmountPastDue": {
					"type": "number",
					"description": "Amount past due after payment",
					"example": "0.00",
					"x-mapField": "after_amount_past_due",
					"format": "float"
				},
				"afterDaysPastDue": {
					"type": "integer",
					"description": "Days past due after payment",
					"example": "0.00",
					"x-mapField": "after_days_past_due",
					"format": "int32"
				},
				"systemComments": {
					"type": "string",
					"description": "System comments about the payment",
					"example": "[\"Loan was not activated when the payment was logged.\"]",
					"x-mapField": "system_comments"
				},
				"chargeOffRecovery": {
					"type": "integer",
					"description": "Is there a charge off recovery? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "charge_off_recovery",
					"format": "int32"
				},
				"resetPastDue": {
					"type": "integer",
					"description": "Reset past due to a certain number of days past due",
					"example": "0",
					"x-mapField": "reset_past_due",
					"format": "int32"
				},
				"apdAdjustmentId": {
					"type": "integer",
					"description": "Amount Past Due adjustment ID",
					"example": "1",
					"x-mapField": "apd_adjustment_id",
					"format": "int32"
				},
				"dpdAdjustmentId": {
					"type": "integer",
					"description": "Days Past Due adjustment ID",
					"example": "1",
					"x-mapField": "dpd_adjustment_id",
					"format": "int32"
				},
				"paymentMethodOption": {
					"type": "string",
					"description": "Payment method option",
					"example": "null",
					"x-mapField": "payment_method_option"
				},
				"paymentMethodName": {
					"type": "string",
					"description": "Payment method name",
					"example": "null",
					"x-mapField": "payment_method_name"
				},
				"isSplit": {
					"type": "integer",
					"description": "Is the payment split? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "is_split",
					"format": "int32"
				},
				"splitId": {
					"type": "integer",
					"description": "ID of the payment split",
					"example": "232",
					"x-mapField": "split_id",
					"format": "int32"
				},
				"nachaReturnCode": {
					"type": "string",
					"readOnly": true,
					"x-mapField": "nacha_return_code"
				},
				"active": {
					"type": "integer",
					"description": "Is the payment active? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Creation date of the payment as a Unix Timestamp",
					"example": "\/Date(142416873)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"reportExtendedData": { "type": "string" },
				"createdBy": { "type": "string" },
				"autopayId": {
					"type": "integer",
					"readOnly": true,
					"x-mapField": "autopay_id",
					"format": "int32"
				},
				"CustomPaymentTypes": {
					"$ref": "#\/definitions\/CustomPaymentTypes",
					"x-not-in-post": false
				},
				"APDAdjustments": {
					"$ref": "#\/definitions\/APDAdjustments",
					"x-not-in-post": false
				},
				"DPDAdjustments": {
					"$ref": "#\/definitions\/DPDAdjustments",
					"x-not-in-post": false
				},
				"PaymentAccounts": {
					"$ref": "#\/definitions\/PaymentAccounts",
					"x-not-in-post": false
				},
				"CustomPaymentMethods": {
					"$ref": "#\/definitions\/CustomPaymentMethods",
					"x-not-in-post": false
				},
				"PaymentInfo": {
					"$ref": "#\/definitions\/PaymentInfo",
					"x-not-in-post": false
				},
				"PaymentReverseTx": {
					"$ref": "#\/definitions\/PaymentReverseTx",
					"x-not-in-post": false
				},
				"LinkedInfo": {
					"$ref": "#\/definitions\/LinkedInfo",
					"x-not-in-post": false
				},
				"ChargeOff": {
					"$ref": "#\/definitions\/ChargeOff",
					"x-not-in-post": false
				},
				"Portfolios": {
					"$ref": "#\/definitions\/Portfolios",
					"x-not-in-post": false
				},
				"SubPortfolios": {
					"$ref": "#\/definitions\/SubPortfolios",
					"x-not-in-post": false
				},
				"LoanStatus": {
					"$ref": "#\/definitions\/LoanStatus",
					"x-not-in-post": false
				},
				"LoanSubStatus": {
					"$ref": "#\/definitions\/LoanSubStatus",
					"x-not-in-post": false
				},
				"SourceCompanies": {
					"$ref": "#\/definitions\/SourceCompanies",
					"x-not-in-post": false
				},
				"CashDrawerTransactions": {
					"$ref": "#\/definitions\/CashDrawerTransactions",
					"x-not-in-post": false
				},
				"Payments": {
					"$ref": "#\/definitions\/Payments",
					"x-not-in-post": false
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": false
				},
				"TransactionChilds": {
					"$ref": "#\/definitions\/TransactionChilds",
					"x-not-in-post": false
				}
			}
		},
		"PaymentInfo": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"paymentId": {
					"type": "integer",
					"description": "ID of the payment",
					"example": "90",
					"x-mapField": "payment_id",
					"format": "int32"
				},
				"processorId": {
					"type": "string",
					"description": "Payment processor ID",
					"example": "payment.processor.authorizenet",
					"x-mapField": "processor_id"
				},
				"processorTxId": {
					"type": "string",
					"description": "Procesor Transaction ID for the payment",
					"example": "0",
					"x-mapField": "processor_tx_id"
				},
				"transactionId": {
					"type": "string",
					"description": "Transaction ID for the payment",
					"example": "0",
					"x-mapField": "transaction_id"
				},
				"processorStatus": {
					"type": "string",
					"description": "Processor status id",
					"example": "13",
					"x-mapField": "processor_status"
				},
				"status": {
					"type": "string",
					"description": "The status of the payment",
					"example": "status",
					"x-mapField": "status"
				},
				"description": {
					"type": "string",
					"description": "Description of the payment info",
					"example": "Description",
					"x-mapField": "description"
				},
				"batchId": {
					"type": "string",
					"description": "Batch ID for the payment",
					"example": "null",
					"x-mapField": "batch_id"
				},
				"appliedDate": {
					"type": "string",
					"description": "Applied Date for the payment (Unix timestamp)",
					"example": "\/Date(1478236953)\/",
					"x-mapField": "applied_date",
					"format": "date-time"
				},
				"updated": {
					"type": "string",
					"description": "Update date (Unix Timestamp)",
					"example": "\/Date(1354980325)\/",
					"x-mapField": "lastUpdated",
					"format": "date-time"
				},
				"pnmRetailerName": {
					"type": "string",
					"description": "Pay Near Me retailer that the payment was made at",
					"example": "Retailer"
				},
				"pnmRetailerId": {
					"type": "string",
					"description": "Pay Near Me retailer ID",
					"example": "12"
				},
				"pnmRetailerAddr": {
					"type": "string",
					"description": "Pay Near Me retailer",
					"example": "123 Oak Ln"
				},
				"pnmRetailerLat": {
					"type": "string",
					"description": "Pay Near Me retailer Latitude",
					"example": "114.025"
				},
				"pnmRetailerLon": {
					"type": "string",
					"description": "Pay Near Me retailer Longitude",
					"example": "0.000"
				},
				"processorName": { "type": "string" }
			}
		},
		"PaymentReverseTx": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"paymentId": {
					"type": "integer",
					"description": "Associated payment ID",
					"example": "24",
					"x-mapField": "payment_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "The ID of the target modification",
					"example": "1",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"date": {
					"type": "string",
					"description": "The date of the transaction (Unix timestamp)",
					"example": "\/Date(1425843210)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"period": {
					"type": "integer",
					"description": "The period of the transaction",
					"example": "0",
					"x-mapField": "period",
					"format": "int32"
				},
				"periodStart": {
					"type": "string",
					"description": "The period start date (Unix timestamp)",
					"example": "\/Date(14245684790)\/",
					"x-mapField": "period_start",
					"format": "date-time"
				},
				"periodEnd": {
					"type": "string",
					"description": "The period end date (Unix timestamp)",
					"example": "\/Date(14252165125432)\/",
					"x-mapField": "period_end",
					"format": "date-time"
				},
				"title": {
					"type": "string",
					"description": "The transaction title",
					"example": "Title",
					"x-mapField": "title"
				},
				"paymentAmount": {
					"type": "number",
					"description": "Associated payment amount",
					"example": "120.25",
					"x-mapField": "payment_amount",
					"format": "float"
				},
				"paymentInterest": {
					"type": "number",
					"description": "Associated payment interest application amount",
					"example": "13.45",
					"x-mapField": "payment_i",
					"format": "float"
				},
				"paymentPrincipal": {
					"type": "number",
					"description": "Associated payment principal application amount",
					"example": "105.56",
					"x-mapField": "payment_p",
					"format": "float"
				},
				"paymentDiscount": {
					"type": "number",
					"description": "Associated payment discount application amount",
					"example": "50.65",
					"x-mapField": "payment_d",
					"format": "float"
				},
				"paymentFees": {
					"type": "number",
					"description": "Associated payment fee application amount",
					"example": "24.34",
					"x-mapField": "payment_f",
					"format": "float"
				},
				"feesPaidDetails": {
					"type": "string",
					"description": "Details about the fees paid",
					"example": "null",
					"x-mapField": "fees_paid_details"
				},
				"paymentEscrow": {
					"type": "number",
					"description": "Associated payment escrow application amount",
					"example": "12.00",
					"x-mapField": "payment_e",
					"format": "float"
				},
				"paymentEscrowBreakdown": {
					"type": "string",
					"description": "Associated payment escrow breakdown",
					"example": "null",
					"x-mapField": "payment_e_breakdown"
				},
				"future": {
					"type": "integer",
					"description": "(Is this field used?)",
					"example": "0",
					"x-mapField": "future",
					"format": "int32"
				},
				"principalOnly": {
					"type": "integer",
					"description": "Is the transaction principal only? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "principalonly",
					"format": "int32"
				},
				"chargeOff": {
					"type": "integer",
					"description": "Is this transaction a charge off? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "charge_off",
					"format": "int32"
				},
				"paymentType": {
					"type": "integer",
					"description": "Payment Type ID",
					"example": "1",
					"x-mapField": "payment_type",
					"format": "int32"
				},
				"adbDays": {
					"type": "integer",
					"description": "ADB days.",
					"example": "3",
					"x-mapField": "adb_days",
					"format": "int32"
				},
				"adb": {
					"type": "number",
					"description": "ADB? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "adb",
					"format": "float"
				},
				"principalBalance": {
					"type": "number",
					"description": "What is the principal balance after the transaction?",
					"example": "43000",
					"x-mapField": "principal_balance",
					"format": "float"
				}
			}
		},
		"Charges": {
			"required": [ "entityType", "entityId", "chargeTypeId", "amount", "info" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"displayId": {
					"type": "integer",
					"description": "The display ID of the charge",
					"example": "123246",
					"x-mapField": "display_id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "The target entity type",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "The target entity ID",
					"example": "1",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"relatedPaymentId": {
					"type": "integer",
					"description": "Payment that cause this charge",
					"example": "1",
					"x-mapField": "related_payment_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "The modification ID",
					"example": "1",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"chargeTypeId": {
					"type": "integer",
					"description": "The charge type ID",
					"example": "1",
					"x-mapField": "type",
					"format": "int32"
				},
				"chargeApplicationType": {
					"type": "string",
					"description": "The charge application type",
					"example": "loan.latefeeapp.standard",
					"x-mapField": "charge_application_type",
					"enum": [ "loan.latefeeapp.payoff", "loan.latefeeapp.standard" ],
					"x-see": true
				},
				"pastDueSetting": {
					"type": "string",
					"description": "Past Due Setting",
					"example": "loan.pastdue.omitted",
					"x-mapField": "past_due_setting",
					"enum": [ "loan.pastdue.include", "loan.pastdue.omitted" ],
					"x-see": true
				},
				"amount": {
					"type": "number",
					"description": "The amount charged",
					"example": "2.25",
					"x-mapField": "amount",
					"format": "float"
				},
				"paidAmount": {
					"type": "number",
					"description": "The amount paid",
					"example": "2.25",
					"x-mapField": "paid_amount",
					"format": "float"
				},
				"paidPercent": {
					"type": "number",
					"description": "The percentage paid",
					"example": "100.00",
					"x-mapField": "paid_percent",
					"format": "float"
				},
				"pastDueCalculation": {
					"type": "string",
					"description": "Past due calculation method",
					"example": "loan.feepastduecalc.immediate",
					"x-mapField": "past_due_calculation",
					"enum": [ "loan.feepastduecalc.date", "loan.feepastduecalc.immediate" ],
					"x-see": true
				},
				"interestBearing": {
					"type": "number",
					"description": "Is charge interest bearing?",
					"example": "1",
					"x-mapField": "interest_bearing",
					"format": "float"
				},
				"date": {
					"type": "string",
					"description": "Date for charge to be applied (Unix timestamp)",
					"example": "\/Date(13246789)\/",
					"x-mapField": "apply_date",
					"format": "date-time"
				},
				"info": {
					"type": "string",
					"description": "Information about the charge",
					"example": "Info",
					"x-mapField": "info"
				},
				"parentId": {
					"type": "integer",
					"description": "Parent ID of the charge",
					"example": "null",
					"x-mapField": "parent",
					"format": "int32"
				},
				"childId": {
					"type": "integer",
					"description": "Child ID of the charge",
					"example": "null",
					"x-mapField": "child",
					"format": "int32"
				},
				"editComment": {
					"type": "string",
					"description": "Edit comment",
					"example": "Edit",
					"x-mapField": "edit_comment"
				},
				"active": {
					"type": "integer",
					"description": "Is active? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Creation date of the charge (Unix timestamp; Read Only)",
					"example": "\/Date(142355786)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"isReversal": {
					"type": "integer",
					"description": "Has the charge been reveresed? (1:Yes 0:No)",
					"example": "1",
					"format": "int32"
				},
				"CustomChargeTypes": {
					"$ref": "#\/definitions\/CustomChargeTypes",
					"x-not-in-post": false
				},
				"LinkedInfo": {
					"$ref": "#\/definitions\/LinkedInfo",
					"x-not-in-post": false
				},
				"Charges": {
					"$ref": "#\/definitions\/Charges",
					"x-not-in-post": false
				}
			}
		},
		"LoanDocuments": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "ID of the target loan",
					"example": "12",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"description": "ID of the user that uploaded the document",
					"example": "1",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"sectionId": {
					"type": "integer",
					"description": "ID of the Document Section",
					"example": "4",
					"x-mapField": "section_id",
					"format": "int32"
				},
				"fileAttachmentId": {
					"type": "integer",
					"description": "File attachment ID",
					"example": "4",
					"x-mapField": "file_attachment_id",
					"format": "int32"
				},
				"userName": {
					"type": "string",
					"description": "Name of the user that uploaded the document",
					"example": "Demo",
					"x-mapField": "user_name"
				},
				"remoteAddress": {
					"type": "string",
					"description": "IP address of the user that uploaded the document",
					"example": "127.0.0.1",
					"x-mapField": "remote_addr"
				},
				"fileName": {
					"type": "string",
					"description": "Name of the file that was uploaded",
					"example": "filedemo.jpg",
					"x-mapField": "filename"
				},
				"description": {
					"type": "string",
					"description": "d",
					"example": "e",
					"x-mapField": "description"
				},
				"ip": {
					"type": "integer",
					"description": "IP address",
					"example": "127.0.0.1",
					"x-mapField": "ip",
					"format": "int32"
				},
				"size": {
					"type": "integer",
					"description": "Size of the file (bytes)",
					"example": "115599",
					"x-mapField": "size",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"description": "Is the document active? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Date created (Unix timestamp)",
					"example": "\/Date(148579321)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"archived": {
					"type": "integer",
					"description": "Is the document archived? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "archived",
					"format": "int32"
				},
				"customerVisible": {
					"type": "integer",
					"description": "Is the document visible to the customer? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "customer_visible",
					"format": "int32"
				},
				"Loans": {
					"$ref": "#\/definitions\/Loans",
					"x-not-in-post": false
				},
				"Users": {
					"$ref": "#\/definitions\/Users",
					"x-not-in-post": false
				},
				"DocSections": {
					"$ref": "#\/definitions\/DocSections",
					"x-not-in-post": false
				},
				"FileAttachments": {
					"$ref": "#\/definitions\/FileAttachments",
					"x-not-in-post": false
				}
			}
		},
		"CanadianBanks": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"bankId": {
					"type": "string",
					"description": "Bank ID",
					"x-mapField": "bank_id"
				},
				"bankName": {
					"type": "string",
					"description": "Bank Name",
					"example": "Bank Name",
					"x-mapField": "bank_name"
				}
			}
		},
		"Notes": {
			"required": [ "type" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"parentType": {
					"type": "string",
					"description": "Entity type of parent entity",
					"example": "Entity.Customer",
					"x-mapField": "parent_type"
				},
				"parentId": {
					"type": "integer",
					"description": "ID of parent entity",
					"example": "4",
					"x-mapField": "parent_id",
					"format": "int32"
				},
				"categoryId": {
					"type": "integer",
					"description": "ID of note category",
					"example": "2",
					"x-mapField": "category_id",
					"format": "int32"
				},
				"subject": {
					"type": "string",
					"description": "Subject of the note.",
					"example": "Subject"
				},
				"body": {
					"type": "string",
					"description": "Body of the note",
					"example": "Text"
				},
				"authorId": {
					"type": "integer",
					"description": "ID of the user that made the note",
					"example": "1",
					"x-mapField": "author_id",
					"format": "int32"
				},
				"authorName": {
					"type": "string",
					"description": "Name of the user that made the note",
					"example": "Bob",
					"x-mapField": "author_name"
				},
				"remoteAddress": {
					"type": "string",
					"description": "IP address of the user that made the note",
					"example": "127.0.0.1",
					"x-mapField": "remote_address"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Creation date of the note as a Unix timestamp.",
					"example": "\/Date(1457851235)\/",
					"format": "date-time"
				},
				"type": {
					"type": "string",
					"description": "Note type",
					"example": "NOTICE"
				},
				"expirationDate": {
					"type": "string",
					"description": "Expiration date of the notice notes",
					"example": "\/Date(1457851235)\/",
					"x-mapField": "expiration_date",
					"x-dateFormat": "Y-m-d",
					"format": "date-time"
				},
				"NoteCategories": {
					"$ref": "#\/definitions\/NoteCategories",
					"x-not-in-post": false
				},
				"Users": {
					"$ref": "#\/definitions\/Users",
					"x-not-in-post": false
				},
				"FileAttachments": {
					"$ref": "#\/definitions\/FileAttachments",
					"x-not-in-post": false
				}
			}
		},
		"Phones": {
			"required": [ "type", "isPrimary", "isSecondary", "active" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"entityId": {
					"type": "integer",
					"description": "ID of the parent entity",
					"example": "1",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Type of the parent entity",
					"example": "Entity.Customer",
					"x-mapField": "entity_type"
				},
				"phone": {
					"type": "string",
					"description": "Phone number",
					"example": "8005553321"
				},
				"type": {
					"type": "string",
					"description": "Phone type",
					"example": "customer.phoneType.cell",
					"enum": [ "customer.phoneType.cell", "customer.phoneType.cellSmartPhone", "customer.phoneType.fax", "customer.phoneType.home", "customer.phoneType.office", "customer.phoneType.other" ],
					"x-see": true
				},
				"isPrimary": {
					"type": "integer",
					"description": "Is it the primary phone number? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "is_primary",
					"format": "int32"
				},
				"isSecondary": {
					"type": "integer",
					"description": "Is it the secondary phone number? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "is_secondary",
					"format": "int32"
				},
				"sbtMktVerifyPIN": {
					"type": "string",
					"description": "PIN number for SBT marketing verification",
					"example": "1111",
					"x-mapField": "sbt_mkt_verify_pin"
				},
				"sbtActVerifyPIN": {
					"type": "string",
					"description": "PIN number for SBT account updates verification",
					"example": "0000",
					"x-mapField": "sbt_act_verify_pin"
				},
				"sbtMktVerifyPending": {
					"type": "integer",
					"description": "Is verification for SBT marketing pending? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "sbt_mkt_verify_pending",
					"format": "int32"
				},
				"sbtActVerifyPending": {
					"type": "integer",
					"description": "Is verification for SBT account updates pending? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "sbt_act_verify_pending",
					"format": "int32"
				},
				"sbtMktVerified": {
					"type": "integer",
					"description": "Has it been verified for SBT marketing texts? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "sbt_mkt_verified",
					"format": "int32"
				},
				"sbtActVerified": {
					"type": "integer",
					"description": "Has it been verified for SBT account update texts? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "sbt_act_verified",
					"format": "int32"
				},
				"carrierName": {
					"type": "string",
					"description": "Name of the phone carrier",
					"example": "Sprint",
					"x-mapField": "carrier_name"
				},
				"carrierVerified": {
					"type": "integer",
					"x-mapField": "carrier_verified",
					"format": "int32"
				},
				"isLandLine": {
					"type": "integer",
					"description": "Is the phone a landline? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "landline",
					"format": "int32"
				},
				"dndEnabled": {
					"type": "integer",
					"description": "Do not disturb setting",
					"x-mapField": "dnd_enabled",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"description": "Is the phone active? (1:Yes 0:No)",
					"example": "0",
					"format": "int32"
				}
			}
		},
		"LoanSettings": {
			"required": [ "loanId", "cardFeeType", "loanStatusId", "loanSubStatusId", "eBilling", "ECOACode", "coBuyerECOACode", "creditStatus", "creditBureau", "reportingType", "secured", "autopayEnabled" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "ID of the associated loan",
					"example": 2,
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"cardFeeAmount": {
					"type": "number",
					"description": "Amount to charge for the card fee.",
					"example": 5,
					"x-mapField": "card_fee_amount",
					"format": "float"
				},
				"cardFeeType": {
					"type": "string",
					"description": "Type of the card fee; formated \"loan.cardfee.types.\" followed by the id of the card fee type.",
					"example": "loan.cardfee.types.1",
					"x-mapField": "card_fee_type",
					"enum": [ "loan.cardfee.types.0", "loan.cardfee.types.1", "loan.cardfee.types.2", "loan.cardfee.types.3", "loan.cardfee.types.4" ],
					"x-see": true
				},
				"cardFeePercent": {
					"type": "number",
					"description": "Percentage of the card fee",
					"example": "5",
					"x-mapField": "card_fee_percent",
					"format": "float"
				},
				"agent": {
					"type": "integer",
					"description": "ID of the loan's associated agent",
					"example": "12",
					"x-mapField": "agent",
					"format": "int32"
				},
				"loanStatusId": {
					"type": "integer",
					"description": "The id of the status of the associated loan",
					"example": "2",
					"x-mapField": "loan_status_id",
					"format": "int32"
				},
				"loanSubStatusId": {
					"type": "integer",
					"description": "The id of the sub-status of the associated loan",
					"example": "10",
					"x-mapField": "loan_sub_status_id",
					"format": "int32"
				},
				"sourceCompany": {
					"type": "integer",
					"description": "The id of the source company of the associated loan",
					"example": "3",
					"x-mapField": "source_company",
					"format": "int32"
				},
				"eBilling": {
					"type": "integer",
					"description": "If the loan uses e-billing (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "ebilling",
					"format": "int32"
				},
				"ECOACode": {
					"type": "string",
					"description": "The ECOA Code for the primary borrower; formated \"loan.ecoacodes.\" followed by the ecoa code.",
					"x-mapField": "ecoa_code",
					"enum": [ "loan.ecoacodes.0", "loan.ecoacodes.1", "loan.ecoacodes.2", "loan.ecoacodes.7", "loan.ecoacodes.A", "loan.ecoacodes.T", "loan.ecoacodes.X", "loan.ecoacodes.Z" ],
					"x-see": true
				},
				"coBuyerECOACode": {
					"type": "string",
					"description": "The ECOA Code for the co-borrower; formated \"loan.ecoacodes.\" followed by the ecoa code.",
					"x-mapField": "co_ecoa_code",
					"enum": [ "loan.ecoacodes.0", "loan.ecoacodes.1", "loan.ecoacodes.2", "loan.ecoacodes.7", "loan.ecoacodes.A", "loan.ecoacodes.T", "loan.ecoacodes.X", "loan.ecoacodes.Z" ],
					"x-see": true
				},
				"creditStatus": {
					"type": "string",
					"description": "The Credit status for the loan; formated \"loan.creditstatus.\" followed by the credit status.",
					"x-mapField": "credit_status",
					"enum": [ "loan.creditstatus.0", "loan.creditstatus.11", "loan.creditstatus.13", "loan.creditstatus.5", "loan.creditstatus.61", "loan.creditstatus.62", "loan.creditstatus.63", "loan.creditstatus.64", "loan.creditstatus.71", "loan.creditstatus.78", "loan.creditstatus.80", "loan.creditstatus.82", "loan.creditstatus.83", "loan.creditstatus.84", "loan.creditstatus.93", "loan.creditstatus.95", "loan.creditstatus.96", "loan.creditstatus.97", "loan.creditstatus.99", "loan.creditstatus.DA", "loan.creditstatus.DF" ],
					"x-see": true
				},
				"creditBureau": {
					"type": "string",
					"description": "The Credit Bureau status id; formatted \"loan.creditbureau.\" followed by the credit bureau status id",
					"example": "loan.creditbureau.00",
					"x-mapField": "credit_bureau",
					"enum": [ "loan.creditbureau.00", "loan.creditbureau.01", "loan.creditbureau.02", "loan.creditbureau.03", "loan.creditbureau.04", "loan.creditbureau.06", "loan.creditbureau.08", "loan.creditbureau.0A", "loan.creditbureau.0G", "loan.creditbureau.11", "loan.creditbureau.12", "loan.creditbureau.13", "loan.creditbureau.15", "loan.creditbureau.17", "loan.creditbureau.18", "loan.creditbureau.1C", "loan.creditbureau.20", "loan.creditbureau.22", "loan.creditbureau.23", "loan.creditbureau.26", "loan.creditbureau.3A", "loan.creditbureau.47", "loan.creditbureau.5A", "loan.creditbureau.5B", "loan.creditbureau.6A", "loan.creditbureau.6B", "loan.creditbureau.6D", "loan.creditbureau.7A", "loan.creditbureau.89", "loan.creditbureau.90", "loan.creditbureau.91" ],
					"x-see": true
				},
				"reportingType": {
					"type": "string",
					"description": "The credit reporting type for the loan; formatted \"loan.reportingtype.\" followed by the loan reporting type.",
					"example": "loan.reportingtype.I",
					"x-mapField": "reporting_type",
					"enum": [ "loan.reportingtype.C", "loan.reportingtype.I", "loan.reportingtype.M", "loan.reportingtype.O", "loan.reportingtype.R" ],
					"x-see": true
				},
				"secured": {
					"type": "integer",
					"description": "If the loan is secured (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "secured",
					"format": "int32"
				},
				"autopayEnabled": {
					"type": "integer",
					"description": "Whether or not autopay is enabled for the loan (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "autopay_enabled",
					"format": "int32"
				},
				"repoDate": {
					"type": "string",
					"description": "Date of reposession (Unix Timestamp)",
					"example": "\/Date(1427829732)\/",
					"x-mapField": "repo_date",
					"x-isDateType": true,
					"x-dateFormat": "Y-m-d",
					"format": "date-time"
				},
				"closedDate": {
					"type": "string",
					"description": "Date of when the loan was closed (Unix Timestamp)",
					"example": "\/Date(1427829732)\/",
					"x-mapField": "closed_date",
					"x-isDateType": true,
					"x-dateFormat": "Y-m-d",
					"format": "date-time"
				},
				"liquidationDate": {
					"type": "string",
					"description": "Date of the liquidation of the loan (Unix Timestamp)",
					"example": "\/Date(1427829732)\/",
					"x-mapField": "liquidation_date",
					"x-isDateType": true,
					"x-dateFormat": "Y-m-d",
					"format": "date-time"
				},
				"followUpDate": {
					"type": "string",
					"description": "Date of the follow-up of the loan (Unix Timestamp)",
					"example": "\/Date(1427829732)\/",
					"x-mapField": "followup_date",
					"x-isDateType": true,
					"x-dateFormat": "Y-m-d",
					"format": "date-time"
				},
				"isStoplightManuallySet": {
					"type": "integer",
					"description": "Whether or not the timestamp is manually set (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "is_stoplight_manually_set",
					"format": "int32"
				},
				"merchantProcessorGroupId": {
					"type": "integer",
					"description": "Merchant processor group identifier",
					"x-mapField": "merchant_processor_group_id",
					"format": "int32"
				},
				"Loans": {
					"$ref": "#\/definitions\/Loans",
					"x-not-in-post": false
				},
				"LoanStatus": {
					"$ref": "#\/definitions\/LoanStatus",
					"x-not-in-post": false
				},
				"LoanSubStatus": {
					"$ref": "#\/definitions\/LoanSubStatus",
					"x-not-in-post": false
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": false
				},
				"SourceCompanies": {
					"$ref": "#\/definitions\/SourceCompanies",
					"x-not-in-post": false
				},
				"MerchantProcessorGroups": {
					"$ref": "#\/definitions\/MerchantProcessorGroups",
					"x-not-in-post": false
				}
			}
		},
		"LoanSetup": {
			"required": [ "loanId", "modId", "active", "aprForceSingle", "regzCustomEnabled", "loanRateType", "loanClass", "loanType", "discountSplit", "paymentFrequency", "calcType", "daysInYear", "interestApplication", "begEnd", "firstPeriodDays", "firstDayInterest", "discountCalc", "diyAlt", "dueDateOnLastDOM", "dueDatesOnBusinessDays", "daysInPeriod", "roundDecimals", "lastAsFinal", "nddCalc", "endInterest", "feesPaidBy", "useInterestTiers", "calcHistoryEnabled", "calcDatesEnabled", "lateFeeType", "lateFeeCalc", "lateFeePercentBase", "paymentDateApp" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "Loan ID",
					"example": "1",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "Modification ID",
					"example": "3",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"description": "Is it active? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"apr": {
					"type": "number",
					"description": "APR (Annual Percentage Rate)",
					"example": "12.4215",
					"x-mapField": "apr",
					"format": "float"
				},
				"aprForceSingle": {
					"type": "integer",
					"description": "Force APR Single? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "apr_force_single_freq",
					"format": "int32"
				},
				"payment": {
					"type": "number",
					"description": "Scheduled payment amount",
					"example": "124.25",
					"x-mapField": "payment",
					"format": "float"
				},
				"origFinalPaymentDate": {
					"type": "string",
					"description": "Original final payment date (Unix timestamp)",
					"example": "\/Date(1221242435435)\/",
					"x-mapField": "orig_final_payment_date",
					"x-isDateType": true,
					"x-dateFormat": "Y-m-d",
					"format": "date-time"
				},
				"origFinalPaymentAmount": {
					"type": "number",
					"description": "Original final payment amount",
					"example": "120.02",
					"x-mapField": "orig_final_payment_amount",
					"format": "float"
				},
				"tilFinanceCharge": {
					"type": "number",
					"description": "TIL Finance Charge",
					"example": "125.00",
					"x-mapField": "til_finance_charge",
					"format": "float"
				},
				"tilTotalOfPayments": {
					"type": "number",
					"description": "TIL total of payments",
					"example": "12",
					"x-mapField": "til_total_of_payments",
					"format": "float"
				},
				"tilLoanAmount": {
					"type": "number",
					"description": "TIL loan amount",
					"example": "12000",
					"x-mapField": "til_loan_amount",
					"format": "float"
				},
				"tilSalesPrice": {
					"type": "number",
					"description": "TIL Sales Price",
					"example": "12000",
					"x-mapField": "til_sales_price",
					"format": "float"
				},
				"tilPaymentSchedule": {
					"type": "string",
					"description": "TIL Payment Schedule",
					"example": "[{\"count\":35,\"payment\":160.89,\"startDate\":\"04\\\/26\\\/2015\"},{\"count\":1,\"payment\":160.53,\"startDate\":\"03\\\/26\\\/2018\"}]",
					"x-mapField": "til_payment_schedule"
				},
				"regzCustomEnabled": {
					"type": "integer",
					"description": "RegZ Custom Enabled (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "regz_custom_enabled",
					"format": "int32"
				},
				"regzApr": {
					"type": "number",
					"description": "RegZ APR",
					"example": "123.4567",
					"x-mapField": "regz_apr",
					"format": "float"
				},
				"regzFinanceCharge": {
					"type": "number",
					"description": "RegZ Finance Charge",
					"example": "0.00",
					"x-mapField": "regz_finance_charge",
					"format": "float"
				},
				"regzAmountFinanced": {
					"type": "number",
					"description": "RegZ Amount Financed",
					"example": "0.00",
					"x-mapField": "regz_amount_financed",
					"format": "float"
				},
				"regzTotalOfPayments": {
					"type": "number",
					"description": "RegZ Total of Payments",
					"example": "0.00",
					"x-mapField": "regz_total_of_payments",
					"format": "float"
				},
				"loanAmount": {
					"type": "number",
					"description": "Loan Amount",
					"example": "12000.00",
					"x-mapField": "loan_amount",
					"format": "float"
				},
				"discount": {
					"type": "number",
					"description": "Discount",
					"example": "500.00",
					"x-mapField": "discount",
					"format": "float"
				},
				"underwriting": {
					"type": "number",
					"description": "Underwriting",
					"example": "0.00",
					"x-mapField": "underwriting",
					"format": "float"
				},
				"loanRate": {
					"type": "number",
					"description": "Loan Rate",
					"example": "12.0212",
					"x-mapField": "loan_rate",
					"format": "float"
				},
				"loanRateType": {
					"type": "string",
					"description": "Loan Rate type",
					"example": "loan.rateType.annually",
					"x-mapField": "loan_rate_type",
					"enum": [ "loan.rateType.annually", "loan.rateType.biweekly", "loan.rateType.monthly", "loan.rateType.semiannually", "loan.rateType.semimonthly", "loan.rateType.weekly" ],
					"x-see": true
				},
				"loanTerm": {
					"type": "number",
					"description": "Loan Term",
					"example": "36",
					"x-mapField": "loan_term",
					"format": "float"
				},
				"moneyFactor": {
					"type": "number",
					"description": "Money Factor (for leases)",
					"example": ".0012324",
					"x-mapField": "money_factor",
					"format": "float"
				},
				"residual": {
					"type": "number",
					"description": "Residual",
					"example": "0.00",
					"x-mapField": "residual",
					"format": "float"
				},
				"contractDate": {
					"type": "string",
					"description": "Contract date of the loan (Unix timestamp)",
					"example": "\/Date(12348324859)\/",
					"x-mapField": "contract_date",
					"x-isDateType": true,
					"x-dateFormat": "Y-m-d",
					"format": "date-time"
				},
				"firstPaymentDate": {
					"type": "string",
					"description": "First payment date of the loan (Unix timestamp)",
					"example": "\/Date(12348324859)\/",
					"x-mapField": "first_payment_date",
					"x-isDateType": true,
					"x-dateFormat": "Y-m-d",
					"format": "date-time"
				},
				"scheduleRound": {
					"type": "number",
					"description": "Schedule Round amount",
					"example": "-4.84",
					"x-mapField": "schedule_round",
					"format": "float"
				},
				"amountDown": {
					"type": "number",
					"description": "Amount down",
					"example": "0.00",
					"x-mapField": "amount_down",
					"format": "float"
				},
				"reserve": {
					"type": "number",
					"description": "Amount Reserved",
					"example": "5.00",
					"x-mapField": "reserve",
					"format": "float"
				},
				"salesPrice": {
					"type": "number",
					"description": "Sales Price",
					"example": "12000",
					"x-mapField": "sales_price",
					"format": "float"
				},
				"gap": {
					"type": "number",
					"description": "GAP Insurance",
					"example": "1120.",
					"x-mapField": "gap",
					"format": "float"
				},
				"warranty": {
					"type": "number",
					"description": "Warranty",
					"example": "2500",
					"x-mapField": "warranty",
					"format": "float"
				},
				"dealerProfit": {
					"type": "number",
					"description": "Dealer Profit",
					"example": "1000",
					"x-mapField": "dealer_profit",
					"format": "float"
				},
				"taxes": {
					"type": "number",
					"description": "Taxes",
					"example": "125.25",
					"x-mapField": "taxes",
					"format": "float"
				},
				"creditLimit": {
					"type": "number",
					"description": "Credit Limit",
					"example": "15500",
					"x-mapField": "credit_limit",
					"format": "float"
				},
				"reportingCreditLimit": {
					"type": "number",
					"description": "Credit limit to report to Credit Buraeu",
					"example": "15500",
					"x-mapField": "reporting_credit_limit",
					"format": "float"
				},
				"loanClass": {
					"type": "string",
					"description": "Loan class",
					"example": "loan.class.carLoan",
					"x-mapField": "loan_class",
					"enum": [ "loan.class.carLoan", "loan.class.consumer", "loan.class.mortgage", "loan.class.other" ],
					"x-see": true
				},
				"loanType": {
					"type": "string",
					"description": "Loan type",
					"example": "loan.type.installment",
					"x-mapField": "loan_type",
					"enum": [ "loan.type.creditLimit", "loan.type.flooring", "loan.type.installment", "loan.type.lease" ],
					"x-see": true
				},
				"discountSplit": {
					"type": "integer",
					"description": "Split the discount? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "discount_split",
					"format": "int32"
				},
				"paymentFrequency": {
					"type": "string",
					"description": "Payment frequency",
					"example": "loan.frequency.monthly",
					"x-mapField": "payment_frequency",
					"enum": [ "loan.frequency.annually", "loan.frequency.biWeekly", "loan.frequency.custom", "loan.frequency.monthly", "loan.frequency.quarterly", "loan.frequency.semiannually", "loan.frequency.semiMonthly", "loan.frequency.semiMonthlyAlt", "loan.frequency.single", "loan.frequency.weekly" ],
					"x-see": true
				},
				"calcType": {
					"type": "string",
					"description": "Calculation type",
					"example": "loan.calcType.simpleInterest",
					"x-mapField": "calc_type"
				},
				"daysInYear": {
					"type": "string",
					"description": "Days in year calculation",
					"example": "loan.daysInYear.frequency",
					"x-mapField": "days_in_year",
					"enum": [ "loan.daysInYear.actual", "loan.daysInYear.frequency" ],
					"x-see": true
				},
				"interestApplication": {
					"type": "string",
					"description": "Interest Application",
					"example": "loan.interestApplication.betweenTransactions",
					"x-mapField": "interest_application",
					"enum": [ "loan.interestApplication.betweenPeriods", "loan.interestApplication.betweenTransactions" ],
					"x-see": true
				},
				"begEnd": {
					"type": "string",
					"description": "Beg\/End",
					"example": "loan.begend.ed",
					"x-mapField": "beg_end",
					"enum": [ "loan.begend.beg", "loan.begend.end" ],
					"x-see": true
				},
				"firstPeriodDays": {
					"type": "string",
					"description": "Number of days in the first period",
					"example": "loan.daysinperiod.24",
					"x-mapField": "first_period_days",
					"enum": [ "loan.firstPeriodDays.actual", "loan.firstPeriodDays.forceRegular", "loan.firstPeriodDays.frequency" ],
					"x-see": true
				},
				"firstDayInterest": {
					"type": "integer",
					"description": "First day interest (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "first_day_interest",
					"format": "int32"
				},
				"discountCalc": {
					"type": "string",
					"description": "Discount calculation",
					"example": "loan.discountCalc.straightLine",
					"x-mapField": "discount_calc",
					"enum": [ "loan.discountCalc.full", "loan.discountCalc.percentage", "loan.discountCalc.percentFixed", "loan.discountCalc.rebalancing", "loan.discountCalc.straightLine" ],
					"x-see": true
				},
				"diyAlt": {
					"type": "integer",
					"description": "DIY Alternate (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "diy_alt",
					"format": "int32"
				},
				"dueDateOnLastDOM": {
					"type": "integer",
					"description": "Due dates fall on the last day of each month? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "due_date_on_last_dom",
					"format": "int32"
				},
				"dueDatesOnBusinessDays": {
					"type": "string",
					"description": "Due dates fall only on business days?",
					"example": "loan.businessduedates.addDays",
					"x-mapField": "due_dates_on_business_days",
					"enum": [ "loan.businessduedates.addDays", "loan.businessduedates.disabled", "loan.businessduedates.subtractDays" ],
					"x-see": true
				},
				"daysInPeriod": {
					"type": "string",
					"description": "Number of days in a period",
					"example": "loan.daysinperiod.24",
					"x-mapField": "days_in_period",
					"enum": [ "loan.daysinperiod.1", "loan.daysinperiod.10", "loan.daysinperiod.12", "loan.daysinperiod.120", "loan.daysinperiod.13", "loan.daysinperiod.15", "loan.daysinperiod.18", "loan.daysinperiod.180", "loan.daysinperiod.182", "loan.daysinperiod.1B", "loan.daysinperiod.2", "loan.daysinperiod.20", "loan.daysinperiod.24", "loan.daysinperiod.26", "loan.daysinperiod.28", "loan.daysinperiod.3", "loan.daysinperiod.30", "loan.daysinperiod.36", "loan.daysinperiod.360", "loan.daysinperiod.364", "loan.daysinperiod.365", "loan.daysinperiod.4", "loan.daysinperiod.40", "loan.daysinperiod.45", "loan.daysinperiod.5", "loan.daysinperiod.52", "loan.daysinperiod.6", "loan.daysinperiod.60", "loan.daysinperiod.72", "loan.daysinperiod.73", "loan.daysinperiod.8", "loan.daysinperiod.9", "loan.daysinperiod.90", "loan.daysinperiod.91" ],
					"x-see": true
				},
				"roundDecimals": {
					"type": "integer",
					"description": "Round Decimal places",
					"example": "5",
					"x-mapField": "round_decimals",
					"format": "int32"
				},
				"lastAsFinal": {
					"type": "integer",
					"description": "Last payment as final? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "last_as_final",
					"format": "int32"
				},
				"nddCalc": {
					"type": "string",
					"description": "NDD Calculation type",
					"example": "loan.nddCalc.standard",
					"x-mapField": "ndd_calc",
					"enum": [ "loan.nddCalc.interestOnly", "loan.nddCalc.standard" ],
					"x-see": true
				},
				"endInterest": {
					"type": "string",
					"description": "End interest type",
					"example": "loan.endInterest.no",
					"x-mapField": "end_interest",
					"enum": [ "loan.endInterest.loanExp", "loan.endInterest.no" ],
					"x-see": true
				},
				"scheduleTemplate": {
					"type": "integer",
					"description": "Schedule template id to use",
					"example": "0",
					"x-mapField": "schedule_template",
					"format": "int32"
				},
				"curtailmentTemplate": {
					"type": "integer",
					"description": "Curtailment template id to use",
					"example": "1",
					"x-mapField": "curtailment_template",
					"format": "int32"
				},
				"feesPaidBy": {
					"type": "string",
					"description": "Fees paid by method",
					"example": "loan.feesPaidBy.date",
					"x-mapField": "fees_paid_by",
					"enum": [ "loan.feesPaidBy.date", "loan.feesPaidBy.period" ],
					"x-see": true
				},
				"useInterestTiers": {
					"type": "integer",
					"description": "Use interest tiers? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "use_interest_tiers",
					"format": "int32"
				},
				"calcHistoryEnabled": {
					"type": "integer",
					"description": "Calculator history enabled? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "calc_history_enabled",
					"format": "int32"
				},
				"calcDatesEnabled": {
					"type": "integer",
					"description": "Calculator dates enabled? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "calc_dates_enabled",
					"format": "int32"
				},
				"graceDays": {
					"type": "integer",
					"description": "Grace period (days)",
					"example": "5",
					"x-mapField": "grace_days",
					"format": "int32"
				},
				"lateFeeType": {
					"type": "string",
					"description": "Late fee type",
					"example": "loan.lateFee.3",
					"x-mapField": "late_fee_type",
					"enum": [ "loan.lateFee.1", "loan.lateFee.2", "loan.lateFee.3", "loan.lateFee.4", "loan.lateFee.5" ],
					"x-see": true
				},
				"lateFeeAmount": {
					"type": "number",
					"description": "Late fee amount",
					"example": "30.00",
					"x-mapField": "late_fee_amount",
					"format": "float"
				},
				"lateFeePercent": {
					"type": "number",
					"description": "Late fee percentage",
					"example": "10.00",
					"x-mapField": "late_fee_percent",
					"format": "float"
				},
				"lateFeeCalc": {
					"type": "string",
					"description": "Late fee calculation method",
					"example": "loan.lateFeeCalc.standard",
					"x-mapField": "late_fee_calc",
					"enum": [ "loan.lateFeeCalc.current", "loan.lateFeeCalc.standard", "loan.lateFeeCalc.standardFee" ],
					"x-see": true
				},
				"lateFeePercentBase": {
					"type": "string",
					"description": "Late fee percentage base",
					"example": "loan.latefeepercentbase.regular",
					"x-mapField": "latefee_percent_base",
					"enum": [ "loan.latefeepercentbase.escrow", "loan.latefeepercentbase.escrowHold", "loan.latefeepercentbase.hold", "loan.latefeepercentbase.regular" ],
					"x-see": true
				},
				"rollLastPayment": {
					"type": "integer",
					"description": "Roll last payment? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "roll_last_payment",
					"format": "int32"
				},
				"paymentDateApp": {
					"type": "string",
					"description": "Payment date application method",
					"example": "loan.pmtdateapp.actual",
					"x-mapField": "payment_date_app",
					"enum": [ "loan.pmtdateapp.actual", "loan.pmtdateapp.last" ],
					"x-see": true
				},
				"suspendForecastTo": {
					"type": "string",
					"description": "Suspend Forcast payments to date (unix timestamp)",
					"example": "\/Date(124135735)\/",
					"x-mapField": "suspend_fc_to",
					"x-dateFormat": "Y-m-d",
					"format": "date-time"
				},
				"isSetupValid": {
					"type": "boolean",
					"description": "Is Setup valid? (true or false)",
					"example": "true"
				},
				"usuryAlert": {
					"type": "string",
					"description": "Usury Alert",
					"example": "Loan APR 39.3122% is greater than Usury flat rate of 25%"
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": false
				}
			}
		},
		"LoanTransactions": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"txId": {
					"type": "string",
					"description": "The tax ID for the transaction",
					"example": "Tax ID",
					"x-mapField": "tx_id"
				},
				"entityType": {
					"type": "string",
					"description": "The target entity type",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "The target entity ID",
					"example": "13",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "The ID of the target modification",
					"example": "1",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"date": {
					"type": "string",
					"description": "The date of the transaction (Unix timestamp)",
					"example": "\/Date(1425843210)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"period": {
					"type": "integer",
					"description": "The period of the transaction",
					"example": "0",
					"x-mapField": "period",
					"format": "int32"
				},
				"periodStart": {
					"type": "string",
					"description": "The period start date (Unix timestamp)",
					"example": "\/Date(14245684790)\/",
					"x-mapField": "period_start",
					"format": "date-time"
				},
				"periodEnd": {
					"type": "string",
					"description": "The period end date (Unix timestamp)",
					"example": "\/Date(14252165125432)\/",
					"x-mapField": "period_end",
					"format": "date-time"
				},
				"title": {
					"type": "string",
					"description": "The transaction title",
					"example": "Title",
					"x-mapField": "title"
				},
				"type": {
					"type": "string",
					"description": "The transaction type",
					"example": "suspendInterest",
					"x-mapField": "type"
				},
				"infoOnly": {
					"type": "integer",
					"description": "Is this transaction purely informational? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "info_only",
					"format": "int32"
				},
				"infoDetails": {
					"type": "string",
					"description": "Information details",
					"example": "{\"amount\":\"6000.00\",\"underwriting\":\"0.00\",\"discount\":\"1000.00\"}",
					"x-mapField": "info_details"
				},
				"paymentId": {
					"type": "integer",
					"description": "Associated payment ID",
					"example": "24",
					"x-mapField": "payment_id",
					"format": "int32"
				},
				"paymentDisplayId": {
					"type": "integer",
					"description": "Associated payment display ID",
					"example": "12202",
					"x-mapField": "payment_display_id",
					"format": "int32"
				},
				"paymentAmount": {
					"type": "number",
					"description": "Associated payment amount",
					"example": "120.25",
					"x-mapField": "payment_amount",
					"format": "float"
				},
				"paymentInterest": {
					"type": "number",
					"description": "Associated payment interest application amount",
					"example": "13.45",
					"x-mapField": "payment_i",
					"format": "float"
				},
				"paymentPrincipal": {
					"type": "number",
					"description": "Associated payment principal application amount",
					"example": "105.56",
					"x-mapField": "payment_p",
					"format": "float"
				},
				"paymentDiscount": {
					"type": "number",
					"description": "Associated payment discount application amount",
					"example": "50.65",
					"x-mapField": "payment_d",
					"format": "float"
				},
				"paymentFees": {
					"type": "number",
					"description": "Associated payment fee application amount",
					"example": "24.34",
					"x-mapField": "payment_f",
					"format": "float"
				},
				"feesPaidDetails": {
					"type": "string",
					"description": "Details about the fees paid",
					"example": "null",
					"x-mapField": "fees_paid_details"
				},
				"paymentEscrow": {
					"type": "number",
					"description": "Associated payment escrow application amount",
					"example": "12.00",
					"x-mapField": "payment_e",
					"format": "float"
				},
				"paymentEscrowBreakdown": {
					"type": "string",
					"description": "Associated payment escrow breakdown",
					"example": "null",
					"x-mapField": "payment_e_breakdown"
				},
				"chargeAmount": {
					"type": "number",
					"description": "Associated charge amount for the transaction",
					"example": "12.00",
					"x-mapField": "charge_amount",
					"format": "float"
				},
				"chargeInterest": {
					"type": "number",
					"description": "Associated charge interest amount for the transaction",
					"example": "0.00",
					"x-mapField": "charge_i",
					"format": "float"
				},
				"chargePrincipal": {
					"type": "number",
					"description": "Associated charge principal amount for the transaction",
					"example": "0.00",
					"x-mapField": "charge_p",
					"format": "float"
				},
				"chargeDiscount": {
					"type": "number",
					"description": "Associated charge discount amount for the transaction",
					"example": "0.00",
					"x-mapField": "charge_d",
					"format": "float"
				},
				"chargeFees": {
					"type": "number",
					"description": "Associated charge fee amount for the transaction",
					"example": "0.00",
					"x-mapField": "charge_f",
					"format": "float"
				},
				"chargeEscrow": {
					"type": "number",
					"description": "Associated charge escrow amount for the transaction",
					"example": "0.00",
					"x-mapField": "charge_e",
					"format": "float"
				},
				"chargeEscrowBreakdown": {
					"type": "string",
					"description": "Associated charge escrow breakdown for the transaction",
					"example": "null",
					"x-mapField": "charge_e_breakdown"
				},
				"future": {
					"type": "integer",
					"description": "(Is this field used?)",
					"example": "0",
					"x-mapField": "future",
					"format": "int32"
				},
				"principalOnly": {
					"type": "integer",
					"description": "Is the transaction principal only? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "principalonly",
					"format": "int32"
				},
				"advancement": {
					"type": "integer",
					"description": "Is this transaction an advancement? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "advancement",
					"format": "int32"
				},
				"payoffFee": {
					"type": "integer",
					"description": "Is this transaction a payoff fee? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "payoff_fee",
					"format": "int32"
				},
				"chargeOff": {
					"type": "integer",
					"description": "Is this transaction a charge off? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "charge_off",
					"format": "int32"
				},
				"paymentType": {
					"type": "integer",
					"description": "Payment Type ID",
					"example": "1",
					"x-mapField": "payment_type",
					"format": "int32"
				},
				"adbDays": {
					"type": "integer",
					"description": "ADB days.",
					"example": "3",
					"x-mapField": "adb_days",
					"format": "int32"
				},
				"adb": {
					"type": "number",
					"description": "ADB? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "adb",
					"format": "float"
				},
				"principalBalance": {
					"type": "number",
					"description": "What is the principal balance after the transaction?",
					"example": "43000",
					"x-mapField": "principal_balance",
					"format": "float"
				},
				"displayOrder": {
					"type": "number",
					"description": "Display order for the transaction.",
					"example": "1",
					"x-mapField": "displayorder",
					"format": "float"
				}
			}
		},
		"LoanStatusArchive": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "Associated loan ID",
					"example": "12",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"date": {
					"type": "string",
					"description": "Archive date (Unix timestamp)",
					"example": "\/Date(1427414400)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"followUpDate": {
					"type": "string",
					"description": "Follow up date (Unix timestamp)",
					"example": "\/Date(1427414400)\/",
					"x-mapField": "followup_date",
					"format": "date-time"
				},
				"amountDue": {
					"type": "number",
					"description": "The amount due",
					"example": "112.67",
					"x-mapField": "amount_due",
					"format": "float"
				},
				"dueInterest": {
					"type": "number",
					"description": "The amount of interest due",
					"example": "5.54",
					"x-mapField": "due_interest",
					"format": "float"
				},
				"duePrincipal": {
					"type": "number",
					"description": "The amount of principal due",
					"example": "107.13",
					"x-mapField": "due_principal",
					"format": "float"
				},
				"dueDiscount": {
					"type": "number",
					"description": "The amount of discount due",
					"example": "1.50",
					"x-mapField": "due_discount",
					"format": "float"
				},
				"dueEscrow": {
					"type": "number",
					"description": "The amount of escrow due",
					"example": "0.00",
					"x-mapField": "due_escrow",
					"format": "float"
				},
				"dueEscrowBreakdown": {
					"type": "string",
					"description": "Breakdown of escrow due amount",
					"example": "{\"1\":0,\"2\":0,\"3\":0}",
					"x-mapField": "due_escrow_breakdown"
				},
				"dueFees": {
					"type": "number",
					"description": "The amount due in fees",
					"example": "0.50",
					"x-mapField": "due_fees",
					"format": "float"
				},
				"duePni": {
					"type": "number",
					"description": "The amount due in Pni",
					"example": "112.67",
					"x-mapField": "due_pni",
					"format": "float"
				},
				"payoffFees": {
					"type": "number",
					"description": "Payoff fees",
					"example": "12.50",
					"x-mapField": "payoff_fees",
					"format": "float"
				},
				"delinquentBucket": {
					"type": "integer",
					"x-mapField": "delinquent_bucket",
					"format": "int32"
				},
				"delinquentBucketBalance": {
					"type": "string",
					"x-mapField": "delinquent_bucket_balance"
				},
				"nextPaymentDate": {
					"type": "string",
					"description": "The next payment date (Unix timestmap)",
					"example": "\/Date(1432598400)\/",
					"x-mapField": "next_payment_date",
					"format": "date-time"
				},
				"nextPaymentAmount": {
					"type": "number",
					"description": "The next payment amount",
					"example": "160.89",
					"x-mapField": "next_payment_amount",
					"format": "float"
				},
				"lastPaymentDate": {
					"type": "string",
					"description": "The last payment date (Unix timestamp)",
					"example": "\/Date(1427846400)\/",
					"x-mapField": "last_payment_date",
					"format": "date-time"
				},
				"lastPaymentAmount": {
					"type": "number",
					"description": "The last payment amount",
					"example": "7.00",
					"x-mapField": "last_payment_amount",
					"format": "float"
				},
				"principalBalance": {
					"type": "number",
					"description": "The principal balance",
					"example": "3863.90",
					"x-mapField": "principal_balance",
					"format": "float"
				},
				"amountPastDue30": {
					"type": "number",
					"description": "Amount past due for 30 days or mor",
					"example": "1.00",
					"x-mapField": "amount_past_due_30",
					"format": "float"
				},
				"daysPastDue": {
					"type": "integer",
					"description": "Days past due",
					"example": "35",
					"x-mapField": "days_past_due",
					"format": "int32"
				},
				"dateLastCurrent": {
					"type": "string",
					"description": "Date last current (Unix timestamp)",
					"example": "\/Date(1424876515)\/",
					"x-mapField": "date_last_current",
					"format": "date-time"
				},
				"dateLastCurrent30": {
					"type": "string",
					"description": "Date last current for 30 days",
					"example": "\/Date(1424876515\/",
					"x-mapField": "date_last_current_30",
					"format": "date-time"
				},
				"payoff": {
					"type": "number",
					"description": "Payoff amount",
					"example": "3869.43",
					"x-mapField": "payoff",
					"format": "float"
				},
				"perdiem": {
					"type": "number",
					"description": "Perdiem amount",
					"example": "0.00",
					"x-mapField": "perdiem",
					"format": "float"
				},
				"interestAccruedToday": {
					"type": "number",
					"description": "The amount of interest accrued today",
					"example": "2.1253",
					"x-mapField": "interest_accrued_today",
					"format": "float"
				},
				"availableCredit": {
					"type": "number",
					"description": "The amount of available credit",
					"example": "3021.04",
					"x-mapField": "available_credit",
					"format": "float"
				},
				"creditLimit": {
					"type": "number",
					"description": "The credit limit for the account",
					"example": "9000.00",
					"x-mapField": "credit_limit",
					"format": "float"
				},
				"periodStart": {
					"type": "string",
					"description": "The start of the period as a Unix timestamp",
					"example": "\/Date(14300006400)\/",
					"x-mapField": "period_start",
					"format": "date-time"
				},
				"periodEnd": {
					"type": "string",
					"description": "The end of the period as a Unix timestamp",
					"example": "\/Date(1432512000)\/",
					"x-mapField": "period_end",
					"format": "date-time"
				},
				"periodsRemaining": {
					"type": "integer",
					"description": "The number of remaining periods",
					"example": "38",
					"x-mapField": "periods_remaining",
					"format": "int32"
				},
				"escrowBalance": {
					"type": "number",
					"description": "The total escrow balance",
					"example": "680",
					"x-mapField": "escrow_balance",
					"format": "float"
				},
				"escrowBalanceBreakdown": {
					"type": "string",
					"description": "The breakdown of the escrow balance",
					"example": "{\"1\":680,\"2\":0,\"3\":0}",
					"x-mapField": "escrow_balance_breakdown"
				},
				"discountRemaining": {
					"type": "number",
					"description": "The amount of discount remaining",
					"example": "251.25",
					"x-mapField": "discount_remaining",
					"format": "float"
				},
				"loanStatusId": {
					"type": "integer",
					"description": "The loan status ID",
					"example": "2",
					"x-mapField": "loan_status_id",
					"format": "int32"
				},
				"loanStatusText": {
					"type": "string",
					"description": "The loan status text",
					"example": "Active",
					"x-mapField": "loan_status_text"
				},
				"loanSubStatusId": {
					"type": "integer",
					"description": "The loan substatus ID",
					"example": "12",
					"x-mapField": "loan_sub_status_id",
					"format": "int32"
				},
				"loanSubStatusText": {
					"type": "string",
					"description": "The loan status Text",
					"example": "Collection",
					"x-mapField": "loan_sub_status_text"
				},
				"sourceCompanyId": {
					"type": "integer",
					"description": "The Source Company ID",
					"example": "12",
					"x-mapField": "source_company_id",
					"format": "int32"
				},
				"sourceCompanyText": {
					"type": "string",
					"description": "The Source Company Text",
					"example": "Company Name",
					"x-mapField": "source_company_text"
				},
				"creditStatus": {
					"type": "string",
					"description": "Credit status",
					"example": "loan.creditstatus.11",
					"x-mapField": "credit_status"
				},
				"loanAge": {
					"type": "integer",
					"description": "The age of the loan (days)",
					"example": "249",
					"x-mapField": "loan_age",
					"format": "int32"
				},
				"loanRecency": {
					"type": "integer",
					"description": "How many days ago was the loan updated",
					"example": "8",
					"x-mapField": "loan_recency",
					"format": "int32"
				},
				"lastHumanActivity": {
					"type": "string",
					"description": "Date of the last human activity as a Unix timestamp",
					"example": "\/Date(1431043200)\/",
					"x-mapField": "last_human_activity",
					"format": "date-time"
				},
				"stoplight": {
					"type": "string",
					"description": "The stoplight value for the account",
					"example": "null",
					"x-mapField": "stoplight"
				},
				"finalPaymentDate": {
					"type": "string",
					"description": "Final payment date for the loan (Unix timestamp)",
					"example": "\/Date(1522368000)\/",
					"x-mapField": "final_payment_date",
					"format": "date-time"
				},
				"finalPaymentAmount": {
					"type": "number",
					"description": "Final payment amount for the loan",
					"example": "267.09",
					"x-mapField": "final_payment_amount",
					"format": "float"
				},
				"netChargeOff": {
					"type": "number",
					"description": "Net chargeoff for the loan",
					"example": "152.02",
					"x-mapField": "net_charge_off",
					"format": "float"
				},
				"firstDelinquencyDate": {
					"type": "string",
					"description": "Date of first delinquency (Unix timestamp)",
					"example": "\/Date(1424876515)\/",
					"x-mapField": "first_delinquency_date",
					"format": "date-time"
				},
				"uniqueDelinquencies": {
					"type": "integer",
					"description": "The number of times loan has entered delinquent status",
					"example": "3",
					"x-mapField": "unique_delinquencies",
					"format": "int32"
				},
				"delinquencyPercent": {
					"type": "number",
					"description": "The percentage of time the loan has been in delinquent status",
					"example": "32.50",
					"x-mapField": "delinquency_percent",
					"format": "float"
				},
				"delinquentDays": {
					"type": "integer",
					"description": "The number of days the loan has been in delinquent status",
					"example": "72",
					"x-mapField": "delinquent_days",
					"format": "int32"
				},
				"calcedECOA": {
					"type": "string",
					"description": "System calculated ECOA code for primary customer",
					"example": "A",
					"x-mapField": "calced_ecoa"
				},
				"calcedECOACoBuyer": {
					"type": "string",
					"description": "System calculated ECOA code for secondary customer",
					"example": "A",
					"x-mapField": "calced_ecoa_cobuyer"
				},
				"customFieldsBreakdown": {
					"type": "string",
					"description": "Custom Fields Breakdown",
					"example": "A",
					"x-mapField": "custom_fields_breakdown"
				},
				"portfolioBreakdown": {
					"type": "string",
					"description": "Portfolio Breakdown",
					"example": "A",
					"x-mapField": "portfolio_breakdown"
				},
				"subPortfolioBreakdown": {
					"type": "string",
					"description": "Sub Portfolio Breakdown",
					"example": "A",
					"x-mapField": "sub_portfolio_breakdown"
				}
			}
		},
		"CustomerDocuments": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"fileName": {
					"type": "string",
					"x-mapField": "file_name"
				},
				"description": { "type": "string" },
				"sectionId": {
					"type": "integer",
					"x-mapField": "section_id",
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"userName": {
					"type": "string",
					"x-mapField": "user_name"
				},
				"remoteAddress": {
					"type": "string",
					"x-mapField": "remote_addr"
				},
				"fileAttachmentId": {
					"type": "string",
					"x-mapField": "file_attachment_id"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"archived": {
					"type": "integer",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"format": "date-time"
				},
				"customerId": {
					"type": "integer",
					"readOnly": true,
					"x-mapField": "customer_id",
					"format": "int32"
				}
			}
		},
		"FileAttachments": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"parentType": {
					"type": "string",
					"description": "The entity type of the parent entity.",
					"example": "Entity.CustomerDocument",
					"x-mapField": "parent_type"
				},
				"parentId": {
					"type": "integer",
					"description": "The id of the parent entity",
					"example": "1",
					"x-mapField": "parent_id",
					"format": "int32"
				},
				"fileName": {
					"type": "string",
					"description": "The name of the file as stored on the system.",
					"example": "Example-file-view_23918328947.jpg",
					"x-mapField": "file_name"
				},
				"fileOriginalName": {
					"type": "string",
					"description": "The original name of the file when it was uploaed.",
					"example": "Example file.jpg",
					"x-mapField": "file_original_name"
				},
				"fileSize": {
					"type": "integer",
					"description": "The size of the file in bytes.",
					"example": "1124569",
					"x-mapField": "file_size",
					"format": "int32"
				},
				"fileMime": {
					"type": "string",
					"description": "The MIME type of the file",
					"example": "image\/jpeg",
					"x-mapField": "file_mime"
				},
				"fileUrl": { "type": "string" }
			}
		},
		"Promises": {
			"required": [ "type" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "ID of the associated loan",
					"example": "13",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"subject": {
					"type": "string",
					"description": "Subject of the promis",
					"example": "I promise",
					"x-mapField": "subject"
				},
				"note": {
					"type": "string",
					"description": "The promise (HTML)",
					"example": "<p>I shall pay 600<\/p>",
					"x-mapField": "note"
				},
				"amount": {
					"type": "number",
					"description": "Amount promised to be paid",
					"example": "600",
					"format": "double"
				},
				"fulfilled": {
					"type": "integer",
					"description": "Has the payment been fulfilled? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "fulfilled",
					"format": "int32"
				},
				"dueDate": {
					"type": "string",
					"description": "Due date for the payment (Unix timestamp)",
					"example": "\/Date(14293.15200)\/",
					"x-mapField": "due_date",
					"format": "date-time"
				},
				"fulfillmentDate": {
					"type": "string",
					"description": "Date the promise has been fulfilled (Unix timestamp)",
					"example": "\/Date(1421654984)\/",
					"x-mapField": "fulfillment_date",
					"format": "date-time"
				},
				"type": {
					"type": "string",
					"description": "Loan promise type",
					"example": "loanpromise.type.other",
					"x-mapField": "type",
					"enum": [ "loanpromise.type.insurance", "loanpromise.type.other", "loanpromise.type.payment" ],
					"x-see": true
				},
				"created": {
					"type": "string",
					"description": "Promise creation date (Unix timestamp; Read Only)",
					"example": "\/Date(1423456432)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"fulfilledDate": {
					"type": "string",
					"description": "Promise fulfilled date (Unix timestamp; Read Only)",
					"example": "\/Date(1423456432)\/",
					"x-mapField": "fulfilled_date",
					"format": "date-time"
				},
				"loggedBy": {
					"type": "string",
					"description": "Promise logged by",
					"example": "John Doe",
					"x-mapField": "logged_by"
				},
				"fulfilledBy": {
					"type": "string",
					"description": "Promise fulfilled by",
					"example": "John Doe",
					"x-mapField": "fulfilled_by"
				},
				"loggedDate": {
					"type": "string",
					"description": "Promise logged date (Unix timestamp; Read Only)",
					"example": "\/Date(1423456432)\/",
					"x-mapField": "logged_date",
					"format": "date-time"
				}
			}
		},
		"CreditScores": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"equifaxScore": {
					"type": "integer",
					"description": "Credit Score from Equifax",
					"example": "560",
					"x-mapField": "equifax_score",
					"format": "int32"
				},
				"transunionScore": {
					"type": "integer",
					"description": "Credit Score from TransUnion",
					"example": "560",
					"x-mapField": "transunion_score",
					"format": "int32"
				},
				"experianScore": {
					"type": "integer",
					"description": "Credit Score from Experian",
					"example": "560",
					"x-mapField": "experian_score",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date Credit Scroe was created as a Unix timestamp. (Read Only)",
					"example": "\/Date(1427829732)\/",
					"format": "date-time"
				},
				"modified": {
					"type": "string",
					"readOnly": true,
					"description": "Date Credit Scroe was modified as a Unix timestamp. (Read Only)",
					"example": "\/Date(1427829732)\/",
					"format": "date-time"
				}
			}
		},
		"CustomerStatus": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the status",
					"example": "Borrower"
				},
				"active": {
					"type": "integer",
					"description": "Is status active? (1:Yes 0:No)",
					"example": "1",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Unix timstamp of status creation",
					"example": "\/Date(1498765203)",
					"format": "date-time"
				}
			}
		},
		"LoanAdvancements": {
			"required": [ "title", "date", "amount" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "The type of the entity for the advancement",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "The ID of the target entity",
					"example": "3",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "The modification ID",
					"example": "3",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "The title for the advancement",
					"example": "Title",
					"x-mapField": "title"
				},
				"date": {
					"type": "string",
					"description": "The date of th advancment (Unix timestamp)",
					"example": "\/Date(1426579086)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"amount": {
					"type": "number",
					"description": "The amount for the advancment",
					"example": "850.00",
					"x-mapField": "amount",
					"format": "float"
				},
				"category": {
					"type": "integer",
					"description": "The category ID of the advancment",
					"example": "3",
					"x-mapField": "category",
					"format": "int32"
				}
			}
		},
		"AdvanceCategories": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title for the advanced category",
					"example": "A Title",
					"x-mapField": "title"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "The creation date of th advanced category as a Unix timestamp (Read Only)",
					"example": "\/Date(1427414351)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "The active status of the Advanced Category (1: active 0: inactive).",
					"x-mapField": "active",
					"format": "int32"
				}
			}
		},
		"CreditCategories": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the credit categories",
					"x-mapField": "title"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Creation date as a Unix-timestamp (Read Only).",
					"example": "\/Date(1427829732)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "Whether or not the credit category is active (1:active 0:inactive)",
					"x-mapField": "active",
					"format": "int32"
				}
			}
		},
		"LoanCredits": {
			"required": [ "title", "date", "amount", "paymentType" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Target Entity Type",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "Target Entity ID",
					"example": "5",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "Modification ID",
					"example": "1",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"importId": {
					"type": "string",
					"description": "Import Id that identifies the entity for import references",
					"example": "C1-12",
					"x-mapField": "import_id"
				},
				"title": {
					"type": "string",
					"description": "Title of the credit",
					"example": "Title",
					"x-mapField": "title"
				},
				"date": {
					"type": "string",
					"description": "Date Credited (Unix timestamp)",
					"example": "\/Date(1486247952)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"amount": {
					"type": "number",
					"description": "Amount Creditted",
					"example": "650.00",
					"x-mapField": "amount",
					"format": "float"
				},
				"category": {
					"type": "integer",
					"description": "Category ID",
					"example": "1",
					"x-mapField": "category",
					"format": "int32"
				},
				"paymentType": {
					"type": "integer",
					"description": "Payment type ID",
					"example": "2",
					"x-mapField": "payment_type",
					"format": "int32"
				},
				"customApplication": {
					"type": "string",
					"description": "Custom Application for the credit",
					"example": "null",
					"x-mapField": "custom_application"
				},
				"resetPastDue": {
					"type": "integer",
					"description": "Reset past due to a certain number of days past due",
					"example": "0",
					"x-mapField": "reset_past_due",
					"format": "int32"
				},
				"apdAdjustmentId": {
					"type": "integer",
					"description": "Amount Past Due adjustment ID",
					"example": "1",
					"x-mapField": "apd_adjustment_id",
					"format": "int32"
				},
				"dpdAdjustmentId": {
					"type": "integer",
					"description": "Days Past Due adjustment ID",
					"example": "1",
					"x-mapField": "dpd_adjustment_id",
					"format": "int32"
				},
				"chargeOffFlag": { "type": "string" },
				"isChildCredit": {
					"type": "integer",
					"format": "int32"
				},
				"loanIdChild": {
					"type": "integer",
					"format": "int32"
				},
				"isParentCredit": {
					"type": "integer",
					"format": "int32"
				},
				"parentCreditId": { "type": "string" },
				"CustomPaymentTypes": {
					"$ref": "#\/definitions\/CustomPaymentTypes",
					"x-not-in-post": false
				},
				"ChargeOff": {
					"$ref": "#\/definitions\/ChargeOff",
					"x-not-in-post": false
				},
				"APDAdjustments": {
					"$ref": "#\/definitions\/APDAdjustments",
					"x-not-in-post": false
				},
				"DPDAdjustments": {
					"$ref": "#\/definitions\/DPDAdjustments",
					"x-not-in-post": false
				},
				"TransactionChilds": {
					"$ref": "#\/definitions\/TransactionChilds",
					"x-not-in-post": false
				}
			}
		},
		"ScheduleRollTemplates": {
			"required": [ "title" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the template",
					"example": "Schedule Roll Template 1",
					"x-mapField": "title"
				},
				"prorate1stPayment": {
					"type": "integer",
					"description": "Whether or not to prorate the first period (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "prorate_1st_payment",
					"format": "int32"
				},
				"calculationType": {
					"type": "string",
					"description": "Calculation type for the schedule roll",
					"example": "loan.proratefirst.longOnly",
					"x-mapField": "calculation_type"
				},
				"ScheduleTemplateLines": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				}
			}
		},
		"ScheduleTemplateLines": {
			"required": [ "templateId", "term", "solveFor", "solveUsing", "forceBalloon" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"templateId": {
					"type": "integer",
					"description": "ID of the template to use",
					"example": "1",
					"x-mapField": "template_id",
					"format": "int32"
				},
				"term": {
					"type": "integer",
					"description": "Number of terms to apply for",
					"example": "10",
					"x-mapField": "term",
					"format": "int32"
				},
				"rate": {
					"type": "number",
					"description": "Rate for the roll schedule",
					"example": "0.00",
					"x-mapField": "rate",
					"format": "float"
				},
				"solveFor": {
					"type": "string",
					"description": "Target item to solve for",
					"example": "loan.rollScheduleSolveFor.payment",
					"x-mapField": "solve_for",
					"enum": [ "loan.rollScheduleSolveFor.balance", "loan.rollScheduleSolveFor.payment" ],
					"x-see": true
				},
				"solveUsing": {
					"type": "string",
					"description": "How to solve",
					"example": "loan.rollScheduleSolve.dollar",
					"x-mapField": "solve_using",
					"enum": [ "loan.rollScheduleSolve.advanced", "loan.rollScheduleSolve.dollar", "loan.rollScheduleSolve.interestOnly", "loan.rollScheduleSolve.interestOnlyPlus", "loan.rollScheduleSolve.percBalance", "loan.rollScheduleSolve.percPrincipal", "loan.rollScheduleSolve.percPrincUnder" ],
					"x-see": true
				},
				"amount": {
					"type": "number",
					"description": "Target payment amount if solving using pament method",
					"example": "254.00",
					"x-mapField": "amount",
					"format": "float"
				},
				"balance": {
					"type": "number",
					"description": "Target ending balance for the schedule roll if using balance method",
					"example": "3251.24",
					"x-mapField": "balance",
					"format": "float"
				},
				"percent": {
					"type": "number",
					"description": "Percentage of the loan amount to pay if using payment method",
					"example": "24.0000",
					"x-mapField": "percent",
					"format": "float"
				},
				"advancedTerms": {
					"type": "number",
					"description": "The advanced terms if using the advanced terms method",
					"example": "120",
					"x-mapField": "advanced_terms",
					"format": "float"
				},
				"forceBalloon": {
					"type": "integer",
					"description": "Whether or not to force a balloon at the end (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "force_balloon",
					"format": "int32"
				},
				"lastAsFinal": {
					"type": "integer",
					"description": "Whether or not to set last as final (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "last_as_final",
					"format": "int32"
				}
			}
		},
		"ScheduleRolls": {
			"required": [ "term", "solveUsing", "solveFor", "forceBalloon", "basicRevert" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Target entity type",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "Target entity ID",
					"example": "13",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "Loan Modification ID",
					"example": "2",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"term": {
					"type": "integer",
					"description": "Term of the schedule roll",
					"example": "12",
					"x-mapField": "term",
					"format": "int32"
				},
				"rate": {
					"type": "number",
					"description": "Rate of the schedule roll",
					"example": "25.51",
					"x-mapField": "rate",
					"format": "float"
				},
				"solveUsing": {
					"type": "string",
					"description": "How to solve the schedule roll",
					"example": "loan.rollScheduleSolve.dollar",
					"x-mapField": "solve_using",
					"enum": [ "loan.rollScheduleSolve.advanced", "loan.rollScheduleSolve.dollar", "loan.rollScheduleSolve.interestOnly", "loan.rollScheduleSolve.interestOnlyPlus", "loan.rollScheduleSolve.percBalance", "loan.rollScheduleSolve.percPrincipal", "loan.rollScheduleSolve.percPrincUnder" ],
					"x-see": true
				},
				"amount": {
					"type": "number",
					"description": "The amount to solve for",
					"example": "150.00",
					"x-mapField": "amount",
					"format": "float"
				},
				"percent": {
					"type": "number",
					"description": "The percentage to solve for",
					"example": "15.25",
					"x-mapField": "percent",
					"format": "float"
				},
				"advancedTerms": {
					"type": "number",
					"description": "The number of advanced terms (if using the appropriate method)",
					"example": "67",
					"x-mapField": "advanced_terms",
					"format": "float"
				},
				"solveFor": {
					"type": "string",
					"description": "What to solve for with the schedule roll",
					"example": "loan.rollScheduleSolveFor.payment",
					"x-mapField": "solve_for",
					"enum": [ "loan.rollScheduleSolveFor.balance", "loan.rollScheduleSolveFor.payment" ],
					"x-see": true
				},
				"balance": {
					"type": "number",
					"description": "Balance to solve for",
					"example": "8076.86",
					"x-mapField": "balance",
					"format": "float"
				},
				"balanceSet": {
					"type": "number",
					"description": "The balance set to",
					"example": "0.00",
					"x-mapField": "balance_set",
					"format": "float"
				},
				"difference": {
					"type": "number",
					"description": "The balance difference",
					"example": "0.00",
					"x-mapField": "difference",
					"format": "float"
				},
				"forceBalloon": {
					"type": "integer",
					"description": "Force a balloon payment at the end? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "force_balloon",
					"format": "int32"
				},
				"basicRevert": {
					"type": "integer",
					"description": "Basic schedule revert record? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "basic_revert",
					"format": "int32"
				},
				"displayOrder": {
					"type": "integer",
					"description": "Display order (affects calculation)",
					"example": "\/Date(1487625135)\/",
					"x-mapField": "display_order",
					"format": "int32"
				},
				"isCurtailment": {
					"type": "integer",
					"description": "Created for curtailment? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "is_curtailment",
					"format": "int32"
				},
				"lastAsFinal": {
					"type": "integer",
					"description": "Set last period as final  (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "last_as_final",
					"format": "int32"
				}
			}
		},
		"LoanDueDateChanges": {
			"required": [ "originalDate", "newDate", "changedDate", "dueDateOnLastDOM" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Type of target entity",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "Target Entity ID",
					"example": "1",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "Modification ID",
					"example": "1",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"originalDate": {
					"type": "string",
					"description": "Original due date (Unix Timestamp)",
					"example": "\/Date(1427895642)",
					"x-mapField": "original_date",
					"format": "date-time"
				},
				"newDate": {
					"type": "string",
					"description": "New due date (Unix timestamp)",
					"example": "\/Date(1427588987)\/",
					"x-mapField": "new_date",
					"format": "date-time"
				},
				"changedDate": {
					"type": "string",
					"description": "Date that change was made (Unix timestamp)",
					"example": "\/Date(12457895357)\/",
					"x-mapField": "changed_date",
					"format": "date-time"
				},
				"dueDateOnLastDOM": {
					"type": "integer",
					"description": "Due dates fall on the last day of each month? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "due_date_on_last_dom",
					"format": "int32"
				}
			}
		},
		"StopInterestDates": {
			"required": [ "date", "type" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Type of the target entity",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "ID of the target entity",
					"example": "1",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "Modification ID",
					"example": "4",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"date": {
					"type": "string",
					"description": "Date to stop\/resume interest (Unix timestamp)",
					"example": "\/Date(1423549684)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"type": {
					"type": "string",
					"description": "Type of the interest stop\/resume",
					"example": "loan.stopInterestType.resume",
					"x-mapField": "type",
					"enum": [ "loan.stopInterestType.resume", "loan.stopInterestType.suspend" ],
					"x-see": true
				}
			}
		},
		"Notifications": {
			"required": [ "userId", "metadata" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"description": "User ID for who to be notified",
					"example": "12",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "ID of the Loan associated to this notification",
					"example": "1",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"description": "Notification event name",
					"example": "notification.event.paymentMade",
					"x-mapField": "name"
				},
				"metadata": {
					"type": "string",
					"description": "metadata of the notification",
					"example": "{\"tenantId\":\"000000\",\"userId\":\"17\",\"category\":\"notification.event\",\"name\":\"notification.event.paymentMade\",\"metadata\":\"{\\\"tenantId\\\":\\\"00000\\\",\\\"loanId\\\":\\\"19\\\",\\\"paymentId\\\":\\\"75\\\",\\\"amount\\\":438.67,\\\"extra\\\":\\\"payment.extra.tx.principal\\\",\\\"early\\\":0,\\\"info\\\":\\\"02\\\\\/07\\\\\/2015 Cash\\\",\\\"date\\\":\\\"2015-02-07\\\",\\\"echeckAuthType\\\":\\\"payment.echeckauth.WEB\\\",\\\"parentId\\\":null,\\\"childId\\\":null,\\\"active\\\":1,\\\"created\\\":null,\\\"message\\\":\\\"A new payment has been processed in loan 00000.\\\"}\",\"active\":\"1\",\"draft\":\"<p>A customer on loan number&nbsp;00000 made a payment of&nbsp;504<\\\/p>\",\"shortDraft\":false}",
					"x-mapField": "metadata"
				},
				"read": {
					"type": "integer",
					"description": "If the notification has been read (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "is_read",
					"format": "int32"
				},
				"type": {
					"type": "string",
					"readOnly": "true",
					"x-mapField": "type"
				},
				"active": {
					"type": "integer",
					"description": "If the notification is active (1:Yes 0:No)",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Creation date as a unix timestamp",
					"example": "\/Date(14785123457)\/",
					"x-mapField": "created",
					"format": "date-time"
				}
			}
		},
		"CollateralFields": {
			"properties": {
				"id": {
					"type": "string",
					"readOnly": true,
					"x-isKey": true
				},
				"collateralType": {
					"type": "string",
					"readOnly": true,
					"description": "Type of the collateral",
					"example": "collateral.type.car",
					"x-mapField": "collateral_type"
				},
				"label": {
					"type": "string",
					"description": "Label for the collateral",
					"example": "Year"
				},
				"required": {
					"type": "integer",
					"description": "Is required? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "required",
					"format": "int32"
				},
				"dataType": {
					"type": "string",
					"description": "Data type for the collateral",
					"example": "text",
					"x-mapField": "data_type"
				},
				"maxLength": {
					"type": "integer",
					"description": "Max length for the field (0 means no maximum)",
					"example": "0",
					"x-mapField": "max_length",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Unix timestamp of creation date",
					"example": "\/Date(1489257620)\/",
					"format": "date-time"
				}
			}
		},
		"DataImport": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entity": {
					"type": "string",
					"description": "Entity type that is the target of the import.",
					"example": "Entity.Note",
					"x-mapField": "entity"
				},
				"status": {
					"type": "string",
					"description": "Status of the import; formatted dataimport.status.\" followed by the status.",
					"example": "dataimport.status.imported",
					"x-mapField": "status"
				},
				"description": {
					"type": "string",
					"description": "Description of the import",
					"example": "Sample Import",
					"x-mapField": "description"
				},
				"fileName": {
					"type": "string",
					"description": "Name of the file being imported",
					"example": "Import1.csv",
					"x-mapField": "file_name"
				},
				"reverseFileName": {
					"type": "string",
					"description": "Name of the file to reverse the import, if applicable.",
					"example": "ReverseImport1.csv",
					"x-mapField": "reverse_file_name"
				},
				"statsNew": {
					"type": "integer",
					"description": "Number of new records from the import",
					"example": 67,
					"x-mapField": "stats_new",
					"format": "int32"
				},
				"statsUpd": {
					"type": "integer",
					"description": "Number of updated records from the import",
					"example": 14,
					"x-mapField": "stats_upd",
					"format": "int32"
				},
				"statsDel": {
					"type": "integer",
					"description": "Number of deleted records from the import",
					"example": 5,
					"x-mapField": "stats_del",
					"format": "int32"
				},
				"statsErr": {
					"type": "integer",
					"description": "Number of errors on the import",
					"example": 1,
					"x-mapField": "stats_err",
					"format": "int32"
				},
				"errors": {
					"type": "integer",
					"description": "An array of errors from the import",
					"example": "[1] 0:  { row: 0 error: \"File is not valid\" }",
					"x-mapField": "errors",
					"format": "int32"
				},
				"modified": {
					"type": "string",
					"description": "Unix timestamp of when the import was modified",
					"example": "\/Date(1429645879)\/",
					"x-mapField": "lastUpdated",
					"format": "date-time"
				},
				"byPassWarnings": {
					"type": "integer",
					"description": "Whether or not the import should bypass all warnings (1:Yes 0:No)",
					"x-mapField": "by_pass_warnings",
					"format": "int32"
				},
				"skipCalc": {
					"type": "integer",
					"description": "Whether or not the import should run the calc for updated loans (1:Yes 0:No)",
					"x-mapField": "skip_calc",
					"format": "int32"
				},
				"numRows": {
					"type": "integer",
					"description": "Total of rows included in the import file",
					"example": 1000,
					"x-mapField": "num_rows",
					"format": "int32"
				},
				"totalBlocks": {
					"type": "integer",
					"description": "Total of block to be imported",
					"example": 1000,
					"x-mapField": "total_blocks",
					"format": "int32"
				},
				"verifiedBlocks": {
					"type": "integer",
					"description": "Total of block validated",
					"example": 1000,
					"x-mapField": "verified_blocks",
					"format": "int32"
				},
				"importedBlocks": {
					"type": "integer",
					"description": "Total of blocks imported",
					"example": 1000,
					"x-mapField": "imported_blocks",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Unix timestamp of when the import was created (Read Only).",
					"example": "\/Date(1429645879)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"deleted": {
					"type": "integer",
					"description": "Whether or not it has been deleted (1:Yes 0:No)",
					"x-mapField": "deleted",
					"format": "int32"
				},
				"createdBy": {
					"type": "integer",
					"description": "The id of the user that creates the record.",
					"x-mapField": "created_by",
					"format": "int32"
				},
				"downloadURL": {
					"type": "string",
					"description": "Download URL for the file (not persistent, can change or be removed)",
					"example": "http:\/\/downloaddataimport.example.com\/238938"
				},
				"Users": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				}
			}
		},
		"Flags": {
			"required": [ "rule", "display" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"description": "Name of the Flag",
					"example": "Flag 1",
					"x-mapField": "name"
				},
				"description": {
					"type": "string",
					"description": "Description of the Flag",
					"example": "Example Flag",
					"x-mapField": "description"
				},
				"rule": {
					"type": "string",
					"description": "Rule for the Flag",
					"example": "(and (< 50 r\/status-amount-due) (< r\/status-amount-due 1000))",
					"x-mapField": "rule"
				},
				"draft": {
					"type": "string",
					"description": "Additional text to be displayed when the flag is expanded.",
					"example": "More text",
					"x-mapField": "draft"
				},
				"display": {
					"type": "string",
					"description": "Display color; formatted \"flag.display.\" followed by the color",
					"example": "flag.display.black",
					"x-mapField": "display",
					"enum": [ "flag.display.aqua", "flag.display.black", "flag.display.blue", "flag.display.fuchsia", "flag.display.gray", "flag.display.green", "flag.display.maroon", "flag.display.navy", "flag.display.olive", "flag.display.purple", "flag.display.red", "flag.display.silver", "flag.display.teal", "flag.display.yellow" ],
					"x-see": true
				},
				"uiState": {
					"type": "string",
					"description": "UI stater of the flag",
					"example": "{\"lisp\":\"(and (< 50 r\/status-amount-due) (< r\/status-amount-due 1000))\",\"valid\":true,\"editor\":\"\"}",
					"x-mapField": "ui_state"
				},
				"entityType": {
					"type": "string",
					"description": "Type of the target entity.",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"active": {
					"type": "integer",
					"description": "If it is active (1:Yes 0:No)",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date createdas a Unix timestamp (Read Only)",
					"example": "\/Date(14278521345)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"state": {
					"type": "integer",
					"description": "The current state of the flag.",
					"x-mapField": "state",
					"format": "int32"
				},
				"expandedDraft": { "type": "string" }
			}
		},
		"Stoplights": {
			"required": [ "rule", "priority" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"rule": {
					"type": "string",
					"description": "Rule for the stoplight",
					"example": "(< r\/status-amount-due 1000)",
					"x-mapField": "rule"
				},
				"display": {
					"type": "string",
					"description": "Display color for the stoplight",
					"example": "stoplight.display.green",
					"x-mapField": "display",
					"enum": [ "stoplight.display.green", "stoplight.display.red", "stoplight.display.yellow" ],
					"x-see": true
				},
				"style": {
					"type": "string",
					"description": "Display style for the text",
					"example": "stoplight.style.bold",
					"x-mapField": "style",
					"enum": [ "stoplight.style.blink", "stoplight.style.bold", "stoplight.style.italic", "stoplight.style.line_through", "stoplight.style.none", "stoplight.style.underline" ],
					"x-see": true
				},
				"color": {
					"type": "string",
					"description": "Display text color",
					"example": "stoplight.color.green",
					"x-mapField": "color",
					"enum": [ "stoplight.color.black", "stoplight.color.blue", "stoplight.color.brown", "stoplight.color.green", "stoplight.color.grey", "stoplight.color.none", "stoplight.color.orange", "stoplight.color.purple", "stoplight.color.red" ],
					"x-see": true
				},
				"priority": {
					"type": "integer",
					"description": "Priority of the stoplight",
					"example": "1235132168543251968541321658",
					"x-mapField": "priority",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"description": "If it is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Unix timestamp of creation date (Read Only)",
					"example": "\/Date(1458731590)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"state": {
					"type": "integer",
					"description": "State of the stoplight",
					"example": null,
					"x-mapField": "state",
					"format": "int32"
				},
				"uiState": {
					"type": "string",
					"description": "UI State of the stoplight",
					"example": "{\"lisp\":\"(let [expiration (-> r\/customer :primary :primary-pmt-method-cc-expiration)]\\n (= (u\/date-compare (u\/today) expiration) 1))\",\"valid\":true,\"editor\":\"\"}",
					"x-mapField": "uiState"
				}
			}
		},
		"SavedSearches": {
			"required": [ "title", "queryString" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title for the saved search",
					"example": "Title"
				},
				"queryString": {
					"type": "string",
					"description": "Query string for the saved search",
					"example": "{\"query\":{\"filtered\":{\"filter\":{\"bool\":{\"must\":[{\"range\":{\"loanRecency\":{\"gte\":\"16\",\"lte\":\"30\"}}}]}}}},\"aggs\":{\"sum_loanamount\":{\"sum\":{\"field\":\"loanAmount\"}},\"avg_loanamount\":{\"avg\":{\"field\":\"loanAmount\"}},\"sum_payoff\":{\"sum\":{\"field\":\"payoff\"}},\"avg_payoff\":{\"avg\":{\"field\":\"payoff\"}},\"avg_loanage\":{\"avg\":{\"field\":\"loanAge\"}},\"avg_dayspastdue\":{\"avg\":{\"field\":\"daysPastDue\"}},\"sum_amountdue\":{\"sum\":{\"field\":\"amountDue\"}},\"avg_amountdue\":{\"avg\":{\"field\":\"amountDue\"}},\"sum_principalbalance\":{\"sum\":{\"field\":\"principalBalance\"}},\"avg_principalbalance\":{\"avg\":{\"field\":\"principalBalance\"}},\"avg_loanrecency\":{\"avg\":{\"field\":\"loanRecency\"}},\"sum_lastpaymentamount\":{\"sum\":{\"field\":\"lastPaymentAmount\"}},\"avg_lastpaymentamount\":{\"avg\":{\"field\":\"lastPaymentAmount\"}},\"sum_nextpaymentamount\":{\"sum\":{\"field\":\"nextPaymentAmount\"}},\"avg_nextpaymentamount\":{\"avg\":{\"field\":\"nextPaymentAmount\"}}}}",
					"x-mapField": "query_string"
				},
				"queryFiltersString": {
					"type": "string",
					"description": "Query string filters for the search",
					"example": "{\"ranges\":{\"aging\":{\"begin\":0,\"end\":0},\"daysPastDue\":{\"begin\":0,\"end\":0},\"amountDue\":{\"begin\":0,\"end\":0},\"humanActivity\":{\"begin\":0,\"end\":0},\"nextPaymentDate\":{\"being\":null,\"end\":\"\",\"isDate\":true,\"begin\":\"\"},\"loanRecency\":{\"begin\":91,\"end\":90000}},\"portfoliosMatchingCriteria\":\"all\",\"sourceCompaniesMatchingCriteria\":\"all\",\"sourceCompanies\":[{\"id\":0,\"$$hashKey\":\"KCW\"}],\"checklistItemsSelection\":{},\"stoplight\":{},\"selectedPortfolios\":[{\"category\":\"\",\"portfolio\":\"\",\"subportfolio\":\"\",\"$$hashKey\":\"KCY\"}],\"selectedFlags\":[],\"keywords\":\"\",\"portfolioFilterSelection\":\"portfolioFilterSelection.noPreference\",\"bracketsCaptureMode\":{\"loanRecency\":false},\"keywordSearchOptions\":{\"matchType\":\"partial\",\"matchOperator\":\"and\"},\"loanRecency\":\"16-30\"}",
					"x-mapField": "query_filters_string"
				},
				"entityType": {
					"type": "string",
					"description": "For which entity's search",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "The creation date as a Unix timestamp",
					"example": "\/Date(1421654328)\/",
					"format": "date-time"
				}
			}
		},
		"CollectorQueue": {
			"required": [ "title" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"description": "ID of the user assigned to the queue",
					"example": "1",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the queue",
					"example": "Queue 1",
					"x-mapField": "title"
				},
				"query": {
					"type": "string",
					"description": "Query for the queue",
					"example": "{\"query\":null,\"aggs\":{\"sum_loanamount\":{\"sum\":{\"field\":\"loanAmount\"}},\"avg_loanamount\":{\"avg\":{\"field\":\"loanAmount\"}},\"sum_payoff\":{\"sum\":{\"field\":\"payoff\"}},\"avg_payoff\":{\"avg\":{\"field\":\"payoff\"}},\"avg_loanage\":{\"avg\":{\"field\":\"loanAge\"}},\"avg_dayspastdue\":{\"avg\":{\"field\":\"daysPastDue\"}},\"sum_amountdue\":{\"sum\":{\"field\":\"amountDue\"}},\"avg_amountdue\":{\"avg\":{\"field\":\"amountDue\"}},\"sum_principalbalance\":{\"sum\":{\"field\":\"principalBalance\"}},\"avg_principalbalance\":{\"avg\":{\"field\":\"principalBalance\"}},\"avg_loanrecency\":{\"avg\":{\"field\":\"loanRecency\"}},\"sum_lastpaymentamount\":{\"sum\":{\"field\":\"lastPaymentAmount\"}},\"avg_lastpaymentamount\":{\"avg\":{\"field\":\"lastPaymentAmount\"}},\"sum_nextpaymentamount\":{\"sum\":{\"field\":\"nextPaymentAmount\"}},\"avg_nextpaymentamount\":{\"avg\":{\"field\":\"nextPaymentAmount\"}}}}",
					"x-mapField": "query"
				},
				"set": {
					"type": "string",
					"description": "Set for the queue",
					"example": "collectorQueue.set.union",
					"x-mapField": "set",
					"enum": [ "collectorQueue.set.difference", "collectorQueue.set.intersect", "collectorQueue.set.union" ],
					"x-see": true
				},
				"uiState": {
					"type": "string",
					"description": "UI state for the queue",
					"example": "{\"query\":{\"keyword\":\"\",\"match\":\"partial\",\"operator\":\"and\"},\"portfolio\":{\"type\":\"noPreference\",\"criteria\":\"all\",\"items\":[]},\"sourceCompany\":{\"type\":\"noPreference\",\"criteria\":\"all\",\"items\":[]},\"checklist\":{\"selected\":[],\"unselected\":[]},\"flooringCustomer\":\"\",\"loanAging\":\"\",\"daysPastDue\":\"\",\"amountDue\":\"\",\"humanActivity\":\"\",\"loanRecency\":\"\",\"activated\":\"No preference\",\"agent\":\"\",\"ebilling\":\"Any\",\"calculationType\":\"\",\"loanType\":\"\",\"loanCategory\":\"\",\"archived\":\"Any\",\"autopay\":\"All\",\"sms\":\"\",\"dueDate\":{\"from\":\"\",\"to\":\"\"}}",
					"x-mapField": "ui_state"
				},
				"status": {
					"type": "string",
					"description": "status for the queue",
					"example": "stopped",
					"x-mapField": "status"
				},
				"created": {
					"type": "string",
					"description": "Unix Timestamp for the queue creation date",
					"example": "\/Date(148796531)\/",
					"format": "date-time"
				},
				"start": {
					"type": "string",
					"description": "Start date of the queue",
					"example": "null",
					"format": "date-time"
				},
				"size": {
					"type": "integer",
					"description": "Size of the queue",
					"example": "null",
					"format": "int32"
				},
				"orderby": {
					"type": "string",
					"description": "Order by value",
					"example": "null"
				},
				"timeSpent": {
					"type": "integer",
					"description": "Time spent in the queue (seconds)",
					"example": "0",
					"format": "int32"
				},
				"completion": {
					"type": "integer",
					"description": "Percentage competed",
					"example": "10.101654",
					"format": "int32"
				},
				"agentName": {
					"type": "string",
					"description": "Name of the agent assigned to the queue",
					"example": "Demo"
				},
				"Loans": {
					"$ref": "#\/definitions\/Loans",
					"x-not-in-post": false
				},
				"CollectorQueueWorkItems": {
					"$ref": "#\/definitions\/CollectorQueueWorkItems",
					"x-not-in-post": false
				},
				"Users": {
					"$ref": "#\/definitions\/Users",
					"x-not-in-post": false
				}
			}
		},
		"CollectorQueueQuestions": {
			"required": [ "question" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"question": {
					"type": "string",
					"description": "The question.",
					"example": "question?",
					"x-mapField": "question"
				},
				"score": {
					"type": "integer",
					"description": "The score of the rank of the question",
					"example": "50",
					"x-mapField": "score",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"description": "Active question (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Unixtimestamp of the creation date",
					"example": "\/Date(1482657910)\/",
					"format": "date-time"
				}
			}
		},
		"CollectorQueueWorkItems": {
			"required": [ "loanId", "collectorQueueId" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "Loan ID for the item",
					"example": "1",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"collectorQueueId": {
					"type": "integer",
					"description": "ID of the parent collector queue",
					"example": "1",
					"x-mapField": "collector_queue_id",
					"format": "int32"
				},
				"started": {
					"type": "string",
					"description": "Unix timestamp started",
					"example": "\/Date(186497531567)\/",
					"format": "date-time"
				},
				"completed": {
					"type": "string",
					"description": "Unix timestamp ended",
					"example": "\/Date(14781359002)\/",
					"format": "date-time"
				},
				"created": {
					"type": "string",
					"description": "Unix timestamp of creation",
					"example": "\/Date(1495320748)\/",
					"format": "date-time"
				},
				"owner": {
					"type": "integer",
					"description": "The owner of the records",
					"example": "\/Date(1495320748)\/",
					"format": "int32"
				},
				"score": {
					"type": "integer",
					"description": "Score of priority",
					"example": "20",
					"format": "int32"
				},
				"timeSpent": {
					"type": "integer",
					"description": "Time spent on item (seconds)",
					"example": "60",
					"format": "int32"
				},
				"status": {
					"type": "string",
					"description": "Item status",
					"example": "completed"
				},
				"loanDisplayId": { "type": "string" },
				"Loans": {
					"$ref": "#\/definitions\/Loans",
					"x-not-in-post": false
				},
				"TimeSlots": {
					"$ref": "#\/definitions\/TimeSlots",
					"x-not-in-post": false
				},
				"CollectorQueueQuestions": {
					"$ref": "#\/definitions\/CollectorQueueQuestions",
					"x-not-in-post": false
				},
				"CollectorQueue": {
					"$ref": "#\/definitions\/CollectorQueue",
					"x-not-in-post": false
				},
				"Notes": {
					"$ref": "#\/definitions\/Notes",
					"x-not-in-post": false
				}
			}
		},
		"ComputationFields": {
			"required": [ "title", "rule" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the computation field"
				},
				"round": {
					"type": "string",
					"description": "Number of Decimal places to round to; formatted \"computationField.round.\" and the number to round to (or \"no\" to not round)",
					"example": "computationField.round.no",
					"enum": [ "computationField.round.1", "computationField.round.2", "computationField.round.3", "computationField.round.4", "computationField.round.5", "computationField.round.6", "computationField.round.no", "computationField.round.whole" ],
					"x-see": true
				},
				"format": {
					"type": "string",
					"description": "Format type; formatted \"computationField.format.\" followed by the format type.",
					"example": "computationField.format.number",
					"enum": [ "computationField.format.currency", "computationField.format.date", "computationField.format.number" ],
					"x-see": true
				},
				"display": {
					"type": "string",
					"description": "Where to display it; formatted \"computationField.display.\" followed by the display location",
					"example": "computationField.display.loanSummary",
					"enum": [ "computationField.display.adminStatsActive", "computationField.display.adminStatsChargeOff", "computationField.display.adminStatsPaidOff", "computationField.display.collateral", "computationField.display.initialSetup", "computationField.display.insurance", "computationField.display.loanSettings", "computationField.display.loanSummary", "computationField.display.no" ],
					"x-see": true
				},
				"rule": {
					"type": "string",
					"description": "The rule to use for the computation field.",
					"example": "(< r\/status-amount-due 1000)"
				},
				"state": {
					"type": "string",
					"description": "The state of the computation field",
					"example": "{\"lisp\":\"(< r\/status-amount-due 1000)\",\"valid\":true,\"editor\":\"\"}"
				},
				"entityType": {
					"type": "string",
					"description": "The type of the target entity.",
					"example": "Entity.Loan"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "The creation date (Read Only)",
					"format": "date-time"
				},
				"field": {
					"type": "string",
					"example": "basic-formulas"
				}
			}
		},
		"Autopays": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"readOnly": true,
					"description": "The ID of the target loan",
					"example": "2",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"description": "The name of the Autopay",
					"example": "Autopay 1"
				},
				"type": {
					"type": "string",
					"description": "The type of the Autopay",
					"example": "autopay.type.single"
				},
				"applyDate": {
					"type": "string",
					"description": "The appliction date of the autopay (Unix Timestamp)",
					"example": "\/Date(1456798832)\/",
					"x-mapField": "apply_date",
					"x-dateFormat": "Y-m-d",
					"format": "date-time"
				},
				"processDateTime": {
					"type": "string",
					"description": "The process Date of the autopay (Unix timestamp)",
					"example": "\/Date(1654687496)\/",
					"x-mapField": "process_datetime",
					"format": "date-time"
				},
				"originalProcessDateTime": {
					"type": "string",
					"readOnly": true,
					"description": "The process Date of the autopay (Unix timestamp)",
					"example": "\/Date(1654687496)\/",
					"x-mapField": "original_process_datetime",
					"format": "date-time"
				},
				"amountType": {
					"type": "string",
					"description": "The amount type to pay",
					"example": "autopay.amountType.static",
					"x-mapField": "amount_type"
				},
				"amount": {
					"type": "number",
					"description": "The amount to pay",
					"example": "200.00",
					"format": "double"
				},
				"processCurrent": {
					"type": "integer",
					"description": "Process if the loan is current? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "process_current",
					"format": "int32"
				},
				"chargeServiceFee": {
					"type": "integer",
					"description": "Charge service fee? (1:Yes 0:No(",
					"example": "0",
					"x-mapField": "charge_service_fee",
					"format": "int32"
				},
				"retryDays": {
					"type": "integer",
					"description": "Number of days to retry",
					"example": "5",
					"x-mapField": "retry_days",
					"format": "int32"
				},
				"retryCount": {
					"type": "integer",
					"readOnly": true,
					"description": "Current number of retries (Read Only)",
					"example": "4",
					"x-mapField": "retry_count",
					"format": "int32"
				},
				"postPaymentUpdate": {
					"type": "integer",
					"description": "Post an update payment upon success (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "post_payment_update_apply_date",
					"format": "int32"
				},
				"recurringFrequency": {
					"type": "string",
					"description": "Recurring frequency",
					"example": "autopay.recurringFrequency.monthly",
					"x-mapField": "recurring_frequency"
				},
				"recurringPeriods": {
					"type": "integer",
					"description": "Number of recurring periods",
					"example": "2",
					"x-mapField": "recurring_periods",
					"format": "int32"
				},
				"recurringDateOption": {
					"type": "string",
					"x-mapField": "recurring_date_option"
				},
				"schedulingType": {
					"type": "string",
					"x-mapField": "scheduling_type"
				},
				"paymentExtraTowards": {
					"type": "string",
					"description": "What should extra be paid towards?",
					"example": "payment.extra.tx.principal",
					"x-mapField": "payment_extra_towards"
				},
				"daysInPeriod": {
					"type": "string",
					"description": "Number of days in period",
					"example": "null",
					"x-mapField": "days_in_period"
				},
				"lastDayOfMonthEnabled": {
					"type": "integer",
					"description": "Pay on the last day of the month (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "last_dom_enabled",
					"format": "int32"
				},
				"applyLastDayOfMonthEnabled": {
					"type": "integer",
					"description": "Apply payment on the last day of the month (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "apply_last_dom_enabled",
					"format": "int32"
				},
				"paymentFee": {
					"type": "number",
					"description": "Fee amount to charge for processing",
					"example": "1.00",
					"x-mapField": "payment_fee",
					"format": "double"
				},
				"paymentMethodAuthType": {
					"type": "string",
					"description": "Authorization type",
					"example": "null",
					"x-mapField": "payment_method_auth_type"
				},
				"payoffAdjustment": {
					"type": "integer",
					"x-mapField": "payoff_adjustment",
					"format": "int32"
				},
				"chargeOffRecovery": {
					"type": "integer",
					"description": "Is there a charge off recovery? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "charge_off_recovery",
					"format": "int32"
				},
				"mcProcessor": {
					"type": "integer",
					"x-mapField": "mc_processor",
					"format": "int32"
				},
				"ccProcessor": {
					"type": "integer",
					"x-mapField": "cc_processor",
					"format": "int32"
				},
				"baProcessor": {
					"type": "integer",
					"x-mapField": "ba_processor",
					"format": "int32"
				},
				"processZeroOrNegativeBalance": {
					"type": "integer",
					"x-mapField": "process_zero_or_negative_balance",
					"format": "int32"
				},
				"status": {
					"type": "string",
					"description": "Autopay status",
					"example": "autopay.status.cancelled"
				},
				"active": {
					"type": "integer",
					"description": "Is active? (1:Yes 0:No)",
					"example": "0",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date created (Unix timestamp, Read Only)",
					"example": "\/Date(123456798)\/",
					"format": "date-time"
				},
				"lastPaymentExtraTowards": {
					"type": "string",
					"description": "Extra application",
					"example": "payment.extra.tx.principal",
					"x-mapField": "last_payment_extra_towards"
				},
				"_applyDateAsString": {
					"type": "string",
					"readOnly": true
				},
				"PaymentAccounts": {
					"$ref": "#\/definitions\/PaymentAccounts",
					"x-not-in-post": false
				},
				"Loans": {
					"$ref": "#\/definitions\/Loans",
					"x-not-in-post": false
				},
				"CustomPaymentTypes": {
					"$ref": "#\/definitions\/CustomPaymentTypes",
					"x-not-in-post": false
				},
				"TransactionChilds": {
					"$ref": "#\/definitions\/TransactionChilds",
					"x-not-in-post": false
				}
			}
		},
		"EmailTool": {
			"required": [ "userId", "companyEmailId" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"description": "User ID for who created the report",
					"example": "1",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"companyEmailId": {
					"type": "integer",
					"description": "Company email ID used",
					"example": "1",
					"format": "int32"
				},
				"emailSubject": {
					"type": "string",
					"description": "Email Subject",
					"example": "Test",
					"x-mapField": "email_subject"
				},
				"emailContent": {
					"type": "string",
					"description": "Email Content",
					"example": "<p>Hi<\/p>",
					"x-mapField": "email_content"
				},
				"query": {
					"type": "string",
					"description": "Search query used.",
					"example": "{\\\"query\\\":null,\\\"aggs\\\":{\\\"sum_loanamount\\\":{\\\"sum\\\":{\\\"field\\\":\\\"loanAmount\\\"}},\\\"avg_loanamount\\\":{\\\"avg\\\":{\\\"field\\\":\\\"loanAmount\\\"}},\\\"sum_payoff\\\":{\\\"sum\\\":{\\\"field\\\":\\\"payoff\\\"}},\\\"avg_payoff\\\":{\\\"avg\\\":{\\\"field\\\":\\\"payoff\\\"}},\\\"avg_loanage\\\":{\\\"avg\\\":{\\\"field\\\":\\\"loanAge\\\"}},\\\"avg_dayspastdue\\\":{\\\"avg\\\":{\\\"field\\\":\\\"daysPastDue\\\"}},\\\"sum_amountdue\\\":{\\\"sum\\\":{\\\"field\\\":\\\"amountDue\\\"}},\\\"avg_amountdue\\\":{\\\"avg\\\":{\\\"field\\\":\\\"amountDue\\\"}},\\\"sum_principalbalance\\\":{\\\"sum\\\":{\\\"field\\\":\\\"principalBalance\\\"}},\\\"avg_principalbalance\\\":{\\\"avg\\\":{\\\"field\\\":\\\"principalBalance\\\"}},\\\"avg_loanrecency\\\":{\\\"avg\\\":{\\\"field\\\":\\\"loanRecency\\\"}},\\\"sum_lastpaymentamount\\\":{\\\"sum\\\":{\\\"field\\\":\\\"lastPaymentAmount\\\"}},\\\"avg_lastpaymentamount\\\":{\\\"avg\\\":{\\\"field\\\":\\\"lastPaymentAmount\\\"}},\\\"sum_nextpaymentamount\\\":{\\\"sum\\\":{\\\"field\\\":\\\"nextPaymentAmount\\\"}},\\\"avg_nextpaymentamount\\\":{\\\"avg\\\":{\\\"field\\\":\\\"nextPaymentAmount\\\"}}}}",
					"x-mapField": "query"
				},
				"sent": {
					"type": "string",
					"description": "Has it been sent yet? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "sent"
				},
				"active": {
					"type": "integer",
					"description": "Is it active? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Creation date (Unix timestamp)",
					"example": "\/Date(1457986320)\/",
					"format": "date-time"
				},
				"start": {
					"type": "integer",
					"description": "Start",
					"example": "0",
					"format": "int32"
				},
				"size": {
					"type": "integer",
					"description": "Size of email (bytes)",
					"example": "124678",
					"format": "int32"
				},
				"orderby": {
					"type": "string",
					"description": "Order by value",
					"example": "null"
				},
				"Loans": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				},
				"Users": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				},
				"CompanyEmails": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				},
				"dynamicProperties": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				}
			}
		},
		"CustomForms": {
			"required": [ "entityType" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Entities this Custom Form are part of",
					"x-mapField": "entity_type"
				},
				"fileAttachmentId": {
					"type": "integer",
					"description": "File attachment ID",
					"example": "4",
					"x-mapField": "file_attachment_id",
					"format": "int32"
				},
				"customFormSectionId": {
					"type": "integer",
					"description": "Custom Form section ID.",
					"example": "1",
					"x-mapField": "section_id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"description": "Name of the Custom Form",
					"example": "Form 1",
					"x-mapField": "name"
				},
				"pageSize": {
					"type": "string",
					"description": "Size of the page (for printing)",
					"example": "page.size.letter",
					"x-mapField": "page_size",
					"enum": [ "page.size.ledger", "page.size.legal", "page.size.letter" ],
					"x-see": true
				},
				"draft": {
					"type": "string",
					"description": "The content of the custom form (HTML)",
					"example": "<table style=\"height: 362px;\" width=\"1160\"> <tbody> <tr> <td>[[v('agent-job-title')]]<\/td> <td>[[v('agent-job-title')]]<\/td> <td>[[v('agent-job-title')]]<\/td> <td>[[v('agent-job-title')]]<\/td> <td>[[v('agent-job-title')]]<\/td> <td>[[v('agent-job-title')]]<\/td> <td>[[v('agent-job-title')]]<\/td> <td>[[v('agent-job-title')]]<\/td> <td>[[v('agent-job-title')]]<\/td> <td>[[v('agent-job-title')]]<\/td> <\/tr> <tr> <td>[[v('agent-phone')]]<\/td> <td>[[v('agent-email')]]<\/td> <td>[[v('agent-full-name')]]<\/td> <td>[[v('agent-last-name')]]<\/td> <td>[[v('agent-first-name')]]<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <\/tr> <tr> <td>[[v('id')]]<\/td> <td>[[v('customer.primary.full-name')]]<\/td> <td>[[v('customer.primary.ssn')]]<\/td> <td>[[v('customer.primary.company-name')]]<\/td> <td>[[v('customer.primary.gender')]]<\/td> <td>[[v('customer.primary.email')]]<\/td> <td>[[v('customer.primary.secondary-phone-number')]]<\/td> <td>[[v('customer.primary.primary-phone-number')]]<\/td> <td>[[v('customer.primary.birthdate')]]<\/td> <td>[[v('customer.primary.generation-code')]]<\/td> <\/tr> <tr> <td>&nbsp;<\/td> <td>&nbsp;Sign here:&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <\/tr> <tr> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <\/tr> <tr> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <\/tr> <tr> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <\/tr> <tr> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <\/tr> <tr> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <\/tr> <tr> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <td>&nbsp;<\/td> <\/tr> <\/tbody> <\/table>",
					"x-mapField": "draft"
				},
				"priority": {
					"type": "integer",
					"description": "Custom form priority",
					"example": "0",
					"x-mapField": "priority",
					"format": "int32"
				},
				"docusign": {
					"type": "integer",
					"description": "Is docusign enabled? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "docusign",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"description": "Is it active? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Creation date (Unix timestamp)",
					"example": "\/Date(1485526973)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"CustomFormSections": {
					"$ref": "#\/definitions\/CustomFormSections",
					"x-not-in-post": false
				},
				"FileAttachments": {
					"$ref": "#\/definitions\/FileAttachments",
					"x-not-in-post": false
				}
			}
		},
		"CustomFormSections": {
			"required": [ "entityType", "title" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Entities this Custom Form Section are part of",
					"x-mapField": "entity_type"
				},
				"title": {
					"type": "string",
					"description": "Title of the Custom Form Section",
					"example": "Title",
					"x-mapField": "name"
				},
				"active": {
					"type": "integer",
					"description": "Is the section active? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Date created (Unix timestamp)",
					"example": "\/Date(1487523690)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"readOnly": {
					"type": "integer",
					"description": "Is hay read only section? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "read_only",
					"format": "int32"
				},
				"CustomForms": {
					"$ref": "#\/definitions\/CustomForms",
					"x-not-in-post": false
				}
			}
		},
		"CustomFormTool": {
			"required": [ "userId" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"description": "ID of the user that created the export",
					"example": "12",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"customFormId": {
					"type": "integer",
					"description": "Custom Form ID for the export",
					"example": "1",
					"x-mapField": "custom_form_id",
					"format": "int32"
				},
				"pdfOutput": {
					"type": "string",
					"description": "PDF Output type",
					"example": "pdf.output.single",
					"x-mapField": "pdf_output",
					"enum": [ "pdf.output.multiple", "pdf.output.single" ],
					"x-see": true
				},
				"query": {
					"type": "string",
					"description": "Query for the export",
					"example": "{\\\"query\\\":null,\\\"aggs\\\":{\\\"sum_loanamount\\\":{\\\"sum\\\":{\\\"field\\\":\\\"loanAmount\\\"}},\\\"avg_loanamount\\\":{\\\"avg\\\":{\\\"field\\\":\\\"loanAmount\\\"}},\\\"sum_payoff\\\":{\\\"sum\\\":{\\\"field\\\":\\\"payoff\\\"}},\\\"avg_payoff\\\":{\\\"avg\\\":{\\\"field\\\":\\\"payoff\\\"}},\\\"avg_loanage\\\":{\\\"avg\\\":{\\\"field\\\":\\\"loanAge\\\"}},\\\"avg_dayspastdue\\\":{\\\"avg\\\":{\\\"field\\\":\\\"daysPastDue\\\"}},\\\"sum_amountdue\\\":{\\\"sum\\\":{\\\"field\\\":\\\"amountDue\\\"}},\\\"avg_amountdue\\\":{\\\"avg\\\":{\\\"field\\\":\\\"amountDue\\\"}},\\\"sum_principalbalance\\\":{\\\"sum\\\":{\\\"field\\\":\\\"principalBalance\\\"}},\\\"avg_principalbalance\\\":{\\\"avg\\\":{\\\"field\\\":\\\"principalBalance\\\"}},\\\"avg_loanrecency\\\":{\\\"avg\\\":{\\\"field\\\":\\\"loanRecency\\\"}},\\\"sum_lastpaymentamount\\\":{\\\"sum\\\":{\\\"field\\\":\\\"lastPaymentAmount\\\"}},\\\"avg_lastpaymentamount\\\":{\\\"avg\\\":{\\\"field\\\":\\\"lastPaymentAmount\\\"}},\\\"sum_nextpaymentamount\\\":{\\\"sum\\\":{\\\"field\\\":\\\"nextPaymentAmount\\\"}},\\\"avg_nextpaymentamount\\\":{\\\"avg\\\":{\\\"field\\\":\\\"nextPaymentAmount\\\"}}}}",
					"x-mapField": "query"
				},
				"done": {
					"type": "string",
					"description": "If the export is done (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "done"
				},
				"fileName": {
					"type": "string",
					"description": "Name of the exported file",
					"example": "demoexport.pdf",
					"x-mapField": "file_name"
				},
				"url": {
					"type": "string",
					"description": "URL for the download",
					"example": "http:\/\/example.com\/test.pdf",
					"x-mapField": "url"
				},
				"active": {
					"type": "integer",
					"description": "If it is active (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Date of creation (Unix timestamp)",
					"example": "\/Date(14205876983)\/",
					"format": "date-time"
				},
				"start": {
					"type": "integer",
					"description": "Start of the export",
					"example": null,
					"format": "int32"
				},
				"size": {
					"type": "integer",
					"description": "Size of the exported file (bytes)",
					"example": "5246",
					"format": "int32"
				},
				"orderby": {
					"type": "string",
					"description": "Order by method",
					"example": null
				},
				"createUser": {
					"type": "string",
					"description": "User that created the export",
					"example": "Bob"
				},
				"Loans": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				},
				"Users": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				},
				"CustomForms": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				},
				"dynamicProperties": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				}
			}
		},
		"ContextVariables": {
			"required": [ "name", "friendlyName" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"parent": {
					"type": "string",
					"description": "ID of parent variable",
					"example": "tenant-servicers",
					"x-mapField": "parent"
				},
				"name": {
					"type": "string",
					"description": "Name of the variable",
					"example": "company-phone-sales",
					"x-mapField": "name"
				},
				"friendlyName": {
					"type": "string",
					"description": "Name displayed on the UI",
					"example": "Sales Phone",
					"x-mapField": "friendly_name"
				},
				"format": {
					"type": "string",
					"description": "Format of the variable",
					"example": "context.format.phone",
					"x-mapField": "format",
					"enum": [ "context.format.array", "context.format.boolean", "context.format.currency", "context.format.date", "context.format.email", "context.format.numeric", "context.format.percentage", "context.format.phone", "context.format.selection", "context.format.text", "context.format.url" ],
					"x-see": true
				},
				"section": {
					"type": "string",
					"description": "Context section of the variable",
					"example": "context.section.company",
					"x-mapField": "section",
					"enum": [ "context.section.amounts", "context.section.amounts_collected", "context.section.autopay", "context.section.basic", "context.section.calculated", "context.section.checklist", "context.section.collateral", "context.section.collected", "context.section.company", "context.section.custfields", "context.section.customer", "context.section.customer_employer", "context.section.customer_payment", "context.section.customer_personal", "context.section.customer_settings", "context.section.dates", "context.section.general", "context.section.insurance", "context.section.last_payment", "context.section.loan_alert", "context.section.loan_custom", "context.section.next_payment", "context.section.payment", "context.section.payoff", "context.section.portfolios", "context.section.promises", "context.section.regz", "context.section.settings", "context.section.setup_additional", "context.section.setup_advanced", "context.section.setup_escrow", "context.section.setup_late", "context.section.setup_terms", "context.section.source", "context.section.source_custom", "context.section.tenant", "context.section.til" ],
					"x-see": true
				},
				"computation": {
					"type": "integer",
					"description": "Requires computation? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "computation",
					"format": "int32"
				},
				"flags": {
					"type": "integer",
					"description": "Requries flags? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "flags",
					"format": "int32"
				},
				"stoplights": {
					"type": "integer",
					"description": "Requires stoplight? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "stoplights",
					"format": "int32"
				},
				"mailMerge": {
					"type": "integer",
					"description": "Perform a mail-merge? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "mail_merge",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Time the variable was created as a Unix timestamp (Read Only)",
					"example": "\/Date(1498657315)\/",
					"x-mapField": "created",
					"format": "date-time"
				}
			}
		},
		"LinkedLoanValues": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "The loan id of the primary loan",
					"example": "1",
					"x-mapField": "loan",
					"format": "int32"
				},
				"linkedLoanId": {
					"type": "integer",
					"description": "The loan id of the linked loan",
					"example": "2",
					"x-mapField": "linked_loan",
					"format": "int32"
				},
				"optionId": {
					"type": "integer",
					"description": "The id of the link option",
					"example": "5",
					"x-mapField": "option_id",
					"format": "int32"
				},
				"value": {
					"type": "integer",
					"description": "The value of the link",
					"example": "1",
					"x-mapField": "value",
					"format": "int32"
				},
				"updated": {
					"type": "string",
					"description": "Date when updated as a Unix Timestamp",
					"example": "\/Date(1431454966)\/",
					"x-mapField": "lastUpdated",
					"format": "date-time"
				},
				"linkedLoanDisplay": {
					"type": "string",
					"description": "Used to cache the display id of the linked loan to speed up the load time",
					"example": null
				}
			}
		},
		"LinkLoanOptions": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the link option",
					"example": "Title",
					"x-mapField": "title"
				},
				"description": {
					"type": "string",
					"description": "Description of the link option",
					"example": "Link option 1",
					"x-mapField": "description"
				},
				"entityType": {
					"type": "string",
					"description": "The type of entity involved in the link",
					"example": "Paymet",
					"x-mapField": "entity_type"
				},
				"rules": {
					"type": "string",
					"description": "Rules for the link option",
					"example": "HEADER_LINK",
					"x-mapField": "rules"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "When the option was created as a Unix Timestamp",
					"example": "\/Date(1427414371)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "If it is active or not",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				}
			}
		},
		"LinkedInfo": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"linkedLoan": {
					"type": "integer",
					"x-mapField": "linked_loan",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "string",
					"x-mapField": "entity_id"
				},
				"linkedEntityId": {
					"type": "string",
					"x-mapField": "linked_entity_id"
				},
				"linkedDirection": {
					"type": "string",
					"x-mapField": "direction"
				}
			}
		},
		"LoanChilds": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "The loan id of the parent loan",
					"example": "1",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"childId": {
					"type": "integer",
					"description": "The loan id of the child loan",
					"example": "2",
					"x-mapField": "child_id",
					"format": "int32"
				},
				"enrolled": {
					"type": "integer",
					"description": "Indicates if the child is enrolled for transactions",
					"example": "1",
					"x-mapField": "transaction_enrollment",
					"format": "int32"
				},
				"percentage": {
					"type": "number",
					"description": "Indicates the percentage of the split payment the child will receive",
					"example": "32.123456",
					"x-mapField": "transaction_enrollment",
					"format": "float"
				},
				"updated": {
					"type": "string",
					"description": "Date when updated as a Unix Timestamp",
					"example": "\/Date(1431454966)\/",
					"x-mapField": "lastUpdated",
					"format": "date-time"
				},
				"loanDisplay": {
					"type": "string",
					"description": "Used to cache the display id of the loan to speed up the load time",
					"example": null
				},
				"deleted": {
					"type": "integer",
					"description": "Indicates if the record is deleted",
					"example": "0",
					"x-mapField": "deleted",
					"format": "int32"
				}
			}
		},
		"TransactionChilds": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "The entity type that the transaction child belongs to",
					"example": "Entity.Payment",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "ID of the target Entity",
					"example": "123",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"childEntityId": {
					"type": "integer",
					"description": "ID of the target child Entity",
					"example": "321",
					"x-mapField": "child_entity_id",
					"format": "int32"
				},
				"loanChildId": {
					"type": "integer",
					"description": "The loan id of the parent\/child loan relation",
					"example": "2",
					"x-mapField": "loan_child_id",
					"format": "int32"
				},
				"amount": {
					"type": "number",
					"description": "Indicates the amount that goes to the child",
					"example": "150.55",
					"x-mapField": "amount",
					"format": "float"
				},
				"enrolled": {
					"type": "integer",
					"description": "Indicates if the child is enrolled for transactions",
					"example": "1",
					"x-mapField": "transaction_enrollment",
					"format": "int32"
				},
				"percentage": {
					"type": "number",
					"description": "Indicates the percentage of the split payment the child will receive",
					"example": "32.123456",
					"x-mapField": "transaction_enrollment",
					"format": "float"
				},
				"updated": {
					"type": "string",
					"description": "Date when updated as a Unix Timestamp",
					"example": "\/Date(1431454966)\/",
					"x-mapField": "lastUpdated",
					"format": "date-time"
				},
				"deleted": {
					"type": "integer",
					"description": "Indicates if the record is deleted",
					"example": "0",
					"x-mapField": "deleted",
					"format": "int32"
				},
				"childEntityLoanId": {
					"type": "string",
					"description": "Indicates the loan to where the child entity belongs to",
					"example": "555"
				}
			}
		},
		"Rules": {
			"required": [ "title" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the category",
					"example": "Category 1"
				},
				"active": {
					"type": "integer",
					"description": "Is the category active? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Date of the category creation as a Unix timestamp",
					"example": "\/Date(12487651324)\/",
					"x-mapField": "created",
					"format": "date-time"
				}
			}
		},
		"CashDrawers": {
			"required": [ "title" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the Cash Drawer",
					"x-mapField": "title"
				},
				"balance": {
					"type": "number",
					"description": "Balance of the drawer",
					"example": "5000.00",
					"x-mapField": "amount",
					"format": "float"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date created. (Read Only)",
					"example": "\/Date(1429138638)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "Active Status for the Cash Drawer. (1:active 0:inactive)",
					"x-mapField": "active",
					"format": "int32"
				},
				"CustomPaymentMethods": {
					"$ref": "#\/definitions\/CustomPaymentMethods",
					"x-not-in-post": false
				},
				"CashDrawerTransactions": {
					"$ref": "#\/definitions\/CashDrawerTransactions",
					"x-not-in-post": false
				}
			}
		},
		"CashDrawerTxCategory": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the transaction category",
					"x-mapField": "title"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date the transation category was created as a Unix Timestamp. (Read Only)",
					"example": "\/Date(1427414373)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "If the transaction is active (1:active 0:inactive)",
					"x-mapField": "active",
					"format": "int32"
				}
			}
		},
		"CashDrawerTransactions": {
			"required": [ "cashDrawerId", "description", "category", "type", "date" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"cashDrawerId": {
					"type": "integer",
					"description": "ID of the associated Cash Drawer",
					"x-mapField": "cash_drawer_id",
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "ID of the associated Loan",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"paymentId": {
					"type": "integer",
					"description": "ID of the associated payment",
					"x-mapField": "subset",
					"format": "int32"
				},
				"description": {
					"type": "string",
					"description": "Description of the transaction",
					"x-mapField": "description"
				},
				"category": {
					"type": "integer",
					"description": "The ID of the transaction category",
					"x-mapField": "category",
					"format": "int32"
				},
				"type": {
					"type": "string",
					"description": "Type of transaction (transaction.type.deposit or transaction.type.withdrawal)",
					"example": "transaction.type.withdrawal",
					"x-mapField": "type",
					"enum": [ "transaction.type.deposit", "transaction.type.withdrawal" ],
					"x-see": true
				},
				"amount": {
					"type": "number",
					"description": "Amount of the transaction",
					"example": "45.68",
					"x-mapField": "amount",
					"format": "float"
				},
				"balance": {
					"type": "number",
					"description": "Balance of the Cash Drawer after the transaction",
					"example": "1500.00",
					"x-mapField": "balance",
					"format": "float"
				},
				"isReconciled": {
					"type": "integer",
					"description": "Is the transaction reconciled? (1: yes 0:no)",
					"x-mapField": "is_reconciled",
					"format": "int32"
				},
				"reconciliationDate": {
					"type": "string",
					"description": "Date it was reconciled in a Unix Timestamp",
					"example": "\/Date(1429056000)\/",
					"x-mapField": "reconciliation_date",
					"format": "date-time"
				},
				"date": {
					"type": "string",
					"description": "Date of the transaction as a Unix Timestamp",
					"example": "\/Date(1429056000)\/",
					"x-mapField": "date",
					"format": "date-time"
				}
			}
		},
		"CustomBillingThemes": {
			"required": [ "customBillingTemplateId", "name", "source" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"customBillingTemplateId": {
					"type": "integer",
					"description": "Custom Billing template ID",
					"example": "1",
					"x-mapField": "custom_billing_template_id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"description": "Theme name",
					"example": "Theme 1",
					"x-mapField": "name"
				},
				"source": {
					"type": "string",
					"description": "Theme source code (HTML)",
					"example": "<html><head><title>Demo<\/title><\/head><body>Demo<\/body><\/html>",
					"x-mapField": "source"
				},
				"active": {
					"type": "integer",
					"description": "If it is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Unix timestamp of creation date (Read Only)",
					"example": "\/Date(1472654890)\/",
					"format": "date-time"
				}
			}
		},
		"CustomBillingTemplates": {
			"required": [ "name" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"name": {
					"type": "string",
					"description": "Name of the billing template",
					"example": "Template 1",
					"x-mapField": "name"
				},
				"active": {
					"type": "integer",
					"description": "If is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Creation date as a Unix timestamp (Read Only)",
					"example": "\/Date(1478526493)\/",
					"format": "date-time"
				},
				"CustomBillingThemes": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				}
			}
		},
		"LoanFunding": {
			"required": [ "whoEntityType", "method", "amount", "date" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "Loan ID",
					"example": "123",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"whoEntityType": {
					"type": "string",
					"description": "The target entity type",
					"example": "Entity.SourceCompany",
					"x-mapField": "who_entity_type"
				},
				"whoEntityId": {
					"type": "integer",
					"description": "The target entity ID",
					"example": "3",
					"x-mapField": "who_entity_id",
					"format": "int32"
				},
				"cashDrawerId": {
					"type": "integer",
					"description": "Cash Drawer target ID",
					"example": "5",
					"x-mapField": "cash_drawer_id",
					"format": "int32"
				},
				"cashDrawerTxId": {
					"type": "integer",
					"description": "Cash Drawer Transaction ID",
					"example": "4",
					"x-mapField": "cash_drawer_tx_id",
					"format": "int32"
				},
				"paymentAccountId": {
					"type": "integer",
					"description": "Payment Method ID",
					"example": "1",
					"x-mapField": "payment_account_id",
					"format": "int32"
				},
				"paymentProcessor": {
					"type": "string",
					"description": "Payment Processor",
					"example": "XXX",
					"x-mapField": "payment_processor"
				},
				"merchantTxId": {
					"type": "number",
					"description": "Merchant Transaction ID",
					"example": "null",
					"x-mapField": "merchant_tx_id",
					"format": "float"
				},
				"paymentId": {
					"type": "integer",
					"description": "Associated payment ID",
					"example": "21",
					"x-mapField": "payment_id",
					"format": "int32"
				},
				"agent": {
					"type": "integer",
					"description": "Agent user ID",
					"example": "2",
					"x-mapField": "agent",
					"format": "int32"
				},
				"authorizationType": {
					"type": "string",
					"description": "Funding authorization type",
					"example": "loan.funding.auth.web",
					"x-mapField": "authorization_type",
					"enum": [ "loan.funding.auth.ccd", "loan.funding.auth.ppd", "loan.funding.auth.tel", "loan.funding.auth.web" ],
					"x-see": true
				},
				"method": {
					"type": "string",
					"description": "Funding method",
					"example": "loan.funding.method.cashdrawer",
					"x-mapField": "method",
					"enum": [ "loan.funding.method.cashdrawer", "loan.funding.method.credit", "loan.funding.method.deposit", "loan.funding.method.transfer" ],
					"x-see": true
				},
				"amount": {
					"type": "number",
					"description": "Funding amount",
					"example": "150.25",
					"x-mapField": "amount",
					"format": "float"
				},
				"date": {
					"type": "string",
					"description": "Funding Date (Unix timestamp)",
					"example": "\/Date(14209574400)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"status": {
					"type": "string",
					"description": "Funding status",
					"example": "loan.funding.status.success",
					"x-mapField": "status",
					"enum": [ "loan.funding.status.failed", "loan.funding.status.none", "loan.funding.status.pending", "loan.funding.status.reversed", "loan.funding.status.success" ],
					"x-see": true
				},
				"created": {
					"type": "string",
					"description": "Date created (Unix timestamp)",
					"example": "\/Date(145252688)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "Is the funding active?",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"Loans": {
					"$ref": "#\/definitions\/Loans",
					"x-not-in-post": false
				},
				"CashDrawers": {
					"$ref": "#\/definitions\/CashDrawers",
					"x-not-in-post": false
				},
				"CashDrawerTransactions": {
					"$ref": "#\/definitions\/CashDrawerTransactions",
					"x-not-in-post": false
				},
				"PaymentAccounts": {
					"$ref": "#\/definitions\/PaymentAccounts",
					"x-not-in-post": false
				},
				"Payments": {
					"$ref": "#\/definitions\/Payments",
					"x-not-in-post": false
				}
			}
		},
		"RecurrentCharges": {
			"required": [ "isEnabled", "applyInNewLoan", "title", "info", "calculation", "interestBearing" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"triggerEvent": {
					"type": "string",
					"description": "Event to trigger the charge",
					"example": null,
					"x-mapField": "trigger_event",
					"enum": [ "charge.recurring.event.changeduedate", "charge.recurring.event.loanactivation", "charge.recurring.event.loanmodification", "charge.recurring.event.origination", "charge.recurring.event.paymentreversal" ],
					"x-see": true
				},
				"triggerSubEvent": {
					"type": "string",
					"description": "Event to trigger the charge",
					"example": null,
					"x-mapField": "trigger_sub_event"
				},
				"triggerEventValue": {
					"type": "string",
					"description": "Event to trigger the charge",
					"example": null,
					"x-mapField": "trigger_event_value_updated"
				},
				"triggerRule": {
					"type": "string",
					"description": "Rule to trigger the charge",
					"example": "(> r\/status-days-past-due 5)",
					"x-mapField": "trigger_rule"
				},
				"restrictionRule": {
					"type": "string",
					"description": "Rule for restricting qualifying loans",
					"example": "(AND (>= r\/status-aging (:begin r\/companySettings-aging-3) )(<= r\/status-aging (:end r\/companySettings-aging-3) )(>= r\/status-days-past-due (:begin r\/companySettings-days-past-due-18) )(<= r\/status-days-past-due (:end r\/companySettings-days-past-due-18) )(= r\/source-company-id \"null\")(= r\/servicingUser \"null\"))",
					"x-mapField": "restriction_rule"
				},
				"restrictionUI": {
					"type": "string",
					"description": "UI options for restricting qualifying loans",
					"example": "{\"portfolios\":[{\"category\":null,\"portfolio\":\"\",\"subportfolio\":\"\"}],\"aging\":\"3\",\"loan-status\":\"\",\"days-past-due\":\"18\",\"source-company-id\":null,\"servicingUser\":null,\"triggerRuleUI\":\"\"}",
					"x-mapField": "restriction_ui"
				},
				"chargeApplicationType": {
					"type": "string",
					"description": "Charge application type",
					"example": "loan.lagefeeapp.standard",
					"x-mapField": "charge_application_type",
					"enum": [ "loan.latefeeapp.payoff", "loan.latefeeapp.standard" ],
					"x-see": true
				},
				"isEnabled": {
					"type": "integer",
					"description": "If it is enabled or not (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "is_enabled",
					"format": "int32"
				},
				"applyInNewLoan": {
					"type": "integer",
					"description": "If it should apply in a new loan (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "apply_in_new_loan",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the recurring charge",
					"example": "Title",
					"x-mapField": "title"
				},
				"info": {
					"type": "string",
					"description": "Information of the recurring charge",
					"example": "info",
					"x-mapField": "info"
				},
				"calculation": {
					"type": "string",
					"description": "How to calculate the recurring charge",
					"example": "charge.recurring.calculation.fixed",
					"x-mapField": "calculation",
					"enum": [ "charge.recurring.calculation.contingency", "charge.recurring.calculation.fixed", "charge.recurring.calculation.percentage" ],
					"x-see": true
				},
				"fixedAmount": {
					"type": "number",
					"description": "The fixed amount for the charge",
					"example": "15.56",
					"x-mapField": "fixed_amount",
					"format": "float"
				},
				"percentage": {
					"type": "number",
					"description": "The percentage amount for the charge",
					"example": "10.0000",
					"x-mapField": "percentage",
					"format": "float"
				},
				"percentageBase": {
					"type": "string",
					"description": "The base for the percentage amount",
					"example": null,
					"x-mapField": "percentage_base",
					"enum": [ "charge.recurring.percentagebase.apd", "charge.recurring.percentagebase.cpb", "charge.recurring.percentagebase.nda", "charge.recurring.percentagebase.npa", "charge.recurring.percentagebase.ola" ],
					"x-see": true
				},
				"contingencyBracketId": {
					"type": "string",
					"description": "The contigency bracket id",
					"example": null,
					"x-mapField": "contingency_bracket_id"
				},
				"triggerType": {
					"type": "string",
					"description": "The trigger type",
					"example": "charge.recurring.triggertype.rule",
					"x-mapField": "trigger_type",
					"enum": [ "charge.recurring.triggertype.event", "charge.recurring.triggertype.rule" ],
					"x-see": true
				},
				"loanType": {
					"type": "string",
					"description": "The loan type",
					"example": null,
					"x-mapField": "loan_type",
					"enum": [ "loan.type.creditLimit", "loan.type.flooring", "loan.type.installment", "loan.type.lease" ],
					"x-see": true
				},
				"interestBearing": {
					"type": "integer",
					"description": "Interest bearing option (0 or 1)",
					"example": 1,
					"x-mapField": "interest_bearing",
					"format": "int32"
				},
				"pastDueSetting": {
					"type": "string",
					"description": "past due setting include\/omitted",
					"example": null,
					"x-mapField": "past_due_setting"
				},
				"status": {
					"type": "integer",
					"readOnly": true,
					"description": "The status of the charge (Read Only)",
					"example": 1,
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"description": "If it is active (1:Yes 0:No)",
					"example": "d",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Unix timestamp of creation date (Read Only)",
					"example": "\/Date(1423451354621)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"__modifyLoans": {
					"type": "boolean",
					"description": "If it should apply to modify loans (not persistent)"
				},
				"Brackets": {
					"$ref": "#\/definitions\/Brackets",
					"x-not-in-post": false
				}
			}
		},
		"BillingTool": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"description": "ID of the user that created the entry",
					"example": "1",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"customBillingThemeId": {
					"type": "integer",
					"description": "The id of the custom billing theme",
					"example": "1",
					"x-mapField": "custom_billing_theme_id",
					"format": "int32"
				},
				"defaultBillingThemeId": {
					"type": "integer",
					"description": "The default billing theme id",
					"example": "1",
					"x-mapField": "default_billing_theme_id",
					"format": "int32"
				},
				"customText": {
					"type": "string",
					"description": "The custom billing text",
					"example": "Custom Text",
					"x-mapField": "custom_text"
				},
				"pdfOutput": {
					"type": "string",
					"description": "PDF Output file type",
					"example": "pdf.output.single",
					"x-mapField": "pdf_output"
				},
				"headerColor": {
					"type": "string",
					"description": "Header color",
					"example": "#ffffff",
					"x-mapField": "header_color"
				},
				"fileName": {
					"type": "string",
					"description": "Name of the outputed file",
					"example": "file.pdf",
					"x-mapField": "file_name"
				},
				"url": {
					"type": "string",
					"description": "URL of the outputted file",
					"example": "http:\/\/example.com\/file.pdf",
					"x-mapField": "url"
				},
				"currentPeriod": {
					"type": "integer",
					"description": "If billing period is current period (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "current_period",
					"format": "int32"
				},
				"customStartDate": {
					"type": "string",
					"description": "Unix timestamp of start transactions",
					"example": "\/Date(1489654968)\/",
					"x-mapField": "custom_start_date",
					"format": "date-time"
				},
				"customEndDate": {
					"type": "string",
					"description": "Unix timestamp of start transactions",
					"example": "\/Date(1489654968)\/",
					"x-mapField": "custom_end_date",
					"format": "date-time"
				},
				"query": {
					"type": "string",
					"description": "The search query used",
					"example": "null",
					"x-mapField": "query"
				},
				"processed": {
					"type": "string",
					"description": "Number of processed accounts",
					"example": "0",
					"x-mapField": "processed"
				},
				"active": {
					"type": "integer",
					"description": "If it is active (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Unix timestamp of date created",
					"example": "\/Date(1489654968)\/",
					"format": "date-time"
				},
				"start": {
					"type": "string",
					"description": "Start time of the billing tool (Unix timestamp)",
					"example": "\/Date(148979361)\/",
					"format": "date-time"
				},
				"size": {
					"type": "integer",
					"description": "Size of the exported pdf (bytes)",
					"example": "1489762",
					"format": "int32"
				},
				"orderby": {
					"type": "string",
					"description": "Order by option",
					"example": "null"
				},
				"draft": {
					"type": "string",
					"description": " option",
					"example": "null"
				},
				"createUser": {
					"type": "string",
					"description": "The name of the user that created the tool",
					"example": "Bob"
				},
				"Loans": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				},
				"DefaultBillingThemes": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				},
				"CustomBillingThemes": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				},
				"Users": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				},
				"dynamicProperties": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				}
			}
		},
		"UserSearchSettings": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"readOnly": true,
					"description": "ID of the user",
					"example": "12",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"searchEntityType": {
					"type": "string",
					"description": "Entitiy search type",
					"example": "Entity.Customer",
					"x-mapField": "search_entity_type"
				},
				"searchSettings": {
					"type": "string",
					"description": "Search settings for the entity",
					"example": "\"columns\":{\"status\":true,\"id\":true,\"customId\":true,\"customerName\":true,\"customerType\":false,\"ssn\":true,\"email\":true,\"birthDate\":true,\"created\":true,\"loansCount\":true,\"paymentMethodsCount\":false,\"referencesCount\":false,\"__formattedHasEmployer\":false,\"hasAvatar\":false,\"creditScore\":false,\"primaryPhone\":true,\"smsVerified\":false,\"__ofacCompliant\":false,\"__addressVerified\":false,\"__formattedCity\":false,\"__formattedState\":false,\"zipcode\":false,\"__formattedCountry\":false},\"pageSize\":100,\"sortingOptions\":{\"sortBy\":\"id\",\"sortDirection\":\"asc\"}}",
					"x-mapField": "search_settings"
				},
				"created": {
					"type": "string",
					"description": "The date created as a Unix timestamp",
					"example": "\/Date(1421546000)\/",
					"format": "date-time"
				},
				"modified": {
					"type": "string",
					"description": "The date last modified as a Unix timestamp",
					"example": "\/Date(142578500)\/",
					"x-mapField": "lastUpdated",
					"format": "date-time"
				}
			}
		},
		"TCNItemsQueue": {
			"required": [ "loanId" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "Associated Loan ID",
					"example": "12",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"sentToPrimaryCustomer": {
					"type": "integer",
					"description": "Has been sent to primary customer? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "cust_primary",
					"format": "int32"
				},
				"sentToPrimaryCustomerPhone": {
					"type": "integer",
					"description": "Has been sent to primary customer primary phone? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "cust_primary_phone",
					"format": "int32"
				},
				"sentToPrimaryCustomerSecPhone": {
					"type": "integer",
					"description": "Has been sent to primary customer secondary phone? (1:Yes 0:NO)",
					"example": "e=0",
					"x-mapField": "cust_primary_phone_sec",
					"format": "int32"
				},
				"sentToSecondaryCustomer": {
					"type": "integer",
					"description": "Has been sent to secondary customer? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "cust_secondary",
					"format": "int32"
				},
				"sentToSecondaryCustomerPhone": {
					"type": "integer",
					"description": "Has been sent to secondary customer primary phone? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "cust_secondary_phone",
					"format": "int32"
				},
				"sentToSecondaryCustomerSecPhone": {
					"type": "integer",
					"description": "Has been sent to secondary customer secondary phone? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "cust_secondary_phone_sec",
					"format": "int32"
				},
				"searchQuery": {
					"type": "string",
					"description": "Search query to perform",
					"example": "null"
				}
			}
		},
		"TCNCampaigns": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"broadcastId": {
					"type": "integer",
					"description": "TCN Broadcast ID",
					"example": "12",
					"x-mapField": "broadcast_id",
					"format": "int32"
				},
				"broadcastStart": {
					"type": "string",
					"description": "TCN Broadcast Start time (Unix Timestamp)",
					"example": "\/Date(142124400)\/",
					"x-mapField": "broadcast_start",
					"format": "date-time"
				},
				"broadcastTemplate": {
					"type": "integer",
					"description": "TCN Broadcast template",
					"example": "1",
					"x-mapField": "broadcast_template",
					"format": "int32"
				},
				"recipients": {
					"type": "string",
					"description": "TCN recipients",
					"example": "null",
					"x-mapField": "recipients"
				},
				"status": {
					"type": "integer",
					"description": "TCN Campaign Status",
					"example": "null",
					"x-mapField": "status",
					"format": "int32"
				}
			}
		},
		"FlagStatusArchive": {
			"required": [ "entityId", "flagId", "date", "value" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Target entity type",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "Target entity ID",
					"example": "3",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"flagId": {
					"type": "integer",
					"description": "Target flag ID",
					"example": "3",
					"x-mapField": "flag_id",
					"format": "int32"
				},
				"date": {
					"type": "string",
					"description": "Archive Date (Unix timestamp)",
					"example": "\/Date(1245795154645)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"value": {
					"type": "integer",
					"description": "Value of the flag (1:Set 0:Not-Set)",
					"example": "1",
					"x-mapField": "value",
					"format": "int32"
				},
				"description": { "type": "string" }
			}
		},
		"EscrowCalculators": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Target entity type",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "Target entity ID",
					"example": "1",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "Modification ID",
					"example": "3",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"subset": {
					"type": "integer",
					"description": "Subset ID",
					"example": "2",
					"x-mapField": "subset",
					"format": "int32"
				},
				"term": {
					"type": "integer",
					"description": "Escrow Calculator term",
					"example": "10",
					"x-mapField": "term",
					"format": "int32"
				},
				"total": {
					"type": "number",
					"description": "Escrow amount",
					"example": "10000.00",
					"x-mapField": "total",
					"format": "float"
				},
				"percent": {
					"type": "number",
					"description": "Escrow percentage",
					"example": "25.25",
					"x-mapField": "percent",
					"format": "float"
				},
				"firstPeriod": {
					"type": "number",
					"description": "First period days",
					"example": "30",
					"x-mapField": "first_period",
					"format": "float"
				},
				"regularPeriod": {
					"type": "number",
					"description": "Regular Period days",
					"example": "31",
					"x-mapField": "regular_period",
					"format": "float"
				},
				"percentBase": {
					"type": "string",
					"description": "Percent Base (if useing percentage calculation)",
					"example": "loan.escrowPercentBase.loanAmount",
					"x-mapField": "percent_base",
					"enum": [ "loan.escrowPercentBase.basePayment", "loan.escrowPercentBase.loanAmount", "loan.escrowPercentBase.salesPrice" ],
					"x-see": true
				},
				"proRate1st": {
					"type": "string",
					"description": "Pro rate 1st method",
					"example": "loan.escrowProrateFirst.full",
					"x-mapField": "prorate_first",
					"enum": [ "loan.escrowProrateFirst.full", "loan.escrowProrateFirst.none", "loan.escrowProrateFirst.shortOnly" ],
					"x-see": true
				},
				"extendFinal": {
					"type": "integer",
					"description": "Extend final? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "extend_final",
					"format": "int32"
				}
			}
		},
		"UserChartSettings": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"chartIdentifier": {
					"type": "string",
					"x-mapField": "chart_id"
				},
				"chartSettings": {
					"type": "string",
					"x-mapField": "chart_settings"
				}
			}
		},
		"LoanModifications": {
			"required": [ "date" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Target Entity type",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "Target Entity ID",
					"example": "2",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"date": {
					"type": "string",
					"description": "Modification Date (Unix timestamp)",
					"example": "\/Date(1247855544)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"created": {
					"type": "string",
					"description": "Modification creation date (Unix timestamp)",
					"example": "\/Date(12444233151)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"parent": {
					"type": "integer",
					"description": "Parent modification",
					"example": "null",
					"x-mapField": "parent",
					"format": "int32"
				}
			}
		},
		"UserDeliveries": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "user_id",
					"format": "int32"
				},
				"parentId": {
					"type": "integer",
					"description": "ID of the parent delivery",
					"example": "1",
					"x-mapField": "parent_id",
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"description": "ID of the customer",
					"example": "1",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"rule": {
					"type": "string",
					"description": "Rule for triggering the delivery",
					"example": "(AND (= r\/loan-status \"Underwriting\")(= r\/loan-substatus \"Declined\"))",
					"x-mapField": "rule"
				},
				"restriction": {
					"type": "string",
					"description": "Restriction rule for the delivery",
					"example": "(AND (= r\/loan-status \"Underwriting\")(= r\/loan-substatus \"Declined\"))",
					"x-mapField": "restriction"
				},
				"restrictionUI": {
					"type": "string",
					"description": "Restriction UI rule for the delivery",
					"example": "{\"portfolios\":[{\"category\":\"\",\"portfolio\":\"\",\"subportfolio\":\"\"}]}",
					"x-mapField": "restriction_ui"
				},
				"parentType": {
					"type": "string",
					"description": "Parent Delivery type",
					"example": "Entity.WebDelivery",
					"x-mapField": "parent_type"
				},
				"ntfVisible": {
					"type": "integer",
					"description": "Is NTF visible? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "ntf_visible",
					"format": "int32"
				},
				"ntcVisible": {
					"type": "integer",
					"description": "Is NTC visible? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "ntc_visible",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"description": "Is active? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				}
			}
		},
		"UserTenantConfigurations": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"defaultUserLoanId": {
					"type": "integer",
					"description": "Default loan id for the user",
					"example": "1",
					"x-mapField": "default_user_loan_id",
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"description": "User ID",
					"example": "1",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"ipRestrictionId": {
					"type": "integer",
					"description": "IP Restriction group ID",
					"example": "1",
					"x-mapField": "iprestriction_id",
					"format": "int32"
				},
				"searchRestrictionsGroupId": {
					"type": "integer",
					"description": "Search Restrictions Group ID",
					"example": "1",
					"x-mapField": "search_restriction_group_id",
					"format": "int32"
				},
				"shortcutsSetId": {
					"type": "integer",
					"x-mapField": "shortcuts_set_id",
					"format": "int32"
				},
				"googleEmail": {
					"type": "string",
					"description": "Google Cloud Print email",
					"example": "email@gmail.com",
					"x-mapField": "google_email"
				},
				"googlePassword": {
					"type": "string",
					"description": "Google Cloud Print password",
					"example": "password",
					"x-mapField": "google_password"
				},
				"googlePrintToken": {
					"type": "string",
					"description": "Google Cloud Print token",
					"example": "token",
					"x-mapField": "google_print_token"
				},
				"soundGroupId": {
					"type": "integer",
					"x-mapField": "sound_group_id",
					"format": "int32"
				},
				"loanSummaryTemplateId": {
					"type": "integer",
					"x-mapField": "loan_summary_template_id",
					"format": "int32"
				},
				"userAccountConfigured": {
					"type": "integer",
					"x-mapField": "user_account_configured",
					"format": "int32"
				},
				"wizardGroupId": {
					"type": "integer",
					"x-mapField": "wizard_group_id",
					"format": "int32"
				}
			}
		},
		"CreditReportHistory": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"timeCompleted": {
					"type": "string",
					"description": "Time the credit report was finished generating (Unix timestamp; Read Only)",
					"example": "\/Date(164879230)\/",
					"x-mapField": "time_completed",
					"format": "date-time"
				},
				"archivePassword": {
					"type": "string",
					"description": "Archived password to open zip file",
					"example": "password",
					"x-mapField": "archive_password"
				},
				"createdBy": {
					"type": "string",
					"description": "Name of the user that created the report",
					"example": "Bob",
					"x-mapField": "created_by"
				},
				"ip": {
					"type": "string",
					"description": "IP address of the user that created the report",
					"example": "127.0.0.1",
					"x-mapField": "ip"
				},
				"fileName": {
					"type": "string",
					"description": "Name of the zip file generated",
					"example": "demoexport.zip",
					"x-mapField": "file_name"
				},
				"fileSize": {
					"type": "string",
					"description": "Size of the zip file generated (bytes)",
					"example": "5182",
					"x-mapField": "file_size"
				},
				"fileLink": {
					"type": "string",
					"description": "Link to the zip file generated",
					"example": "\/demo\/example\/report\/demoexport.zip",
					"x-mapField": "file_link"
				}
			}
		},
		"CreditReportQueue": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"status": {
					"type": "string",
					"description": "Status of the credit report export",
					"example": "creditReport.status.complete",
					"x-mapField": "status"
				},
				"timeQueue": {
					"type": "string",
					"description": "The time the report was queued (Unix timestamp)",
					"example": "\/Date(1489563207)\/",
					"x-mapField": "time_queue",
					"format": "date-time"
				},
				"timeCompleted": {
					"type": "string",
					"description": "The time the report was finished (Unix timestamp)",
					"example": "\/Date(1489563207)\/",
					"x-mapField": "time_completed",
					"format": "date-time"
				},
				"queuedBy": {
					"type": "string",
					"description": "The name of the user that queued the report",
					"example": "Bob",
					"x-mapField": "queued_by"
				},
				"info": {
					"type": "string",
					"description": "Information about the queue item",
					"example": "Info",
					"x-mapField": "info"
				},
				"fileName": {
					"type": "string",
					"description": "Name of the CSV file (when completed)",
					"example": "demoexport.csv",
					"x-mapField": "file_link"
				},
				"fileLink": {
					"type": "string",
					"description": "Link to the csv file (when completed)",
					"example": "\/example\/reports\/download\/demoexport.csv",
					"x-mapField": "file_link"
				},
				"closedDateRestriction": {
					"type": "string",
					"description": "Close Date Restriction",
					"example": "90",
					"x-mapField": "closed_date_restriction"
				}
			}
		},
		"Transactions": {
			"required": [ "amount", "description" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"amount": {
					"type": "number",
					"description": "Amount charged",
					"example": "1.0=",
					"format": "float"
				},
				"balance": {
					"type": "number",
					"description": "Amount due on the account",
					"example": "3.00",
					"format": "float"
				},
				"type": {
					"type": "string",
					"description": "Type of transaction",
					"example": "admin.transaction.deleteLoan",
					"enum": [ "admin.transaction.activationFee", "admin.transaction.archiveLoan", "admin.transaction.billableaccounts", "admin.transaction.core", "admin.transaction.createLoan", "admin.transaction.credit", "admin.transaction.customProgramming", "admin.transaction.deleteLoan", "admin.transaction.import", "admin.transaction.onlinePayment", "admin.transaction.other", "admin.transaction.package", "admin.transaction.payment", "admin.transaction.phoneCall", "admin.transaction.recoverDeletedLoan", "admin.transaction.resurrectLoan", "admin.transaction.s3Data", "admin.transaction.subscription", "admin.transaction.technicalSupport", "admin.transactions.salesTax" ],
					"x-see": true
				},
				"description": {
					"type": "string",
					"description": "Description of the transaction",
					"example": "Transaction 1"
				},
				"active": {
					"type": "integer",
					"description": "If the transaction id active (1:Yes 0:No",
					"example": "1",
					"format": "int32"
				},
				"effectiveDate": {
					"type": "string",
					"description": "Unix timestamp of when the transaction is effective",
					"example": "\/Date(148765189)\/",
					"x-mapField": "effective_date",
					"format": "date-time"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Unix timestamp of when the transaction was created",
					"example": "\/Date(1487965498)\/",
					"format": "date-time"
				},
				"Notes": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				}
			}
		},
		"Investors": {
			"required": [ "customerType", "status", "gender", "generationCode", "customerIdType", "creditLimit", "active" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"customId": {
					"type": "string",
					"x-mapField": "custom_id"
				},
				"customerType": {
					"type": "string",
					"x-mapField": "customer_type",
					"enum": [ "customer.type.company", "customer.type.flooringCustomer", "customer.type.individual" ],
					"x-see": true
				},
				"status": { "type": "string" },
				"firstName": {
					"type": "string",
					"x-mapField": "first_name"
				},
				"lastName": {
					"type": "string",
					"x-mapField": "last_name"
				},
				"middleName": {
					"type": "string",
					"x-mapField": "middle_name"
				},
				"birthDate": {
					"type": "string",
					"x-mapField": "birth_date",
					"format": "date-time"
				},
				"gender": {
					"type": "string",
					"enum": [ "customer.gender.female", "customer.gender.male", "customer.gender.unknown" ],
					"x-see": true
				},
				"generationCode": {
					"type": "string",
					"x-mapField": "generation_code",
					"enum": [ "customer.generationCode.ii", "customer.generationCode.iii", "customer.generationCode.iv", "customer.generationCode.ix", "customer.generationCode.jr", "customer.generationCode.none", "customer.generationCode.sr", "customer.generationCode.v", "customer.generationCode.vi", "customer.generationCode.vii", "customer.generationCode.viii" ],
					"x-see": true
				},
				"email": { "type": "string" },
				"ssn": { "type": "string" },
				"driverLicense": {
					"type": "string",
					"x-mapField": "driver_license"
				},
				"companyName": {
					"type": "string",
					"x-mapField": "company_name"
				},
				"contactName": {
					"type": "string",
					"x-mapField": "contact_name"
				},
				"customerIdType": {
					"type": "string",
					"x-mapField": "customer_id_type",
					"enum": [ "customer.idType.employerNumber", "customer.idType.sin", "customer.idType.ssn" ],
					"x-see": true
				},
				"customerId": {
					"type": "string",
					"x-mapField": "customer_id"
				},
				"creditLimit": {
					"type": "number",
					"x-mapField": "credit_limit",
					"format": "double"
				},
				"accessUserName": {
					"type": "string",
					"x-mapField": "access_username"
				},
				"accessPassword": {
					"type": "string",
					"x-mapField": "access_password"
				},
				"active": {
					"type": "integer",
					"format": "int32"
				},
				"ofacMatch": {
					"type": "integer",
					"readOnly": true,
					"x-mapField": "ofac_match",
					"format": "int32"
				},
				"ofacTested": {
					"type": "integer",
					"readOnly": true,
					"x-mapField": "ofac_tested",
					"format": "int32"
				},
				"hasAvatar": {
					"type": "integer",
					"readOnly": true,
					"x-mapField": "has_avatar",
					"format": "int32"
				},
				"investorRole": {
					"type": "string",
					"readOnly": true
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"format": "date-time"
				},
				"Address": {
					"$ref": "#\/definitions\/Address",
					"x-not-in-post": false
				},
				"PaymentAccounts": {
					"$ref": "#\/definitions\/PaymentAccounts",
					"x-not-in-post": true
				},
				"Phones": {
					"$ref": "#\/definitions\/Phones",
					"x-not-in-post": false
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": false
				},
				"InvestorDocuments": {
					"$ref": "#\/definitions\/InvestorDocuments",
					"x-not-in-post": false
				},
				"HoldingAccounts": {
					"$ref": "#\/definitions\/HoldingAccounts",
					"x-not-in-post": false
				}
			}
		},
		"InvestorDocuments": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"fileName": {
					"type": "string",
					"x-mapField": "file_name"
				},
				"description": { "type": "string" },
				"sectionId": {
					"type": "integer",
					"x-mapField": "section_id",
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"userName": {
					"type": "string",
					"x-mapField": "user_name"
				},
				"remoteAddress": {
					"type": "string",
					"x-mapField": "remote_addr"
				},
				"fileAttachmentId": {
					"type": "string",
					"x-mapField": "file_attachment_id"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"archived": {
					"type": "integer",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"format": "date-time"
				},
				"customerId": {
					"type": "integer",
					"readOnly": true,
					"x-mapField": "customer_id",
					"format": "int32"
				}
			}
		},
		"Investments": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"displayId": {
					"type": "string",
					"x-mapField": "display_id"
				},
				"modId": {
					"type": "integer",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"x-mapField": "title"
				},
				"type": {
					"type": "string",
					"x-mapField": "type"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"x-mapField": "active",
					"format": "int32"
				},
				"HoldingAccountSettings": {
					"$ref": "#\/definitions\/HoldingAccountSettings",
					"x-not-in-post": false
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": false
				},
				"ChecklistItemValues": {
					"$ref": "#\/definitions\/ChecklistItemValues",
					"x-not-in-post": false
				},
				"Notes": {
					"$ref": "#\/definitions\/Notes",
					"x-not-in-post": false
				},
				"InvestmentDocuments": {
					"$ref": "#\/definitions\/InvestmentDocuments",
					"x-not-in-post": false
				},
				"Charges": {
					"$ref": "#\/definitions\/Charges",
					"x-not-in-post": false
				},
				"LoanAdvancements": {
					"$ref": "#\/definitions\/LoanAdvancements",
					"x-not-in-post": false
				},
				"LoanCredits": {
					"$ref": "#\/definitions\/LoanCredits",
					"x-not-in-post": false
				},
				"HoldingAccountTransactions": {
					"$ref": "#\/definitions\/HoldingAccountTransactions",
					"x-not-in-post": false
				},
				"LoanDueDateChanges": {
					"$ref": "#\/definitions\/LoanDueDateChanges",
					"x-not-in-post": false
				},
				"ScheduleRolls": {
					"$ref": "#\/definitions\/ScheduleRolls",
					"x-not-in-post": false
				},
				"StopInterestDates": {
					"$ref": "#\/definitions\/StopInterestDates",
					"x-not-in-post": false
				},
				"LoanModifications": {
					"$ref": "#\/definitions\/LoanModifications",
					"x-not-in-post": false
				},
				"EscrowAdjustments": {
					"$ref": "#\/definitions\/EscrowAdjustments",
					"x-not-in-post": false
				},
				"EscrowCalculators": {
					"$ref": "#\/definitions\/EscrowCalculators",
					"x-not-in-post": false
				},
				"Portfolios": {
					"$ref": "#\/definitions\/Portfolios",
					"x-not-in-post": false
				},
				"SubPortfolios": {
					"$ref": "#\/definitions\/SubPortfolios",
					"x-not-in-post": false
				},
				"Investors": {
					"$ref": "#\/definitions\/Investors",
					"x-not-in-post": false
				},
				"HoldingAccountAutopays": {
					"$ref": "#\/definitions\/HoldingAccountAutopays",
					"x-not-in-post": false
				}
			}
		},
		"InvestmentDocuments": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"investmentId": {
					"type": "integer",
					"x-mapField": "investment_id",
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"sectionId": {
					"type": "integer",
					"x-mapField": "section_id",
					"format": "int32"
				},
				"userName": {
					"type": "string",
					"x-mapField": "user_name"
				},
				"remoteAddress": {
					"type": "string",
					"x-mapField": "remote_addr"
				},
				"fileName": {
					"type": "string",
					"x-mapField": "filename"
				},
				"description": {
					"type": "string",
					"x-mapField": "description"
				},
				"ip": {
					"type": "integer",
					"x-mapField": "ip",
					"format": "int32"
				},
				"size": {
					"type": "integer",
					"x-mapField": "size",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"x-mapField": "created",
					"format": "date-time"
				},
				"archived": {
					"type": "integer",
					"x-mapField": "archived",
					"format": "int32"
				}
			}
		},
		"PayNearMeOrders": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "Associated loan ID",
					"example": "12",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"customerId": {
					"type": "integer",
					"description": "Associated customer ID",
					"example": "52",
					"x-mapField": "customer_id",
					"format": "int32"
				},
				"orderId": {
					"type": "string",
					"description": "Order ID",
					"example": "ID",
					"x-mapField": "order_id"
				},
				"shortOrderId": {
					"type": "string",
					"description": "Short order ID",
					"example": "ID",
					"x-mapField": "short_order_id"
				},
				"siteCustomerId": {
					"type": "string",
					"description": "Site customer ID",
					"example": "ID",
					"x-mapField": "site_customer_id"
				},
				"status": {
					"type": "string",
					"description": "Pay Near Me status",
					"example": "null",
					"x-mapField": "status"
				},
				"slipUrl": {
					"type": "string",
					"description": "URL of the Pay Near Me slip",
					"example": "e",
					"x-mapField": "slip_url"
				},
				"created": {
					"type": "string",
					"description": "Order creation date (Unix timestamp)",
					"example": "\/Date(12468765321)\/",
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "Is it active? (1:Yes 0:No)",
					"example": "e",
					"x-mapField": "active",
					"format": "int32"
				},
				"sendSms": {
					"type": "boolean",
					"description": "Send SMS? (true or false)",
					"example": "true"
				},
				"customerName": {
					"type": "string",
					"description": "Name of the customer",
					"example": "Bob"
				},
				"phone": {
					"type": "string",
					"description": "Phone number of the customer",
					"example": "8005553245"
				},
				"cardNumber": {
					"type": "string",
					"description": "Customer Number",
					"example": "XXXXXXXXXXXXXXXXXX1111"
				},
				"email": {
					"type": "string",
					"description": "Customer email address",
					"example": "bob@example.com"
				},
				"address1": {
					"type": "string",
					"description": "Customer",
					"example": "123 Oak Ln"
				},
				"zipCode": {
					"type": "string",
					"description": "Customer",
					"example": "12345"
				},
				"city": {
					"type": "string",
					"description": "Customer",
					"example": "San Diego"
				},
				"state": {
					"type": "string",
					"description": "Customer",
					"example": "geo.state.NY"
				},
				"country": {
					"type": "string",
					"description": "Customer",
					"example": "geo.country.usa"
				}
			}
		},
		"LoanSmsQueueItems": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"loanId": {
					"type": "integer",
					"description": "ID of the target loan",
					"example": "1",
					"x-mapField": "loan_id",
					"format": "int32"
				},
				"templateId": {
					"type": "integer",
					"description": "ID of the SBT template",
					"example": "1",
					"x-mapField": "template_id",
					"format": "int32"
				},
				"templateType": {
					"type": "string",
					"description": "SBT template type",
					"example": "null",
					"x-mapField": "template_type"
				},
				"primaryCustomerPrimaryPhone": {
					"type": "integer",
					"description": "Primary phone number of the primary customer",
					"example": "8005552436",
					"x-mapField": "primary_customer_primary_phone",
					"format": "int32"
				},
				"primaryCustomerSecondaryPhone": {
					"type": "integer",
					"description": "Secondary phone number of the primary customer",
					"example": "8005553462",
					"x-mapField": "primary_customer_secondary_phone",
					"format": "int32"
				},
				"secondaryCustomerPrimaryPhone": {
					"type": "integer",
					"description": "Primary phone number of the secondary customer",
					"example": "8005552313",
					"x-mapField": "secondary_customer_primary_phone",
					"format": "int32"
				},
				"secondaryCustomerSecondaryPhone": {
					"type": "integer",
					"description": "Secondary phone number of the secondary customer",
					"example": "5003336245",
					"x-mapField": "secondary_customer_secondary_phone",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date the SMS Queue was created (Unix timestamp)",
					"example": "\/Date(14278569501)\/",
					"format": "date-time"
				}
			}
		},
		"ChargeOff": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Target entity type",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "Target entity ID",
					"example": "1",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"paymentId": {
					"type": "integer",
					"description": "Associated payement ID",
					"example": "85",
					"x-mapField": "payment_id",
					"format": "int32"
				},
				"creditId": {
					"type": "integer",
					"description": "Associated Credit ID",
					"example": "null",
					"x-mapField": "credit_id",
					"format": "int32"
				},
				"updated": {
					"type": "string",
					"description": "Unix timestamp of update",
					"example": "\/Date(1234585)\/",
					"x-mapField": "lastUpdated",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "Is it active? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "active",
					"format": "int32"
				},
				"Payments": {
					"$ref": "#\/definitions\/Payments",
					"x-not-in-post": false
				},
				"LoanCredits": {
					"$ref": "#\/definitions\/LoanCredits",
					"x-not-in-post": false
				}
			}
		},
		"ChargeOffTx": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "The type of the target entity",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "ID of the target entity",
					"example": "91",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"date": {
					"type": "string",
					"description": "Date of the transaction",
					"example": "\/Date(124258356)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"type": {
					"type": "string",
					"description": "Type of transaction",
					"example": "transaction.type.deposit",
					"x-mapField": "type"
				},
				"paymentId": {
					"type": "integer",
					"description": "Target payment ID",
					"example": "112",
					"x-mapField": "payment_id",
					"format": "int32"
				},
				"creditId": {
					"type": "integer",
					"description": "Target credit ID",
					"example": "null",
					"x-mapField": "credit_id",
					"format": "int32"
				},
				"chargeOffAmount": {
					"type": "number",
					"description": "Charge Off amount",
					"example": "17.00",
					"x-mapField": "charge_off_amount",
					"format": "float"
				},
				"recoveryAmount": {
					"type": "number",
					"description": "Recovery Amount",
					"example": "0.00",
					"x-mapField": "recovery_amount",
					"format": "float"
				},
				"chargeOffBalance": {
					"type": "number",
					"description": "Charge Off Balance",
					"example": "17.00",
					"x-mapField": "charge_off_balance",
					"format": "float"
				},
				"sortOrder": {
					"type": "integer",
					"description": "Sort Order",
					"example": "1",
					"x-mapField": "sort_order",
					"format": "int32"
				}
			}
		},
		"APDAdjustments": {
			"required": [ "date", "type" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "The target entity type",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "The target entity ID",
					"example": "4",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "The target modification ID",
					"example": "2",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"date": {
					"type": "string",
					"description": "The adjustment date (Unix timestamp)",
					"example": "\/Date(1654894321)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"type": {
					"type": "string",
					"description": "The adjustment type",
					"example": "loan.apd.adjust.type.zero",
					"x-mapField": "type",
					"enum": [ "loan.apd.adjust.type.fixed", "loan.apd.adjust.type.zero" ],
					"x-see": true
				},
				"dollarAmount": {
					"type": "number",
					"description": "The dollar amount to adjust by",
					"example": "10.00",
					"x-mapField": "dollar_amount",
					"format": "float"
				}
			}
		},
		"DPDAdjustments": {
			"required": [ "date" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Type of target entity",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "ID of the target entity",
					"example": "3",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "Modification ID",
					"example": "1",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"date": {
					"type": "string",
					"description": "Creation date of the adjustment as a Unix timstamp",
					"example": "\/Date(12429574400)\/",
					"x-mapField": "date",
					"format": "date-time"
				}
			}
		},
		"restrictionGroups": {
			"required": [ "name", "description" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"access": {
					"type": "integer",
					"x-mapField": "access",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"x-mapField": "name"
				},
				"description": {
					"type": "string",
					"x-mapField": "description"
				},
				"rule": {
					"type": "string",
					"x-mapField": "rule"
				},
				"uiState": {
					"type": "string",
					"x-mapField": "ui_state"
				},
				"active": {
					"type": "integer",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"x-mapField": "created",
					"format": "date-time"
				},
				"Users": {
					"$ref": "#\/definitions\/Users",
					"x-not-in-post": false
				},
				"RestrictionGroupEntries": {
					"$ref": "#\/definitions\/RestrictionGroupEntries",
					"x-not-in-post": false
				}
			}
		},
		"RestrictionGroupEntries": {
			"required": [ "entityType", "access" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"restrictionGroupId": {
					"type": "integer",
					"x-mapField": "restriction_group_id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"x-mapField": "entity_type"
				},
				"access": {
					"type": "integer",
					"x-mapField": "access",
					"format": "int32"
				},
				"rule": {
					"type": "string",
					"x-mapField": "rule"
				},
				"uiState": {
					"type": "string",
					"x-mapField": "ui_state"
				},
				"errorMessage": {
					"type": "string",
					"x-mapField": "error_message"
				},
				"active": {
					"type": "integer",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"x-mapField": "created",
					"format": "date-time"
				},
				"lastUpdated": {
					"type": "string",
					"readOnly": true,
					"x-mapField": "lastUpdated",
					"format": "date-time"
				}
			}
		},
		"QuickNotes": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"noteName": {
					"type": "string",
					"description": "Name of the QuickNote",
					"example": "Quick Note 1",
					"x-mapField": "note_name"
				},
				"noteCategoryId": {
					"type": "integer",
					"description": "Category of the QuickNote",
					"example": "1",
					"x-mapField": "note_category_id",
					"format": "int32"
				},
				"noteContent": {
					"type": "string",
					"description": "Content of the QuickNote",
					"example": "Text",
					"x-mapField": "note_content"
				},
				"entityType": {
					"type": "string",
					"x-mapField": "entity_type"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date of creation as a Unix Timestamp (Read Only)",
					"example": "\/Date(142456155315)\/",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"description": "If the QuickNote is active (1:Yes 0:No)",
					"example": "1",
					"format": "int32"
				}
			}
		},
		"RuleAppliedLoanSettings": {
			"required": [ "name", "rule", "repoDate", "repoDateSetting", "closedDate", "closedDateSetting", "liquidationDate", "liquidationDateSetting", "followUpDateSetting" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"x-mapField": "name"
				},
				"rule": {
					"type": "string",
					"x-mapField": "rule"
				},
				"cardFeeAmount": {
					"type": "number",
					"x-mapField": "card_fee_amount",
					"format": "float"
				},
				"cardFeeType": {
					"type": "string",
					"x-mapField": "card_fee_type"
				},
				"cardFeePercent": {
					"type": "number",
					"x-mapField": "card_fee_percent",
					"format": "float"
				},
				"agent": {
					"type": "integer",
					"x-mapField": "agent",
					"format": "int32"
				},
				"loanStatusId": {
					"type": "integer",
					"x-mapField": "loan_status_id",
					"format": "int32"
				},
				"loanSubStatusId": {
					"type": "integer",
					"x-mapField": "loan_sub_status_id",
					"format": "int32"
				},
				"sourceCompany": {
					"type": "integer",
					"x-mapField": "source_company",
					"format": "int32"
				},
				"eBilling": {
					"type": "integer",
					"x-mapField": "ebilling",
					"format": "int32"
				},
				"ECOACode": {
					"type": "string",
					"x-mapField": "ecoa_code",
					"enum": [ "loan.ecoacodes.0", "loan.ecoacodes.1", "loan.ecoacodes.2", "loan.ecoacodes.7", "loan.ecoacodes.A", "loan.ecoacodes.T", "loan.ecoacodes.X", "loan.ecoacodes.Z" ],
					"x-see": true
				},
				"coBuyerECOACode": {
					"type": "string",
					"x-mapField": "co_ecoa_code",
					"enum": [ "loan.ecoacodes.0", "loan.ecoacodes.1", "loan.ecoacodes.2", "loan.ecoacodes.7", "loan.ecoacodes.A", "loan.ecoacodes.T", "loan.ecoacodes.X", "loan.ecoacodes.Z" ],
					"x-see": true
				},
				"creditStatus": {
					"type": "string",
					"x-mapField": "credit_status",
					"enum": [ "loan.creditstatus.0", "loan.creditstatus.11", "loan.creditstatus.13", "loan.creditstatus.5", "loan.creditstatus.61", "loan.creditstatus.62", "loan.creditstatus.63", "loan.creditstatus.64", "loan.creditstatus.71", "loan.creditstatus.78", "loan.creditstatus.80", "loan.creditstatus.82", "loan.creditstatus.83", "loan.creditstatus.84", "loan.creditstatus.93", "loan.creditstatus.95", "loan.creditstatus.96", "loan.creditstatus.97", "loan.creditstatus.99", "loan.creditstatus.DA", "loan.creditstatus.DF" ],
					"x-see": true
				},
				"creditBureau": {
					"type": "string",
					"x-mapField": "credit_bureau",
					"enum": [ "loan.creditbureau.00", "loan.creditbureau.01", "loan.creditbureau.02", "loan.creditbureau.03", "loan.creditbureau.04", "loan.creditbureau.06", "loan.creditbureau.08", "loan.creditbureau.0A", "loan.creditbureau.0G", "loan.creditbureau.11", "loan.creditbureau.12", "loan.creditbureau.13", "loan.creditbureau.15", "loan.creditbureau.17", "loan.creditbureau.18", "loan.creditbureau.1C", "loan.creditbureau.20", "loan.creditbureau.22", "loan.creditbureau.23", "loan.creditbureau.26", "loan.creditbureau.3A", "loan.creditbureau.47", "loan.creditbureau.5A", "loan.creditbureau.5B", "loan.creditbureau.6A", "loan.creditbureau.6B", "loan.creditbureau.6D", "loan.creditbureau.7A", "loan.creditbureau.89", "loan.creditbureau.90", "loan.creditbureau.91" ],
					"x-see": true
				},
				"reportingType": {
					"type": "string",
					"x-mapField": "reporting_type",
					"enum": [ "loan.reportingtype.C", "loan.reportingtype.I", "loan.reportingtype.M", "loan.reportingtype.O", "loan.reportingtype.R" ],
					"x-see": true
				},
				"secured": {
					"type": "integer",
					"x-mapField": "secured",
					"format": "int32"
				},
				"autopayEnabled": {
					"type": "integer",
					"x-mapField": "autopay_enabled",
					"format": "int32"
				},
				"repoDate": {
					"type": "integer",
					"x-mapField": "repo_date",
					"format": "int32"
				},
				"repoDateSetting": {
					"type": "string",
					"x-mapField": "repo_date_setting"
				},
				"closedDate": {
					"type": "integer",
					"x-mapField": "closed_date",
					"format": "int32"
				},
				"closedDateSetting": {
					"type": "string",
					"x-mapField": "closed_date_setting"
				},
				"liquidationDate": {
					"type": "integer",
					"x-mapField": "liquidation_date",
					"format": "int32"
				},
				"liquidationDateSetting": {
					"type": "string",
					"x-mapField": "liquidation_date_setting"
				},
				"followUpDate": {
					"type": "integer",
					"x-mapField": "followup_date",
					"format": "int32"
				},
				"followUpDateSetting": {
					"type": "string",
					"x-mapField": "followup_date_setting"
				},
				"isStoplightManuallySet": {
					"type": "integer",
					"x-mapField": "is_stoplight_manually_set",
					"format": "int32"
				},
				"deletePortfolios": {
					"type": "integer",
					"x-mapField": "delete_portfolios",
					"format": "int32"
				},
				"enrollNewLoans": {
					"type": "integer",
					"x-mapField": "enroll_new_loans",
					"format": "int32"
				},
				"enrollExistingLoans": {
					"type": "integer",
					"x-mapField": "enroll_existing_loans",
					"format": "int32"
				},
				"enabled": {
					"type": "integer",
					"x-mapField": "enabled",
					"format": "int32"
				},
				"evalInRealTime": {
					"type": "integer",
					"x-mapField": "eval_real_time",
					"format": "int32"
				},
				"evalInDailyMaint": {
					"type": "integer",
					"x-mapField": "eval_in_daily_maint",
					"format": "int32"
				},
				"execPreActivation": {
					"type": "integer",
					"x-mapField": "exec_pre_activation",
					"format": "int32"
				},
				"forcing": {
					"type": "integer",
					"x-mapField": "forcing",
					"format": "int32"
				},
				"order": {
					"type": "integer",
					"x-mapField": "global_order",
					"format": "int32"
				},
				"loanEnabled": {
					"type": "integer",
					"format": "int32"
				},
				"merchantProcessorGroupId": {
					"type": "string",
					"x-mapField": "merchant_processor_group_id"
				},
				"LoanStatus": {
					"$ref": "#\/definitions\/LoanStatus",
					"x-not-in-post": false
				},
				"LoanSubStatus": {
					"$ref": "#\/definitions\/LoanSubStatus",
					"x-not-in-post": false
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": false
				},
				"Portfolios": {
					"$ref": "#\/definitions\/Portfolios",
					"x-not-in-post": false
				},
				"PortfoliosToDelete": {
					"$ref": "#\/definitions\/PortfoliosToDelete",
					"x-not-in-post": false
				},
				"SubPortfolios": {
					"$ref": "#\/definitions\/SubPortfolios",
					"x-not-in-post": false
				},
				"SubPortfoliosToDelete": {
					"$ref": "#\/definitions\/SubPortfoliosToDelete",
					"x-not-in-post": false
				}
			}
		},
		"RuleAppliedChargeOff": {
			"required": [ "name", "rule", "info" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"x-mapField": "name"
				},
				"rule": {
					"type": "string",
					"x-mapField": "rule"
				},
				"paymentTypeId": {
					"type": "integer",
					"x-mapField": "payment_type_id",
					"format": "int32"
				},
				"amountSetting": {
					"type": "string",
					"x-mapField": "amount_setting"
				},
				"amount": {
					"type": "string",
					"x-mapField": "amount"
				},
				"early": {
					"type": "integer",
					"x-mapField": "early",
					"format": "int32"
				},
				"info": {
					"type": "string",
					"x-mapField": "info"
				},
				"enrollNewLoans": {
					"type": "integer",
					"x-mapField": "enroll_new_loans",
					"format": "int32"
				},
				"enrollExistingLoans": {
					"type": "integer",
					"x-mapField": "enroll_existing_loans",
					"format": "int32"
				},
				"enabled": {
					"type": "integer",
					"x-mapField": "enabled",
					"format": "int32"
				},
				"evalInRealTime": {
					"type": "integer",
					"x-mapField": "eval_real_time",
					"format": "int32"
				},
				"evalInDailyMaint": {
					"type": "integer",
					"x-mapField": "eval_in_daily_maint",
					"format": "int32"
				},
				"forcing": {
					"type": "integer",
					"x-mapField": "forcing",
					"format": "int32"
				},
				"isPayment": {
					"type": "integer",
					"x-mapField": "is_payment",
					"format": "int32"
				},
				"creditCategory": {
					"type": "integer",
					"x-mapField": "credit_category",
					"format": "int32"
				},
				"resetPastDue": {
					"type": "integer",
					"x-mapField": "reset_pastdue",
					"format": "int32"
				},
				"order": {
					"type": "integer",
					"x-mapField": "global_order",
					"format": "int32"
				},
				"applyUnderPayDiffAs": {
					"type": "string",
					"x-mapField": "under_pay_diff",
					"enum": [ "payoff.applydiff.chargeoff", "payoff.applydiff.credit" ],
					"x-see": true
				},
				"applyOverPayDiffAs": {
					"type": "string",
					"x-mapField": "over_pay_diff",
					"enum": [ "payoff.applydiff.alt.advance", "payoff.applydiff.alt.charge" ],
					"x-see": true
				},
				"advancementCategory": {
					"type": "integer",
					"x-mapField": "advancement_category",
					"format": "int32"
				},
				"loanEnabled": {
					"type": "integer",
					"format": "int32"
				},
				"chargeOff": {
					"type": "integer",
					"x-mapField": "charge_off",
					"format": "int32"
				},
				"transactionDate": {
					"type": "integer",
					"x-mapField": "transaction_date",
					"format": "int32"
				},
				"transactionDateSetting": {
					"type": "string",
					"x-mapField": "transaction_date_setting"
				}
			}
		},
		"RuleAppliedAPDReset": {
			"required": [ "name", "rule", "amount", "amountType", "amountSetting", "dpdReset", "daysFromTodaySetting" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"x-mapField": "name"
				},
				"rule": {
					"type": "string",
					"x-mapField": "rule"
				},
				"amount": {
					"type": "number",
					"x-mapField": "amount",
					"format": "float"
				},
				"amountType": {
					"type": "string",
					"x-mapField": "amount_type",
					"enum": [ "loan.apd.adjust.amount.type.1", "loan.apd.adjust.amount.type.2" ],
					"x-see": true
				},
				"amountSetting": {
					"type": "string",
					"x-mapField": "amount_setting"
				},
				"dpdReset": {
					"type": "number",
					"x-mapField": "dpd_reset",
					"format": "float"
				},
				"daysFromToday": {
					"type": "integer",
					"x-mapField": "days_from_today",
					"format": "int32"
				},
				"daysFromTodaySetting": {
					"type": "string",
					"x-mapField": "days_from_today_setting"
				},
				"adjustmentType": {
					"type": "string",
					"x-mapField": "adjustment_type"
				},
				"enrollNewLoans": {
					"type": "integer",
					"x-mapField": "enroll_new_loans",
					"format": "int32"
				},
				"enrollExistingLoans": {
					"type": "integer",
					"x-mapField": "enroll_existing_loans",
					"format": "int32"
				},
				"enabled": {
					"type": "integer",
					"x-mapField": "enabled",
					"format": "int32"
				},
				"evalInRealTime": {
					"type": "integer",
					"x-mapField": "eval_real_time",
					"format": "int32"
				},
				"evalInDailyMaint": {
					"type": "integer",
					"x-mapField": "eval_in_daily_maint",
					"format": "int32"
				},
				"forcing": {
					"type": "integer",
					"x-mapField": "forcing",
					"format": "int32"
				},
				"order": {
					"type": "integer",
					"x-mapField": "global_order",
					"format": "int32"
				},
				"loanEnabled": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"RuleAppliedChecklists": {
			"required": [ "name", "rule" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"x-mapField": "name"
				},
				"rule": {
					"type": "string",
					"x-mapField": "rule"
				},
				"enrollNewLoans": {
					"type": "integer",
					"x-mapField": "enroll_new_loans",
					"format": "int32"
				},
				"enrollExistingLoans": {
					"type": "integer",
					"x-mapField": "enroll_existing_loans",
					"format": "int32"
				},
				"enabled": {
					"type": "integer",
					"x-mapField": "enabled",
					"format": "int32"
				},
				"evalInRealTime": {
					"type": "integer",
					"x-mapField": "eval_real_time",
					"format": "int32"
				},
				"evalInDailyMaint": {
					"type": "integer",
					"x-mapField": "eval_in_daily_maint",
					"format": "int32"
				},
				"execPreActivation": {
					"type": "integer",
					"x-mapField": "exec_pre_activation",
					"format": "int32"
				},
				"forcing": {
					"type": "integer",
					"x-mapField": "forcing",
					"format": "int32"
				},
				"order": {
					"type": "integer",
					"x-mapField": "global_order",
					"format": "int32"
				},
				"loanEnabled": {
					"type": "integer",
					"format": "int32"
				},
				"ChecklistItemValues": {
					"$ref": "#\/definitions\/ChecklistItemValues",
					"x-not-in-post": false
				}
			}
		},
		"RuleAppliedChangeDueDates": {
			"required": [ "name", "rule", "frequency", "dueDateToModify", "dueDateBase", "days" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"x-mapField": "name"
				},
				"rule": {
					"type": "string",
					"x-mapField": "rule"
				},
				"frequency": {
					"type": "string",
					"x-mapField": "frequency"
				},
				"dueDateToModify": {
					"type": "string",
					"x-mapField": "due_date_modify"
				},
				"dueDateBase": {
					"type": "string",
					"x-mapField": "due_date_base"
				},
				"days": {
					"type": "integer",
					"x-mapField": "days",
					"format": "int32"
				},
				"enrollNewLoans": {
					"type": "integer",
					"x-mapField": "enroll_new_loans",
					"format": "int32"
				},
				"enrollExistingLoans": {
					"type": "integer",
					"x-mapField": "enroll_existing_loans",
					"format": "int32"
				},
				"enabled": {
					"type": "integer",
					"x-mapField": "enabled",
					"format": "int32"
				},
				"evalInRealTime": {
					"type": "integer",
					"x-mapField": "eval_real_time",
					"format": "int32"
				},
				"evalInDailyMaint": {
					"type": "integer",
					"x-mapField": "eval_in_daily_maint",
					"format": "int32"
				},
				"forcing": {
					"type": "integer",
					"x-mapField": "forcing",
					"format": "int32"
				},
				"order": {
					"type": "integer",
					"x-mapField": "global_order",
					"format": "int32"
				},
				"loanEnabled": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"RuleAppliedStopInterest": {
			"required": [ "name", "rule", "daysFromToday", "daysFromTodaySetting", "type" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"x-mapField": "name"
				},
				"rule": {
					"type": "string",
					"x-mapField": "rule"
				},
				"daysFromToday": {
					"type": "integer",
					"x-mapField": "days_from_today",
					"format": "int32"
				},
				"daysFromTodaySetting": {
					"type": "string",
					"x-mapField": "days_from_today_setting"
				},
				"type": {
					"type": "string",
					"description": "Type of the interest stop\/resume",
					"example": "loan.stopInterestType.resume",
					"x-mapField": "type",
					"enum": [ "loan.stopInterestType.resume", "loan.stopInterestType.suspend" ],
					"x-see": true
				},
				"enrollNewLoans": {
					"type": "integer",
					"x-mapField": "enroll_new_loans",
					"format": "int32"
				},
				"enrollExistingLoans": {
					"type": "integer",
					"x-mapField": "enroll_existing_loans",
					"format": "int32"
				},
				"enabled": {
					"type": "integer",
					"x-mapField": "enabled",
					"format": "int32"
				},
				"evalInRealTime": {
					"type": "integer",
					"x-mapField": "eval_real_time",
					"format": "int32"
				},
				"evalInDailyMaint": {
					"type": "integer",
					"x-mapField": "eval_in_daily_maint",
					"format": "int32"
				},
				"forcing": {
					"type": "integer",
					"x-mapField": "forcing",
					"format": "int32"
				},
				"order": {
					"type": "integer",
					"x-mapField": "global_order",
					"format": "int32"
				},
				"loanEnabled": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"RuleAppliedAccountTools": {
			"required": [ "name", "rule" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"x-mapField": "name"
				},
				"rule": {
					"type": "string",
					"x-mapField": "rule"
				},
				"accountActivation": {
					"type": "integer",
					"x-mapField": "account_activation",
					"format": "int32"
				},
				"accountDeactivation": {
					"type": "integer",
					"x-mapField": "account_deactivation",
					"format": "int32"
				},
				"accountArchive": {
					"type": "integer",
					"x-mapField": "account_archive",
					"format": "int32"
				},
				"accountDelete": {
					"type": "integer",
					"x-mapField": "account_delete",
					"format": "int32"
				},
				"enrollNewLoans": {
					"type": "integer",
					"x-mapField": "enroll_new_loans",
					"format": "int32"
				},
				"enrollExistingLoans": {
					"type": "integer",
					"x-mapField": "enroll_existing_loans",
					"format": "int32"
				},
				"enabled": {
					"type": "integer",
					"x-mapField": "enabled",
					"format": "int32"
				},
				"evalInRealTime": {
					"type": "integer",
					"x-mapField": "eval_real_time",
					"format": "int32"
				},
				"evalInDailyMaint": {
					"type": "integer",
					"x-mapField": "eval_in_daily_maint",
					"format": "int32"
				},
				"execPreActivation": {
					"type": "integer",
					"x-mapField": "exec_pre_activation",
					"format": "int32"
				},
				"forcing": {
					"type": "integer",
					"x-mapField": "forcing",
					"format": "int32"
				},
				"order": {
					"type": "integer",
					"x-mapField": "global_order",
					"format": "int32"
				},
				"loanEnabled": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"RuleAppliedCustomerTools": {
			"required": [ "name", "rule", "customerRole" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"x-mapField": "name"
				},
				"rule": {
					"type": "string",
					"x-mapField": "rule"
				},
				"customerRole": {
					"type": "string",
					"x-mapField": "customer_role",
					"enum": [ "loan.customerRole.additional", "loan.customerRole.primary", "loan.customerRole.secondary", "loan.customerRole.unassigned" ],
					"x-see": true
				},
				"validatePrimaryAddresses": {
					"type": "integer",
					"x-mapField": "validate_primary_addresses",
					"format": "int32"
				},
				"validateMailingAddresses": {
					"type": "integer",
					"x-mapField": "validate_mailing_addresses",
					"format": "int32"
				},
				"pullCredit": {
					"type": "integer",
					"x-mapField": "pull_credit",
					"format": "int32"
				},
				"pullOfac": {
					"type": "integer",
					"x-mapField": "pull_ofac",
					"format": "int32"
				},
				"validatePhoneCarrier": {
					"type": "integer",
					"x-mapField": "validate_phone_carrier",
					"format": "int32"
				},
				"lookupSocialProfile": {
					"type": "integer",
					"x-mapField": "lookup_social_profile",
					"format": "int32"
				},
				"enrollNewLoans": {
					"type": "integer",
					"x-mapField": "enroll_new_loans",
					"format": "int32"
				},
				"enrollExistingLoans": {
					"type": "integer",
					"x-mapField": "enroll_existing_loans",
					"format": "int32"
				},
				"enabled": {
					"type": "integer",
					"x-mapField": "enabled",
					"format": "int32"
				},
				"evalInRealTime": {
					"type": "integer",
					"x-mapField": "eval_real_time",
					"format": "int32"
				},
				"evalInDailyMaint": {
					"type": "integer",
					"x-mapField": "eval_in_daily_maint",
					"format": "int32"
				},
				"execPreActivation": {
					"type": "integer",
					"x-mapField": "exec_pre_activation",
					"format": "int32"
				},
				"forcing": {
					"type": "integer",
					"x-mapField": "forcing",
					"format": "int32"
				},
				"order": {
					"type": "integer",
					"x-mapField": "global_order",
					"format": "int32"
				},
				"loanEnabled": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"RuleAppliedAutopay": {
			"required": [ "name", "rule" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"x-mapField": "name"
				},
				"rule": {
					"type": "string",
					"x-mapField": "rule"
				},
				"autopayName": {
					"type": "string",
					"description": "The name of the Autopay",
					"example": "Autopay 1",
					"x-mapField": "autopay_name"
				},
				"type": {
					"type": "string",
					"description": "The type of the Autopay",
					"example": "autopay.type.single"
				},
				"baseDate": {
					"type": "string",
					"description": "The appliction Base date of the autopay (Unix Timestamp)",
					"example": "loan.autopay.ra.basedate.currentDate",
					"x-mapField": "base_date"
				},
				"applyDays": {
					"type": "integer",
					"description": "Days to calculate Apply Date based in the Apply Based Date",
					"example": "0",
					"x-mapField": "apply_days",
					"format": "int32"
				},
				"processDays": {
					"type": "integer",
					"description": "The process Date of the autopay (Unix timestamp)",
					"example": "\/Date(1654687496)\/",
					"x-mapField": "process_days",
					"format": "int32"
				},
				"processTime": {
					"type": "string",
					"description": "The process Date of the autopay (Unix timestamp)",
					"example": "\/Date(1654687496)\/",
					"x-mapField": "process_time"
				},
				"amountType": {
					"type": "string",
					"description": "The amount type to pay",
					"example": "autopay.amountType.static",
					"x-mapField": "amount_type"
				},
				"amount": {
					"type": "number",
					"description": "The amount to pay",
					"example": "200.00",
					"format": "double"
				},
				"paymentTypeId": {
					"type": "integer",
					"readOnly": true,
					"x-mapField": "payment_type_id",
					"format": "int32"
				},
				"processCurrent": {
					"type": "integer",
					"description": "Process if the loan is current? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "process_current",
					"format": "int32"
				},
				"chargeServiceFee": {
					"type": "integer",
					"description": "Charge service fee? (1:Yes 0:No(",
					"example": "0",
					"x-mapField": "charge_service_fee",
					"format": "int32"
				},
				"retryDays": {
					"type": "integer",
					"description": "Number of days to retry",
					"example": "5",
					"x-mapField": "retry_days",
					"format": "int32"
				},
				"retryCount": {
					"type": "integer",
					"readOnly": true,
					"description": "Current number of retries (Read Only)",
					"example": "4",
					"x-mapField": "retry_count",
					"format": "int32"
				},
				"postPaymentUpdate": {
					"type": "integer",
					"description": "Post an update payment upon success (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "post_payment_update_apply_date",
					"format": "int32"
				},
				"recurringFrequency": {
					"type": "string",
					"description": "Recurring frequency",
					"example": "autopay.recurringFrequency.monthly",
					"x-mapField": "recurring_frequency"
				},
				"recurringPeriods": {
					"type": "integer",
					"description": "Number of recurring periods",
					"example": "2",
					"x-mapField": "recurring_periods",
					"format": "int32"
				},
				"recurringDateOption": {
					"type": "string",
					"x-mapField": "recurring_date_option"
				},
				"schedulingType": {
					"type": "string",
					"x-mapField": "scheduling_type"
				},
				"lastDayOfMonthEnabled": {
					"type": "integer",
					"description": "Pay on the last day of the month (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "last_dom_enabled",
					"format": "int32"
				},
				"daysInPeriod": {
					"type": "string",
					"description": "Number of days in period",
					"example": "null",
					"x-mapField": "days_in_period"
				},
				"paymentExtraTowards": {
					"type": "string",
					"description": "What should extra be paid towards?",
					"example": "payment.extra.tx.principal",
					"x-mapField": "payment_extra_towards"
				},
				"paymentFee": {
					"type": "number",
					"description": "Fee amount to charge for processing",
					"example": "1.00",
					"x-mapField": "payment_fee",
					"format": "double"
				},
				"paymentProfile": {
					"type": "string",
					"example": "loan.autopay.ra.paymentprofile.primary",
					"x-mapField": "payment_profile"
				},
				"paymentMethodAuthType": {
					"type": "string",
					"description": "Authorization type",
					"example": "null",
					"x-mapField": "payment_method_auth_type"
				},
				"payoffAdjustment": {
					"type": "integer",
					"x-mapField": "payoff_adjustment",
					"format": "int32"
				},
				"processZeroOrNegativeBalance": {
					"type": "integer",
					"x-mapField": "process_zero_or_negative_balance",
					"format": "int32"
				},
				"chargeOffRecovery": {
					"type": "integer",
					"description": "Is there a charge off recovery? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "charge_off_recovery",
					"format": "int32"
				},
				"processorId": {
					"type": "integer",
					"x-mapField": "processor_id",
					"format": "int32"
				},
				"cancelAutopays": {
					"type": "integer",
					"x-mapField": "cancel_autopays",
					"format": "int32"
				},
				"enrollNewLoans": {
					"type": "integer",
					"x-mapField": "enroll_new_loans",
					"format": "int32"
				},
				"enrollExistingLoans": {
					"type": "integer",
					"x-mapField": "enroll_existing_loans",
					"format": "int32"
				},
				"enabled": {
					"type": "integer",
					"x-mapField": "enabled",
					"format": "int32"
				},
				"evalInRealTime": {
					"type": "integer",
					"x-mapField": "eval_real_time",
					"format": "int32"
				},
				"evalInDailyMaint": {
					"type": "integer",
					"x-mapField": "eval_in_daily_maint",
					"format": "int32"
				},
				"execPreActivation": {
					"type": "integer",
					"x-mapField": "exec_pre_activation",
					"format": "int32"
				},
				"forcing": {
					"type": "integer",
					"x-mapField": "forcing",
					"format": "int32"
				},
				"order": {
					"type": "integer",
					"x-mapField": "global_order",
					"format": "int32"
				},
				"loanEnabled": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"RuleAppliedLoanSetup": {
			"required": [ "name", "rule", "loanRateType", "loanClass", "loanType", "discountSplit", "paymentFrequency", "calcType", "daysInYear", "interestApplication", "begEnd", "firstPeriodDays", "firstDayInterest", "discountCalc", "dueDateOnLastDOM", "dueDatesOnBusinessDays", "daysInPeriod", "roundDecimals", "lastAsFinal", "nddCalc", "endInterest", "feesPaidBy", "useInterestTiers", "lateFeeType", "lateFeeCalc", "lateFeePercentBase", "paymentDateApp" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"x-mapField": "name"
				},
				"rule": {
					"type": "string",
					"x-mapField": "rule"
				},
				"loanAmount": {
					"type": "number",
					"description": "Loan Amount",
					"example": "12000.00",
					"x-mapField": "loan_amount",
					"format": "float"
				},
				"discount": {
					"type": "number",
					"description": "Discount",
					"example": "500.00",
					"x-mapField": "discount",
					"format": "float"
				},
				"underwriting": {
					"type": "number",
					"description": "Underwriting",
					"example": "0.00",
					"x-mapField": "underwriting",
					"format": "float"
				},
				"loanRate": {
					"type": "number",
					"description": "Loan Rate",
					"example": "12.0212",
					"x-mapField": "loan_rate",
					"format": "float"
				},
				"loanRateType": {
					"type": "string",
					"description": "Loan Rate type",
					"example": "loan.rateType.annually",
					"x-mapField": "loan_rate_type",
					"enum": [ "loan.rateType.annually", "loan.rateType.biweekly", "loan.rateType.monthly", "loan.rateType.semiannually", "loan.rateType.semimonthly", "loan.rateType.weekly" ],
					"x-see": true
				},
				"loanTerm": {
					"type": "number",
					"description": "Loan Term",
					"example": "36",
					"x-mapField": "loan_term",
					"format": "float"
				},
				"moneyFactor": {
					"type": "number",
					"description": "Money Factor (for leases)",
					"example": ".0012324",
					"x-mapField": "money_factor",
					"format": "float"
				},
				"residual": {
					"type": "number",
					"description": "Residual",
					"example": "0.00",
					"x-mapField": "residual",
					"format": "float"
				},
				"contractDate": {
					"type": "integer",
					"description": "Contract date of the loan (Unix timestamp)",
					"example": "\/Date(12348324859)\/",
					"x-mapField": "contract_date",
					"x-isDateType": true,
					"x-dateFormat": "Y-m-d",
					"format": "int32"
				},
				"firstPaymentDate": {
					"type": "integer",
					"description": "First payment date of the loan (Unix timestamp)",
					"example": "\/Date(12348324859)\/",
					"x-mapField": "first_payment_date",
					"x-isDateType": true,
					"x-dateFormat": "Y-m-d",
					"format": "int32"
				},
				"amountDown": {
					"type": "number",
					"description": "Amount down",
					"example": "0.00",
					"x-mapField": "amount_down",
					"format": "float"
				},
				"reserve": {
					"type": "number",
					"description": "Amount Reserved",
					"example": "5.00",
					"x-mapField": "reserve",
					"format": "float"
				},
				"salesPrice": {
					"type": "number",
					"description": "Sales Price",
					"example": "12000",
					"x-mapField": "sales_price",
					"format": "float"
				},
				"gap": {
					"type": "number",
					"description": "GAP Insurance",
					"example": "1120.",
					"x-mapField": "gap",
					"format": "float"
				},
				"warranty": {
					"type": "number",
					"description": "Warranty",
					"example": "2500",
					"x-mapField": "warranty",
					"format": "float"
				},
				"dealerProfit": {
					"type": "number",
					"description": "Dealer Profit",
					"example": "1000",
					"x-mapField": "dealer_profit",
					"format": "float"
				},
				"taxes": {
					"type": "number",
					"description": "Taxes",
					"example": "125.25",
					"x-mapField": "taxes",
					"format": "float"
				},
				"creditLimit": {
					"type": "number",
					"description": "Credit Limit",
					"example": "15500",
					"x-mapField": "credit_limit",
					"format": "float"
				},
				"reportingCreditLimit": {
					"type": "number",
					"description": "Credit limit to report to Credit Buraeu",
					"example": "15500",
					"x-mapField": "reporting_credit_limit",
					"format": "float"
				},
				"loanClass": {
					"type": "string",
					"description": "Loan class",
					"example": "loan.class.carLoan",
					"x-mapField": "loan_class",
					"enum": [ "loan.class.carLoan", "loan.class.consumer", "loan.class.mortgage", "loan.class.other" ],
					"x-see": true
				},
				"loanType": {
					"type": "string",
					"description": "Loan type",
					"example": "loan.type.installment",
					"x-mapField": "loan_type",
					"enum": [ "loan.type.creditLimit", "loan.type.flooring", "loan.type.installment", "loan.type.lease" ],
					"x-see": true
				},
				"discountSplit": {
					"type": "integer",
					"description": "Split the discount? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "discount_split",
					"format": "int32"
				},
				"paymentFrequency": {
					"type": "string",
					"description": "Payment frequency",
					"example": "loan.frequency.monthly",
					"x-mapField": "payment_frequency",
					"enum": [ "loan.frequency.annually", "loan.frequency.biWeekly", "loan.frequency.custom", "loan.frequency.monthly", "loan.frequency.quarterly", "loan.frequency.semiannually", "loan.frequency.semiMonthly", "loan.frequency.semiMonthlyAlt", "loan.frequency.single", "loan.frequency.weekly" ],
					"x-see": true
				},
				"calcType": {
					"type": "string",
					"description": "Calculation type",
					"example": "loan.calcType.simpleInterest",
					"x-mapField": "calc_type"
				},
				"daysInYear": {
					"type": "string",
					"description": "Days in year calculation",
					"example": "loan.daysInYear.frequency",
					"x-mapField": "days_in_year",
					"enum": [ "loan.daysInYear.actual", "loan.daysInYear.frequency" ],
					"x-see": true
				},
				"interestApplication": {
					"type": "string",
					"description": "Interest Application",
					"example": "loan.interestApplication.betweenTransactions",
					"x-mapField": "interest_application",
					"enum": [ "loan.interestApplication.betweenPeriods", "loan.interestApplication.betweenTransactions" ],
					"x-see": true
				},
				"begEnd": {
					"type": "string",
					"description": "Beg\/End",
					"example": "loan.begend.ed",
					"x-mapField": "beg_end",
					"enum": [ "loan.begend.beg", "loan.begend.end" ],
					"x-see": true
				},
				"firstPeriodDays": {
					"type": "string",
					"description": "Number of days in the first period",
					"example": "loan.daysinperiod.24",
					"x-mapField": "first_period_days",
					"enum": [ "loan.firstPeriodDays.actual", "loan.firstPeriodDays.forceRegular", "loan.firstPeriodDays.frequency" ],
					"x-see": true
				},
				"firstDayInterest": {
					"type": "integer",
					"description": "First day interest (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "first_day_interest",
					"format": "int32"
				},
				"discountCalc": {
					"type": "string",
					"description": "Discount calculation",
					"example": "loan.discountCalc.straightLine",
					"x-mapField": "discount_calc",
					"enum": [ "loan.discountCalc.full", "loan.discountCalc.percentage", "loan.discountCalc.percentFixed", "loan.discountCalc.rebalancing", "loan.discountCalc.straightLine" ],
					"x-see": true
				},
				"diyAlt": {
					"type": "integer",
					"description": "DIY Alternate (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "diy_alt",
					"format": "int32"
				},
				"dueDateOnLastDOM": {
					"type": "integer",
					"description": "Due dates fall on the last day of each month? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "due_date_on_last_dom",
					"format": "int32"
				},
				"dueDatesOnBusinessDays": {
					"type": "string",
					"description": "Due dates fall only on business days?",
					"example": "loan.businessduedates.addDays",
					"x-mapField": "due_dates_on_business_days",
					"enum": [ "loan.businessduedates.addDays", "loan.businessduedates.disabled", "loan.businessduedates.subtractDays" ],
					"x-see": true
				},
				"daysInPeriod": {
					"type": "string",
					"description": "Number of days in a period",
					"example": "loan.daysinperiod.24",
					"x-mapField": "days_in_period",
					"enum": [ "loan.daysinperiod.1", "loan.daysinperiod.10", "loan.daysinperiod.12", "loan.daysinperiod.120", "loan.daysinperiod.13", "loan.daysinperiod.15", "loan.daysinperiod.18", "loan.daysinperiod.180", "loan.daysinperiod.182", "loan.daysinperiod.1B", "loan.daysinperiod.2", "loan.daysinperiod.20", "loan.daysinperiod.24", "loan.daysinperiod.26", "loan.daysinperiod.28", "loan.daysinperiod.3", "loan.daysinperiod.30", "loan.daysinperiod.36", "loan.daysinperiod.360", "loan.daysinperiod.364", "loan.daysinperiod.365", "loan.daysinperiod.4", "loan.daysinperiod.40", "loan.daysinperiod.45", "loan.daysinperiod.5", "loan.daysinperiod.52", "loan.daysinperiod.6", "loan.daysinperiod.60", "loan.daysinperiod.72", "loan.daysinperiod.73", "loan.daysinperiod.8", "loan.daysinperiod.9", "loan.daysinperiod.90", "loan.daysinperiod.91" ],
					"x-see": true
				},
				"roundDecimals": {
					"type": "integer",
					"description": "Round Decimal places",
					"example": "5",
					"x-mapField": "round_decimals",
					"format": "int32"
				},
				"lastAsFinal": {
					"type": "integer",
					"description": "Last payment as final? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "last_as_final",
					"format": "int32"
				},
				"nddCalc": {
					"type": "string",
					"description": "NDD Calculation type",
					"example": "loan.nddCalc.standard",
					"x-mapField": "ndd_calc",
					"enum": [ "loan.nddCalc.interestOnly", "loan.nddCalc.standard" ],
					"x-see": true
				},
				"endInterest": {
					"type": "string",
					"description": "End interest type",
					"example": "loan.endInterest.no",
					"x-mapField": "end_interest",
					"enum": [ "loan.endInterest.loanExp", "loan.endInterest.no" ],
					"x-see": true
				},
				"scheduleTemplate": {
					"type": "integer",
					"description": "Schedule template id to use",
					"example": "0",
					"x-mapField": "schedule_template",
					"format": "int32"
				},
				"curtailmentTemplate": {
					"type": "integer",
					"description": "Curtailment template id to use",
					"example": "1",
					"x-mapField": "curtailment_template",
					"format": "int32"
				},
				"feesPaidBy": {
					"type": "string",
					"description": "Fees paid by method",
					"example": "loan.feesPaidBy.date",
					"x-mapField": "fees_paid_by",
					"enum": [ "loan.feesPaidBy.date", "loan.feesPaidBy.period" ],
					"x-see": true
				},
				"useInterestTiers": {
					"type": "integer",
					"description": "Use interest tiers? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "use_interest_tiers",
					"format": "int32"
				},
				"graceDays": {
					"type": "integer",
					"description": "Grace period (days)",
					"example": "5",
					"x-mapField": "grace_days",
					"format": "int32"
				},
				"lateFeeType": {
					"type": "string",
					"description": "Late fee type",
					"example": "loan.lateFee.3",
					"x-mapField": "late_fee_type",
					"enum": [ "loan.lateFee.1", "loan.lateFee.2", "loan.lateFee.3", "loan.lateFee.4", "loan.lateFee.5" ],
					"x-see": true
				},
				"lateFeeAmount": {
					"type": "number",
					"description": "Late fee amount",
					"example": "30.00",
					"x-mapField": "late_fee_amount",
					"format": "float"
				},
				"lateFeePercent": {
					"type": "number",
					"description": "Late fee percentage",
					"example": "10.00",
					"x-mapField": "late_fee_percent",
					"format": "float"
				},
				"lateFeeCalc": {
					"type": "string",
					"description": "Late fee calculation method",
					"example": "loan.lateFeeCalc.standard",
					"x-mapField": "late_fee_calc",
					"enum": [ "loan.lateFeeCalc.current", "loan.lateFeeCalc.standard", "loan.lateFeeCalc.standardFee" ],
					"x-see": true
				},
				"lateFeePercentBase": {
					"type": "string",
					"description": "Late fee percentage base",
					"example": "loan.latefeepercentbase.regular",
					"x-mapField": "latefee_percent_base",
					"enum": [ "loan.latefeepercentbase.escrow", "loan.latefeepercentbase.escrowHold", "loan.latefeepercentbase.hold", "loan.latefeepercentbase.regular" ],
					"x-see": true
				},
				"rollLastPayment": {
					"type": "integer",
					"description": "Roll last payment? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "roll_last_payment",
					"format": "int32"
				},
				"paymentDateApp": {
					"type": "string",
					"description": "Payment date application method",
					"example": "loan.pmtdateapp.actual",
					"x-mapField": "payment_date_app",
					"enum": [ "loan.pmtdateapp.actual", "loan.pmtdateapp.last" ],
					"x-see": true
				},
				"enrollNewLoans": {
					"type": "integer",
					"x-mapField": "enroll_new_loans",
					"format": "int32"
				},
				"enrollExistingLoans": {
					"type": "integer",
					"x-mapField": "enroll_existing_loans",
					"format": "int32"
				},
				"enabled": {
					"type": "integer",
					"x-mapField": "enabled",
					"format": "int32"
				},
				"evalInRealTime": {
					"type": "integer",
					"x-mapField": "eval_real_time",
					"format": "int32"
				},
				"evalInDailyMaint": {
					"type": "integer",
					"x-mapField": "eval_in_daily_maint",
					"format": "int32"
				},
				"execPreActivation": {
					"type": "integer",
					"x-mapField": "exec_pre_activation",
					"format": "int32"
				},
				"forcing": {
					"type": "integer",
					"x-mapField": "forcing",
					"format": "int32"
				},
				"order": {
					"type": "integer",
					"x-mapField": "global_order",
					"format": "int32"
				},
				"loanEnabled": {
					"type": "integer",
					"format": "int32"
				},
				"DefaultsEscrowCalculator": {
					"$ref": "#\/definitions\/DefaultsEscrowCalculator",
					"x-not-in-post": false
				},
				"EscrowSubsets": {
					"$ref": "#\/definitions\/EscrowSubsets",
					"x-not-in-post": false
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": false
				}
			}
		},
		"RuleAppliedBankruptcy": {
			"required": [ "name", "rule" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"x-mapField": "name"
				},
				"rule": {
					"type": "string",
					"x-mapField": "rule"
				},
				"enrollNewLoans": {
					"type": "integer",
					"x-mapField": "enroll_new_loans",
					"format": "int32"
				},
				"enrollExistingLoans": {
					"type": "integer",
					"x-mapField": "enroll_existing_loans",
					"format": "int32"
				},
				"enabled": {
					"type": "integer",
					"x-mapField": "enabled",
					"format": "int32"
				},
				"evalInRealTime": {
					"type": "integer",
					"x-mapField": "eval_real_time",
					"format": "int32"
				},
				"evalInDailyMaint": {
					"type": "integer",
					"x-mapField": "eval_in_daily_maint",
					"format": "int32"
				},
				"execPreActivation": {
					"type": "integer",
					"x-mapField": "exec_pre_activation",
					"format": "int32"
				},
				"forcing": {
					"type": "integer",
					"x-mapField": "forcing",
					"format": "int32"
				},
				"order": {
					"type": "integer",
					"x-mapField": "global_order",
					"format": "int32"
				},
				"chapter": {
					"type": "string",
					"x-mapField": "chapter",
					"enum": [ "loan.bankruptcyChapter.chapter11", "loan.bankruptcyChapter.chapter12", "loan.bankruptcyChapter.chapter128", "loan.bankruptcyChapter.chapter13", "loan.bankruptcyChapter.chapter7", "loan.bankruptcyChapter.chapter9" ],
					"x-see": true
				},
				"petitionStatus": {
					"type": "string",
					"x-mapField": "petition_status",
					"enum": [ "loan.bankruptcyPetitionStatus.discharged", "loan.bankruptcyPetitionStatus.dismissed", "loan.bankruptcyPetitionStatus.petitionFiled", "loan.bankruptcyPetitionStatus.planConfirmed", "loan.bankruptcyPetitionStatus.reaffirmed" ],
					"x-see": true
				},
				"processStatus": {
					"type": "string",
					"x-mapField": "process_status"
				},
				"caseNumber": {
					"type": "string",
					"x-mapField": "case_number"
				},
				"filingDate": {
					"type": "integer",
					"x-mapField": "filing_date",
					"format": "int32"
				},
				"filingDateSetting": {
					"type": "string",
					"x-mapField": "filing_date_setting"
				},
				"noticeReceivedDate": {
					"type": "integer",
					"x-mapField": "notice_received_date",
					"format": "int32"
				},
				"noticeReceivedDateSetting": {
					"type": "string",
					"x-mapField": "notice_received_date_setting"
				},
				"automaticStayStatus": {
					"type": "string",
					"x-mapField": "automatic_stay_status"
				},
				"customerId": {
					"type": "string",
					"x-mapField": "customer_id"
				},
				"customerRole": {
					"type": "string",
					"x-mapField": "customer_role"
				},
				"petitionType": {
					"type": "string",
					"x-mapField": "petition_type"
				},
				"bankruptcyDistrict": {
					"type": "string",
					"x-mapField": "bankruptcy_district"
				},
				"city": {
					"type": "string",
					"x-mapField": "city"
				},
				"state": {
					"type": "string",
					"x-mapField": "state"
				},
				"proofOfClaimDeadlineDate": {
					"type": "integer",
					"x-mapField": "proof_of_claim_deadline_date",
					"format": "int32"
				},
				"proofOfClaimDeadlineDateSetting": {
					"type": "string",
					"x-mapField": "proof_of_claim_deadline_date_setting"
				},
				"meetingOfCreditorsDate": {
					"type": "integer",
					"x-mapField": "meeting_of_creditors_date",
					"format": "int32"
				},
				"meetingOfCreditorsDateSetting": {
					"type": "string",
					"x-mapField": "meeting_of_creditors_date_setting"
				},
				"objectionDeadlineDate": {
					"type": "integer",
					"x-mapField": "objection_deadline_date",
					"format": "int32"
				},
				"objectionDeadlineDateSetting": {
					"type": "string",
					"x-mapField": "objection_deadline_date_setting"
				},
				"objectionStatus": {
					"type": "string",
					"x-mapField": "objection_status"
				},
				"lienedPropertyStatus": {
					"type": "string",
					"x-mapField": "liened_property_status"
				},
				"proofOfClaimFiledStatus": {
					"type": "string",
					"x-mapField": "proof_of_claim_filed_status"
				},
				"proofOfClaimFiledDate": {
					"type": "integer",
					"x-mapField": "proof_of_claim_filed_date",
					"format": "int32"
				},
				"proofOfClaimFiledDateSetting": {
					"type": "string",
					"x-mapField": "proof_of_claim_filed_date_setting"
				},
				"dismissedDate": {
					"type": "integer",
					"x-mapField": "dismissed_date",
					"format": "int32"
				},
				"dismissedDateSetting": {
					"type": "string",
					"x-mapField": "dismissed_date_setting"
				},
				"closedReason": {
					"type": "string",
					"x-mapField": "closed_reason"
				},
				"loanEnabled": {
					"type": "integer",
					"format": "int32"
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": false
				}
			}
		},
		"tenantRoleSettings": {
			"properties": {
				"id": {
					"type": "string",
					"readOnly": true,
					"x-isKey": true
				},
				"tenantRoleId": {
					"type": "integer",
					"x-isKey": true,
					"x-mapField": "tenant_role_id",
					"format": "int32"
				},
				"type": { "type": "string" },
				"label": { "type": "string" },
				"value": { "type": "string" }
			}
		},
		"HoldingAccountTransactions": {
			"required": [ "type" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"holdingAccountId": {
					"type": "integer",
					"readOnly": true,
					"x-mapField": "holding_account_id",
					"format": "int32"
				},
				"amount": {
					"type": "number",
					"description": "Amount charged",
					"example": "1.0=",
					"format": "float"
				},
				"balance": {
					"type": "number",
					"description": "Amount due on the account",
					"example": "3.00",
					"format": "float"
				},
				"type": {
					"type": "string",
					"description": "Type of transaction",
					"example": "transaction.type.deposit",
					"enum": [ "holdingAccount.transactionType.deposit", "holdingAccount.transactionType.withdraw" ],
					"x-see": true
				},
				"subType": {
					"type": "string",
					"description": "Sub Type of transaction",
					"example": "transaction.type.deposit"
				},
				"date": {
					"type": "string",
					"format": "date-time"
				},
				"description": {
					"type": "string",
					"description": "Description of the transaction",
					"example": "Transaction 1"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Unix timestamp of when the transaction was created",
					"example": "\/Date(1487965498)\/",
					"format": "date-time"
				},
				"HoldingAccountTransactionCategories": {
					"$ref": "#\/definitions\/HoldingAccountTransactionCategories",
					"x-not-in-post": false
				}
			}
		},
		"HoldingAccountStatus": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"title": { "type": "string" },
				"active": {
					"type": "integer",
					"format": "int32"
				},
				"HoldingAccountSubStatus": {
					"$ref": "#\/definitions\/HoldingAccountSubStatus",
					"x-not-in-post": false
				}
			}
		},
		"HoldingAccountSubStatus": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"title": { "type": "string" },
				"displayOrder": {
					"type": "integer",
					"x-mapField": "display_order",
					"format": "int32"
				},
				"parentId": {
					"type": "integer",
					"readOnly": true,
					"x-mapField": "parent_id",
					"format": "int32"
				},
				"emailEnrollment": {
					"type": "integer",
					"x-mapField": "email_enrollment",
					"format": "int32"
				},
				"smsEnrollment": {
					"type": "integer",
					"x-mapField": "sms_enrollment",
					"format": "int32"
				},
				"webAccessEnrollment": {
					"type": "integer",
					"x-mapField": "web_access_enrollment",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"HoldingAccountSettings": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"accountId": {
					"type": "integer",
					"readOnly": true,
					"x-mapField": "account_id",
					"format": "int32"
				},
				"statusId": {
					"type": "integer",
					"x-mapField": "status_id",
					"format": "int32"
				},
				"subStatusId": {
					"type": "integer",
					"x-mapField": "sub_status_id",
					"format": "int32"
				},
				"accountType": {
					"type": "string",
					"x-mapField": "account_type"
				},
				"HoldingAccountStatus": {
					"$ref": "#\/definitions\/HoldingAccountStatus",
					"x-not-in-post": false
				},
				"HoldingAccountSubStatus": {
					"$ref": "#\/definitions\/HoldingAccountSubStatus",
					"x-not-in-post": false
				}
			}
		},
		"HoldingAccountTransactionCategories": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"name": {
					"type": "string",
					"x-mapField": "category_name"
				},
				"transactionType": {
					"type": "string",
					"x-mapField": "transaction_type"
				},
				"active": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"HoldingAccountAutopays": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"name": {
					"type": "string",
					"description": "The name of the Autopay",
					"example": "Autopay 1"
				},
				"type": {
					"type": "string",
					"description": "The type of the Autopay",
					"example": "autopay.type.single"
				},
				"holdingAccountId": {
					"type": "integer",
					"readOnly": true,
					"x-mapField": "holding_account_id",
					"format": "int32"
				},
				"applyDate": {
					"type": "string",
					"description": "The appliction date of the autopay (Unix Timestamp)",
					"example": "\/Date(1456798832)\/",
					"x-mapField": "apply_date",
					"format": "date-time"
				},
				"processDateTime": {
					"type": "string",
					"description": "The process Date of the autopay (Unix timestamp)",
					"example": "\/Date(1654687496)\/",
					"x-mapField": "process_datetime",
					"format": "date-time"
				},
				"amount": {
					"type": "number",
					"description": "The amount to pay",
					"example": "200.00",
					"format": "double"
				},
				"recurringFrequency": {
					"type": "string",
					"description": "Recurring frequency",
					"example": "autopay.recurringFrequency.monthly",
					"x-mapField": "recurring_frequency"
				},
				"recurringPeriods": {
					"type": "integer",
					"description": "Number of recurring periods",
					"example": "2",
					"x-mapField": "recurring_periods",
					"format": "int32"
				},
				"daysInPeriod": {
					"type": "string",
					"description": "Number of days in period",
					"example": "null",
					"x-mapField": "days_in_period"
				},
				"lastDayOfMonthEnabled": {
					"type": "integer",
					"description": "Pay on the last day of the month (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "last_dom_enabled",
					"format": "int32"
				},
				"status": {
					"type": "string",
					"description": "Autopay status",
					"example": "autopay.status.cancelled"
				},
				"active": {
					"type": "integer",
					"description": "Is active? (1:Yes 0:No)",
					"example": "0",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"description": "Date created (Unix timestamp, Read Only)",
					"example": "\/Date(123456798)\/",
					"format": "date-time"
				},
				"HoldingAccounts": {
					"$ref": "#\/definitions\/HoldingAccounts",
					"x-not-in-post": false
				},
				"PaymentMethods": {
					"$ref": "#\/definitions\/PaymentMethods",
					"x-not-in-post": false
				}
			}
		},
		"DataQueryVariables": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"name": {
					"type": "string",
					"description": "Name of the variable",
					"example": "",
					"x-mapField": "name"
				},
				"friendlyName": {
					"type": "string",
					"description": "Name displayed on the UI",
					"example": "",
					"x-mapField": "friendly_name"
				},
				"format": {
					"type": "string",
					"description": "Format of the variable",
					"example": "context.format.currency",
					"x-mapField": "format"
				}
			}
		},
		"PaymentAccounts": {
			"required": [ "title", "active" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityId": {
					"type": "integer",
					"description": "ID of the parent entity",
					"example": "14",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Type of the parent entity",
					"example": "Entity.Customer",
					"x-mapField": "entity_type"
				},
				"importId": {
					"type": "string",
					"description": "Import Id that idendifies the entity for import references",
					"example": "C1-12",
					"x-mapField": "import_id"
				},
				"isPrimary": {
					"type": "integer",
					"description": "Is it the primary payment method? (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "is_primary",
					"format": "int32"
				},
				"isSecondary": {
					"type": "integer",
					"description": "Is it the secondary payment method? (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "is_secondary",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"x-mapField": "title"
				},
				"type": {
					"type": "string",
					"description": "The payment account type. Possible values are 'paymentAccount.type.credit', 'paymentAccount.type.checking'",
					"x-mapField": "type",
					"enum": [ "paymentAccount.type.checking", "paymentAccount.type.credit" ],
					"x-see": true
				},
				"creditCardId": {
					"type": "integer",
					"x-mapField": "credit_card_id",
					"format": "int32"
				},
				"checkingAccountId": {
					"type": "integer",
					"x-mapField": "checking_account_id",
					"format": "int32"
				},
				"active": {
					"type": "integer",
					"description": "The active status of the bank account (1: active 0: inactive).",
					"x-mapField": "active",
					"format": "int32"
				},
				"verify": {
					"type": "integer",
					"description": "Should the system automatically verify the payment method (1: verify 0: dont't verify).",
					"format": "int32"
				},
				"CheckingAccounts": {
					"$ref": "#\/definitions\/CheckingAccounts",
					"x-not-in-post": false
				},
				"CreditCards": {
					"$ref": "#\/definitions\/CreditCards",
					"x-not-in-post": false
				}
			}
		},
		"LoanCurtailmentDates": {
			"required": [ "date" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"entityType": {
					"type": "string",
					"description": "Type of target entity",
					"example": "Entity.Loan",
					"x-mapField": "entity_type"
				},
				"entityId": {
					"type": "integer",
					"description": "Target Entity ID",
					"example": "1",
					"x-mapField": "entity_id",
					"format": "int32"
				},
				"modId": {
					"type": "integer",
					"description": "Modification ID",
					"example": "1",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"date": {
					"type": "string",
					"description": "Curtailment Date (Unix Timestamp)",
					"example": "\/Date(1427895642)\/",
					"x-mapField": "date",
					"format": "date-time"
				},
				"percent": {
					"type": "number",
					"description": "Curtailment Payment Percentage",
					"example": "25.00",
					"x-mapField": "percent",
					"format": "float"
				},
				"amount": {
					"type": "number",
					"description": "Curtailment Payment Amount",
					"example": "300.00",
					"x-mapField": "amount",
					"format": "float"
				}
			}
		},
		"CurtailmentTemplates": {
			"required": [ "title" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"description": "Title of the template",
					"example": "Curtailment Template 1",
					"x-mapField": "title"
				},
				"CurtailmentTemplateLines": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				}
			}
		},
		"CurtailmentTemplateLines": {
			"required": [ "templateId" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"templateId": {
					"type": "integer",
					"description": "ID of the curtailment template",
					"example": "1",
					"x-mapField": "template_id",
					"format": "int32"
				},
				"days": {
					"type": "integer",
					"description": "Number of days prior to the curtailment payment",
					"example": "30",
					"x-mapField": "days",
					"format": "int32"
				},
				"amount": {
					"type": "number",
					"description": "Static amount of the curtailment payment",
					"example": "1000.00",
					"x-mapField": "amount",
					"format": "float"
				},
				"percent": {
					"type": "number",
					"description": "Percentage of the loan amount used to calculate the payment amount",
					"example": "25.00",
					"x-mapField": "percent",
					"format": "float"
				}
			}
		},
		"MailHouseTool": {
			"required": [ "userId" ],
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"format": "int32"
				},
				"userId": {
					"type": "integer",
					"description": "ID of the user that created the export",
					"example": "12",
					"x-mapField": "user_id",
					"format": "int32"
				},
				"mailHouseId": {
					"type": "integer",
					"description": "Mail House ID for the export",
					"example": "1",
					"x-mapField": "mailhouse_id",
					"format": "int32"
				},
				"query": {
					"type": "string",
					"description": "Query for the export",
					"example": "{\\\"query\\\":null,\\\"aggs\\\":{\\\"sum_loanamount\\\":{\\\"sum\\\":{\\\"field\\\":\\\"loanAmount\\\"}},\\\"avg_loanamount\\\":{\\\"avg\\\":{\\\"field\\\":\\\"loanAmount\\\"}},\\\"sum_payoff\\\":{\\\"sum\\\":{\\\"field\\\":\\\"payoff\\\"}},\\\"avg_payoff\\\":{\\\"avg\\\":{\\\"field\\\":\\\"payoff\\\"}},\\\"avg_loanage\\\":{\\\"avg\\\":{\\\"field\\\":\\\"loanAge\\\"}},\\\"avg_dayspastdue\\\":{\\\"avg\\\":{\\\"field\\\":\\\"daysPastDue\\\"}},\\\"sum_amountdue\\\":{\\\"sum\\\":{\\\"field\\\":\\\"amountDue\\\"}},\\\"avg_amountdue\\\":{\\\"avg\\\":{\\\"field\\\":\\\"amountDue\\\"}},\\\"sum_principalbalance\\\":{\\\"sum\\\":{\\\"field\\\":\\\"principalBalance\\\"}},\\\"avg_principalbalance\\\":{\\\"avg\\\":{\\\"field\\\":\\\"principalBalance\\\"}},\\\"avg_loanrecency\\\":{\\\"avg\\\":{\\\"field\\\":\\\"loanRecency\\\"}},\\\"sum_lastpaymentamount\\\":{\\\"sum\\\":{\\\"field\\\":\\\"lastPaymentAmount\\\"}},\\\"avg_lastpaymentamount\\\":{\\\"avg\\\":{\\\"field\\\":\\\"lastPaymentAmount\\\"}},\\\"sum_nextpaymentamount\\\":{\\\"sum\\\":{\\\"field\\\":\\\"nextPaymentAmount\\\"}},\\\"avg_nextpaymentamount\\\":{\\\"avg\\\":{\\\"field\\\":\\\"nextPaymentAmount\\\"}}}}",
					"x-mapField": "query"
				},
				"done": {
					"type": "string",
					"description": "If the export is done (1:Yes 0:No)",
					"example": "1",
					"x-mapField": "done"
				},
				"fileName": {
					"type": "string",
					"description": "Name of the exported file",
					"example": "demoexport.pdf",
					"x-mapField": "file_name"
				},
				"url": {
					"type": "string",
					"description": "URL for the download",
					"example": "http:\/\/example.com\/test.pdf",
					"x-mapField": "url"
				},
				"active": {
					"type": "integer",
					"description": "If it is active (1:Yes 0:No)",
					"example": "0",
					"x-mapField": "active",
					"format": "int32"
				},
				"created": {
					"type": "string",
					"description": "Date of creation (Unix timestamp)",
					"example": "\/Date(14205876983)\/",
					"format": "date-time"
				},
				"start": {
					"type": "integer",
					"description": "Start of the export",
					"example": null,
					"format": "int32"
				},
				"size": {
					"type": "integer",
					"description": "Size of the exported file (bytes)",
					"example": "5246",
					"format": "int32"
				},
				"orderby": {
					"type": "string",
					"description": "Order by method",
					"example": null
				},
				"createUser": {
					"type": "string",
					"description": "User that created the export",
					"example": "Bob"
				},
				"Loans": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				},
				"Users": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				},
				"MailHouse": {
					"$ref": "#\/definitions\/Error-OData",
					"x-not-in-post": false
				}
			}
		},
		"HoldingAccounts": {
			"properties": {
				"id": {
					"type": "integer",
					"readOnly": true,
					"x-isKey": true,
					"x-mapField": "id",
					"format": "int32"
				},
				"displayId": {
					"type": "string",
					"x-mapField": "display_id"
				},
				"modId": {
					"type": "integer",
					"x-mapField": "mod_id",
					"format": "int32"
				},
				"title": {
					"type": "string",
					"x-mapField": "title"
				},
				"type": {
					"type": "string",
					"x-mapField": "type"
				},
				"created": {
					"type": "string",
					"readOnly": true,
					"x-mapField": "created",
					"format": "date-time"
				},
				"active": {
					"type": "integer",
					"x-mapField": "active",
					"format": "int32"
				},
				"HoldingAccountSettings": {
					"$ref": "#\/definitions\/HoldingAccountSettings",
					"x-not-in-post": false
				},
				"CustomFieldValues": {
					"$ref": "#\/definitions\/CustomFieldValues",
					"x-not-in-post": false
				},
				"ChecklistItemValues": {
					"$ref": "#\/definitions\/ChecklistItemValues",
					"x-not-in-post": false
				},
				"Notes": {
					"$ref": "#\/definitions\/Notes",
					"x-not-in-post": false
				},
				"InvestmentDocuments": {
					"$ref": "#\/definitions\/InvestmentDocuments",
					"x-not-in-post": false
				},
				"Charges": {
					"$ref": "#\/definitions\/Charges",
					"x-not-in-post": false
				},
				"LoanAdvancements": {
					"$ref": "#\/definitions\/LoanAdvancements",
					"x-not-in-post": false
				},
				"LoanCredits": {
					"$ref": "#\/definitions\/LoanCredits",
					"x-not-in-post": false
				},
				"HoldingAccountTransactions": {
					"$ref": "#\/definitions\/HoldingAccountTransactions",
					"x-not-in-post": false
				},
				"LoanDueDateChanges": {
					"$ref": "#\/definitions\/LoanDueDateChanges",
					"x-not-in-post": false
				},
				"ScheduleRolls": {
					"$ref": "#\/definitions\/ScheduleRolls",
					"x-not-in-post": false
				},
				"StopInterestDates": {
					"$ref": "#\/definitions\/StopInterestDates",
					"x-not-in-post": false
				},
				"LoanModifications": {
					"$ref": "#\/definitions\/LoanModifications",
					"x-not-in-post": false
				},
				"EscrowAdjustments": {
					"$ref": "#\/definitions\/EscrowAdjustments",
					"x-not-in-post": false
				},
				"EscrowCalculators": {
					"$ref": "#\/definitions\/EscrowCalculators",
					"x-not-in-post": false
				},
				"Portfolios": {
					"$ref": "#\/definitions\/Portfolios",
					"x-not-in-post": false
				},
				"SubPortfolios": {
					"$ref": "#\/definitions\/SubPortfolios",
					"x-not-in-post": false
				},
				"Investors": {
					"$ref": "#\/definitions\/Investors",
					"x-not-in-post": false
				},
				"HoldingAccountAutopays": {
					"$ref": "#\/definitions\/HoldingAccountAutopays",
					"x-not-in-post": false
				}
			}
		},
		"CompanyEmails": { "properties": { "error": { "type": "string" } } },
		"CompanyPhones": { "properties": { "error": { "type": "string" } } },
		"TenantSBTSettings": { "properties": { "error": { "type": "string" } } },
		"AgentUsers": { "properties": { "error": { "type": "string" } } },
		"PricingModels": { "properties": { "error": { "type": "string" } } },
		"WhiteLabels": { "properties": { "error": { "type": "string" } } },
		"Bankruptcies": { "properties": { "error": { "type": "string" } } },
		"Disbursements": { "properties": { "error": { "type": "string" } } },
		"RuleAppliedAutopays": { "properties": { "error": { "type": "string" } } },
		"ActionResultNotes": { "properties": { "error": { "type": "string" } } },
		"CheckingAccounts": { "properties": { "error": { "type": "string" } } },
		"Vendors": { "properties": { "error": { "type": "string" } } },
		"DefaultsEscrowCalculator": { "properties": { "error": { "type": "string" } } },
		"PreConfiguredLoanSettings": { "properties": { "error": { "type": "string" } } },
		"SocialProfiles": { "properties": { "error": { "type": "string" } } },
		"MerchantProcessorGroups": { "properties": { "error": { "type": "string" } } },
		"TimeSlots": { "properties": { "error": { "type": "string" } } },
		"dynamicProperties": { "properties": { "error": { "type": "string" } } },
		"RuleCategories": { "properties": { "error": { "type": "string" } } },
		"DefaultBillingThemes": { "properties": { "error": { "type": "string" } } },
		"Deliveries": { "properties": { "error": { "type": "string" } } },
		"LeadChecklistCategories": { "properties": { "error": { "type": "string" } } },
		"LeadDemo": { "properties": { "error": { "type": "string" } } },
		"LeadChecklists": { "properties": { "error": { "type": "string" } } },
		"MasterNotes": { "properties": { "error": { "type": "string" } } },
		"PricingPackages": { "properties": { "error": { "type": "string" } } },
		"TenantRoleResources": { "properties": { "error": { "type": "string" } } },
		"TenantRoleSettings": { "properties": { "error": { "type": "string" } } },
		"EmailDelivery": { "properties": { "error": { "type": "string" } } },
		"WebDelivery": { "properties": { "error": { "type": "string" } } },
		"SmsDelivery": { "properties": { "error": { "type": "string" } } },
		"MailHouseDelivery": { "properties": { "error": { "type": "string" } } },
		"WebHookDelivery": { "properties": { "error": { "type": "string" } } },
		"CustomBoardingProcessSteps": { "properties": { "error": { "type": "string" } } },
		"IPRestrictionEntries": { "properties": { "error": { "type": "string" } } },
		"TenantChecklistCategories": { "properties": { "error": { "type": "string" } } },
		"TopicDefinitions": { "properties": { "error": { "type": "string" } } },
		"SupportCodes": { "properties": { "error": { "type": "string" } } },
		"Tenants": { "properties": { "error": { "type": "string" } } },
		"ThreadComments": { "properties": { "error": { "type": "string" } } },
		"SearchRestrictionSettings": { "properties": { "error": { "type": "string" } } },
		"PortfoliosToDelete": { "properties": { "error": { "type": "string" } } },
		"SubPortfoliosToDelete": { "properties": { "error": { "type": "string" } } },
		"SoundGroupItems": { "properties": { "error": { "type": "string" } } },
		"PaymentMethods": { "properties": { "error": { "type": "string" } } },
		"CreditCards": { "properties": { "error": { "type": "string" } } },
		"EscrowAnalysisTasks": { "properties": { "error": { "type": "string" } } },
		"ViewWidgets": { "properties": { "error": { "type": "string" } } },
		"ViewModules": { "properties": { "error": { "type": "string" } } },
		"PricingModelTierEntries": { "properties": { "error": { "type": "string" } } },
		"MailHouse": { "properties": { "error": { "type": "string" } } },
		"PreConfiguredLoans": { "properties": { "error": { "type": "string" } } },
		"MerchantProcessorItems": { "properties": { "error": { "type": "string" } } },
		"DashboardWidgets": { "properties": { "error": { "type": "string" } } },
		"Dashboards": { "properties": { "error": { "type": "string" } } },
		"WizardSteps": { "properties": { "error": { "type": "string" } } },
		"WizardProcessValidations": { "properties": { "error": { "type": "string" } } },
		"WizardCategories": { "properties": { "error": { "type": "string" } } },
		"TenantRoles": { "properties": { "error": { "type": "string" } } },
		"WizardStepItems": { "properties": { "error": { "type": "string" } } },
		"Wizards": { "properties": { "error": { "type": "string" } } },
		"ActionResultAssociations": { "properties": { "error": { "type": "string" } } },
		"BaseVariables": { "properties": { "error": { "type": "string" } } },
		"ActionResultSelectionItems": { "properties": { "error": { "type": "string" } } },
		"CompanyProfiles": { "properties": { "error": { "type": "string" } } },
		"Actions": { "properties": { "error": { "type": "string" } } },
		"ActionResults": { "properties": { "error": { "type": "string" } } }
	}
}